/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={272:(e,t,n)=>{"use strict";var r=n(723),o=[],i=[],l=r.makeRequestCallFromTimer((function(){if(i.length)throw i.shift()}));function a(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=a,u.prototype.call=function(){try{this.task.call()}catch(e){a.onerror?a.onerror(e):(i.push(e),l())}finally{this.task=null,o[o.length]=this}}},723:(e,t,n)=>{"use strict";function r(e){i.length||o(),i[i.length]=e}e.exports=r;var o,i=[],l=0;function a(){for(;l<i.length;){var e=l;if(l+=1,i[e].call(),l>1024){for(var t=0,n=i.length-l;t<n;t++)i[t]=i[t+l];i.length-=l,l=0}}i.length=0,l=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(a),s=document.createTextNode(""),c.observe(s,{characterData:!0}),o=function(){u=-u,s.data=u}):o=p(a),r.requestFlush=o,r.makeRequestCallFromTimer=p},342:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(15),o=n.n(r),i=n(645),l=n.n(i)()(o());l.push([e.id,":root {\n  --main-color: #e01d3f;\n}\n\n.footer {\n  border-top: 3px solid var(--main-color);\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  bottom: 0;\n  font-style: italic;\n}\n","",{version:3,sources:["webpack://./src/Footer/Footer.css"],names:[],mappings:"AAAA;EACE,qBAAqB;AACvB;;AAEA;EACE,uCAAuC;EACvC,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,eAAe;EACf,SAAS;EACT,kBAAkB;AACpB",sourcesContent:[":root {\n  --main-color: #e01d3f;\n}\n\n.footer {\n  border-top: 3px solid var(--main-color);\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  bottom: 0;\n  font-style: italic;\n}\n"],sourceRoot:""}]);const a=l},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(o[l]=!0)}for(var a=0;a<e.length;a++){var u=[].concat(e[a]);r&&o[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},15:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=n){var r,o,i=[],l=!0,a=!1;try{for(n=n.call(e);!(l=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);l=!0);}catch(e){a=!0,o=e}finally{try{l||null==n.return||n.return()}finally{if(a)throw o}}return i}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],l=o[3];if(!l)return i;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(l)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),c="/*# ".concat(u," */"),s=l.sources.map((function(e){return"/*# sourceURL=".concat(l.sourceRoot||"").concat(e," */")}));return[i].concat(s).concat([c]).join("\n")}return[i].join("\n")}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var l,a,u=o(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){a=t(l);for(var f=0;f<a.length;f++)r.call(l,a[f])&&(u[a[f]]=l[a[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),i=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));function a(e,t,n,r,o,i,l,a,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,s=!1,f=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,o,i,l,s,f){u=!1,c=null,a.apply(d,arguments)}var m=null,h=null,y=null;function g(e,t,n){var r=e.type||"unknown-event";e.currentTarget=y(n),function(e,t,n,r,o,i,a,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(l(198));var h=c;u=!1,c=null,s||(s=!0,f=h)}}(r,t,void 0,e),e.currentTarget=null}var v=null,b={};function w(){if(v)for(var e in b){var t=b[e],n=v.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!x[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in x[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;if(E.hasOwnProperty(u))throw Error(l(99,u));E[u]=i;var c=i.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&k(c[o],a,u);o=!0}else i.registrationName?(k(i.registrationName,a,u),o=!0):o=!1;if(!o)throw Error(l(98,r,e))}}}}function k(e,t,n){if(S[e])throw Error(l(100,e));S[e]=t,T[e]=t.eventTypes[n].dependencies}var x=[],E={},S={},T={};function C(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(l(102,t));b[t]=r,n=!0}}n&&w()}var _=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,O=null,N=null;function M(e){if(e=h(e)){if("function"!=typeof P)throw Error(l(280));var t=e.stateNode;t&&(t=m(t),P(e.stateNode,e.type,t))}}function R(e){O?N?N.push(e):N=[e]:O=e}function z(){if(O){var e=O,t=N;if(N=O=null,M(e),t)for(e=0;e<t.length;e++)M(t[e])}}function j(e,t){return e(t)}function I(e,t,n,r,o){return e(t,n,r,o)}function A(){}var F=j,D=!1,L=!1;function B(){null===O&&null===N||(A(),z())}function W(e,t,n){if(L)return e(t,n);L=!0;try{return F(e,t,n)}finally{L=!1,B()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,H=Object.prototype.hasOwnProperty,V={},Q={};function $(e,t,n,r,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new $(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new $(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new $(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new $(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new $(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new $(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new $(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new $(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new $(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function G(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,G);K[t]=new $(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,G);K[t]=new $(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,G);K[t]=new $(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new $(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new $("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new $(e,1,!1,e.toLowerCase(),null,!0)}));var Y=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,n,r){var o=K.hasOwnProperty(t)?K[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!H.call(Q,e)||!H.call(V,e)&&(U.test(e)?Q[e]=!0:(V[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var Z=/^(.*)[\\\/]/,J="function"==typeof Symbol&&Symbol.for,ee=J?Symbol.for("react.element"):60103,te=J?Symbol.for("react.portal"):60106,ne=J?Symbol.for("react.fragment"):60107,re=J?Symbol.for("react.strict_mode"):60108,oe=J?Symbol.for("react.profiler"):60114,ie=J?Symbol.for("react.provider"):60109,le=J?Symbol.for("react.context"):60110,ae=J?Symbol.for("react.concurrent_mode"):60111,ue=J?Symbol.for("react.forward_ref"):60112,ce=J?Symbol.for("react.suspense"):60113,se=J?Symbol.for("react.suspense_list"):60120,fe=J?Symbol.for("react.memo"):60115,de=J?Symbol.for("react.lazy"):60116,pe=J?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ye(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case oe:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case le:return"Context.Consumer";case ie:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ye(e.type);case pe:return ye(e.render);case de:if(e=1===e._status?e._result:null)return ye(e)}return null}function ge(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,i=ye(e.type);n=null,r&&(n=ye(r.type)),r=i,i="",o?i=" (at "+o.fileName.replace(Z,"")+":"+o.lineNumber+")":n&&(i=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+i}t+=n,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function xe(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ve(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Te(e,t){Se(e,t);var n=ve(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?_e(e,t.type,n):t.hasOwnProperty("defaultValue")&&_e(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Ce(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function _e(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ve(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Me(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ve(n)}}function Re(e,t){var n=ve(t.value),r=ve(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ze(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function je(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ie(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?je(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Ae,Fe,De=(Fe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((Ae=Ae||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ae.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return Fe(e,t)}))}:Fe);function Le(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var We={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},Ue={},He={};function Ve(e){if(Ue[e])return Ue[e];if(!We[e])return e;var t,n=We[e];for(t in n)if(n.hasOwnProperty(t)&&t in He)return Ue[e]=n[t];return e}_&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var Qe=Ve("animationend"),$e=Ve("animationiteration"),Ke=Ve("animationstart"),qe=Ve("transitionend"),Ge="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ye=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ye.get(e);return void 0===t&&(t=new Map,Ye.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function et(e){if(Ze(e)!==e)throw Error(l(188))}function tt(e){if(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(r=o.return)){n=r;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===n)return et(o),e;if(i===r)return et(o),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=i;else{for(var a=!1,u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e),!e)return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function rt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function it(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)g(e,t[r],n[r]);else t&&g(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=nt(ot,e)),e=ot,ot=null,e){if(rt(e,it),ot)throw Error(l(95));if(s)throw e=f,s=!1,f=null,e}}function at(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!_)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function ft(e,t,n,r){if(ct.length){var o=ct.pop();return o.topLevelType=e,o.eventSystemFlags=r,o.nativeEvent=t,o.targetInst=n,o}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function dt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=On(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=at(e.nativeEvent);r=e.topLevelType;var i=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<x.length;u++){var c=x[u];c&&(c=c.extractEvents(r,t,i,o,l))&&(a=nt(a,c))}lt(a)}}function pt(e,t,n){if(!n.has(e)){switch(e){case"scroll":Kt(t,"scroll",!0);break;case"focus":case"blur":Kt(t,"focus",!0),Kt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ut(e)&&Kt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ge.indexOf(e)&&$t(e,t)}n.set(e,null)}}var mt,ht,yt,gt=!1,vt=[],bt=null,wt=null,kt=null,xt=new Map,Et=new Map,St=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function _t(e,t,n,r,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:o,container:r}}function Pt(e,t){switch(e){case"focus":case"blur":bt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":xt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Et.delete(t.pointerId)}}function Ot(e,t,n,r,o,i){return null===e||e.nativeEvent!==i?(e=_t(t,n,r,o,i),null!==t&&null!==(t=Nn(t))&&ht(t),e):(e.eventSystemFlags|=r,e)}function Nt(e){var t=On(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Je(n)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Nn(t);return null!==n&&ht(n),e.blockedOn=t,!1}return!0}function Rt(e,t,n){Mt(e)&&n.delete(t)}function zt(){for(gt=!1;0<vt.length;){var e=vt[0];if(null!==e.blockedOn){null!==(e=Nn(e.blockedOn))&&mt(e);break}var t=Xt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:vt.shift()}null!==bt&&Mt(bt)&&(bt=null),null!==wt&&Mt(wt)&&(wt=null),null!==kt&&Mt(kt)&&(kt=null),xt.forEach(Rt),Et.forEach(Rt)}function jt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,zt)))}function It(e){function t(t){return jt(t,e)}if(0<vt.length){jt(vt[0],e);for(var n=1;n<vt.length;n++){var r=vt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==bt&&jt(bt,e),null!==wt&&jt(wt,e),null!==kt&&jt(kt,e),xt.forEach(t),Et.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Nt(n),null===n.blockedOn&&St.shift()}var At={},Ft=new Map,Dt=new Map,Lt=["abort","abort",Qe,"animationEnd",$e,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",qe,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[r],eventPriority:t},Dt.set(r,t),Ft.set(r,i),At[o]=i}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Lt,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ut=0;Ut<Wt.length;Ut++)Dt.set(Wt[Ut],0);var Ht=i.unstable_UserBlockingPriority,Vt=i.unstable_runWithPriority,Qt=!0;function $t(e,t){Kt(t,e,!1)}function Kt(e,t,n){var r=Dt.get(t);switch(void 0===r?2:r){case 0:r=qt.bind(null,t,1,e);break;case 1:r=Gt.bind(null,t,1,e);break;default:r=Yt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function qt(e,t,n,r){D||A();var o=Yt,i=D;D=!0;try{I(o,e,t,n,r)}finally{(D=i)||B()}}function Gt(e,t,n,r){Vt(Ht,Yt.bind(null,e,t,n,r))}function Yt(e,t,n,r){if(Qt)if(0<vt.length&&-1<Tt.indexOf(e))e=_t(null,e,t,n,r),vt.push(e);else{var o=Xt(e,t,n,r);if(null===o)Pt(e,r);else if(-1<Tt.indexOf(e))e=_t(o,e,t,n,r),vt.push(e);else if(!function(e,t,n,r,o){switch(t){case"focus":return bt=Ot(bt,e,t,n,r,o),!0;case"dragenter":return wt=Ot(wt,e,t,n,r,o),!0;case"mouseover":return kt=Ot(kt,e,t,n,r,o),!0;case"pointerover":var i=o.pointerId;return xt.set(i,Ot(xt.get(i)||null,e,t,n,r,o)),!0;case"gotpointercapture":return i=o.pointerId,Et.set(i,Ot(Et.get(i)||null,e,t,n,r,o)),!0}return!1}(o,e,t,n,r)){Pt(e,r),e=ft(e,r,null,t);try{W(dt,e)}finally{st(e)}}}}function Xt(e,t,n,r){if(null!==(n=On(n=at(r)))){var o=Ze(n);if(null===o)n=null;else{var i=o.tag;if(13===i){if(null!==(n=Je(o)))return n;n=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;n=null}else o!==n&&(n=null)}}e=ft(e,r,n,t);try{W(dt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Jt=["Webkit","ms","Moz","O"];function en(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function tn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=en(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Zt).forEach((function(e){Jt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nn=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function rn(e,t){if(t){if(nn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function on(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln="http://www.w3.org/1999/xhtml";function an(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=T[t];for(var r=0;r<t.length;r++)pt(t[r],e,n)}function un(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function dn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn="$?",yn="$!",gn=null,vn=null;function bn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function wn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var kn="function"==typeof setTimeout?setTimeout:void 0,xn="function"==typeof clearTimeout?clearTimeout:void 0;function En(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Sn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||n===yn||n===hn){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Tn=Math.random().toString(36).slice(2),Cn="__reactInternalInstance$"+Tn,_n="__reactEventHandlers$"+Tn,Pn="__reactContainere$"+Tn;function On(e){var t=e[Cn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Pn]||n[Cn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Sn(e);null!==e;){if(n=e[Cn])return n;e=Sn(e)}return t}n=(e=n).parentNode}return null}function Nn(e){return!(e=e[Cn]||e[Pn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Mn(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function Rn(e){return e[_n]||null}function zn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function jn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function In(e,t,n){(t=jn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function An(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=zn(t);for(t=n.length;0<t--;)In(n[t],"captured",e);for(t=0;t<n.length;t++)In(n[t],"bubbled",e)}}function Fn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=jn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=nt(n._dispatchListeners,t),n._dispatchInstances=nt(n._dispatchInstances,e))}function Dn(e){e&&e.dispatchConfig.registrationName&&Fn(e._targetInst,null,e)}function Ln(e){rt(e,An)}var Bn=null,Wn=null,Un=null;function Hn(){if(Un)return Un;var e,t,n=Wn,r=n.length,o="value"in Bn?Bn.value:Bn.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return Un=o.slice(e,1<t?1-t:void 0)}function Vn(){return!0}function Qn(){return!1}function $n(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:Qn,this.isPropagationStopped=Qn,this}function Kn(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function qn(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Gn(e){e.eventPool=[],e.getPooled=Kn,e.release=qn}o($n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:Qn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Qn,this._dispatchInstances=this._dispatchListeners=null}}),$n.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},$n.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,Gn(n),n},Gn($n);var Yn=$n.extend({data:null}),Xn=$n.extend({data:null}),Zn=[9,13,27,32],Jn=_&&"CompositionEvent"in window,er=null;_&&"documentMode"in document&&(er=document.documentMode);var tr=_&&"TextEvent"in window&&!er,nr=_&&(!Jn||er&&8<er&&11>=er),rr=String.fromCharCode(32),or={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},ir=!1;function lr(e,t){switch(e){case"keyup":return-1!==Zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ar(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ur=!1,cr={eventTypes:or,extractEvents:function(e,t,n,r){var o;if(Jn)e:{switch(e){case"compositionstart":var i=or.compositionStart;break e;case"compositionend":i=or.compositionEnd;break e;case"compositionupdate":i=or.compositionUpdate;break e}i=void 0}else ur?lr(e,n)&&(i=or.compositionEnd):"keydown"===e&&229===n.keyCode&&(i=or.compositionStart);return i?(nr&&"ko"!==n.locale&&(ur||i!==or.compositionStart?i===or.compositionEnd&&ur&&(o=Hn()):(Wn="value"in(Bn=r)?Bn.value:Bn.textContent,ur=!0)),i=Yn.getPooled(i,t,n,r),(o||null!==(o=ar(n)))&&(i.data=o),Ln(i),o=i):o=null,(e=tr?function(e,t){switch(e){case"compositionend":return ar(t);case"keypress":return 32!==t.which?null:(ir=!0,rr);case"textInput":return(e=t.data)===rr&&ir?null:e;default:return null}}(e,n):function(e,t){if(ur)return"compositionend"===e||!Jn&&lr(e,t)?(e=Hn(),Un=Wn=Bn=null,ur=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return nr&&"ko"!==t.locale?null:t.data}}(e,n))?((t=Xn.getPooled(or.beforeInput,t,n,r)).data=e,Ln(t)):t=null,null===o?t:null===t?o:[o,t]}},sr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function fr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!sr[e.type]:"textarea"===t}var dr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function pr(e,t,n){return(e=$n.getPooled(dr.change,e,t,n)).type="change",R(n),Ln(e),e}var mr=null,hr=null;function yr(e){lt(e)}function gr(e){if(ke(Mn(e)))return e}function vr(e,t){if("change"===e)return t}var br=!1;function wr(){mr&&(mr.detachEvent("onpropertychange",kr),hr=mr=null)}function kr(e){if("value"===e.propertyName&&gr(hr))if(e=pr(hr,e,at(e)),D)lt(e);else{D=!0;try{j(yr,e)}finally{D=!1,B()}}}function xr(e,t,n){"focus"===e?(wr(),hr=n,(mr=t).attachEvent("onpropertychange",kr)):"blur"===e&&wr()}function Er(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return gr(hr)}function Sr(e,t){if("click"===e)return gr(t)}function Tr(e,t){if("input"===e||"change"===e)return gr(t)}_&&(br=ut("input")&&(!document.documentMode||9<document.documentMode));var Cr={eventTypes:dr,_isInputEventSupported:br,extractEvents:function(e,t,n,r){var o=t?Mn(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var l=vr;else if(fr(o))if(br)l=Tr;else{l=Er;var a=xr}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(l=Sr);if(l&&(l=l(e,t)))return pr(l,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&_e(o,"number",o.value)}},_r=$n.extend({view:null,detail:null}),Pr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Or(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Pr[e])&&!!t[e]}function Nr(){return Or}var Mr=0,Rr=0,zr=!1,jr=!1,Ir=_r.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Nr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Mr;return Mr=e.screenX,zr?"mousemove"===e.type?e.screenX-t:0:(zr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Rr;return Rr=e.screenY,jr?"mousemove"===e.type?e.screenY-t:0:(jr=!0,0)}}),Ar=Ir.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Dr={eventTypes:Fr,extractEvents:function(e,t,n,r,o){var i="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(n.relatedTarget||n.fromElement)||!l&&!i)return null;if(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?On(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Ir,u=Fr.mouseLeave,c=Fr.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Ar,u=Fr.pointerLeave,c=Fr.pointerEnter,s="pointer");if(e=null==l?i:Mn(l),i=null==t?i:Mn(t),(u=a.getPooled(u,l,n,r)).type=s+"leave",u.target=e,u.relatedTarget=i,(n=a.getPooled(c,t,n,r)).type=s+"enter",n.target=i,n.relatedTarget=e,s=t,(r=l)&&s)e:{for(c=s,l=0,e=a=r;e;e=zn(e))l++;for(e=0,t=c;t;t=zn(t))e++;for(;0<l-e;)a=zn(a),l--;for(;0<e-l;)c=zn(c),e--;for(;l--;){if(a===c||a===c.alternate)break e;a=zn(a),c=zn(c)}a=null}else a=null;for(c=a,a=[];r&&r!==c&&(null===(l=r.alternate)||l!==c);)a.push(r),r=zn(r);for(r=[];s&&s!==c&&(null===(l=s.alternate)||l!==c);)r.push(s),s=zn(s);for(s=0;s<a.length;s++)Fn(a[s],"bubbled",u);for(s=r.length;0<s--;)Fn(r[s],"captured",n);return 0==(64&o)?[u]:[u,n]}},Lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Br=Object.prototype.hasOwnProperty;function Wr(e,t){if(Lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Br.call(t,n[r])||!Lr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=_&&"documentMode"in document&&11>=document.documentMode,Hr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,Qr=null,$r=null,Kr=!1;function qr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Kr||null==Vr||Vr!==cn(n)?null:(n="selectionStart"in(n=Vr)&&mn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$r&&Wr($r,n)?null:($r=n,(e=$n.getPooled(Hr.select,Qr,e,t)).type="select",e.target=Vr,Ln(e),e))}var Gr={eventTypes:Hr,extractEvents:function(e,t,n,r,o,i){if(!(i=!(o=i||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{o=Xe(o),i=T.onSelect;for(var l=0;l<i.length;l++)if(!o.has(i[l])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Mn(t):window,e){case"focus":(fr(o)||"true"===o.contentEditable)&&(Vr=o,Qr=t,$r=null);break;case"blur":$r=Qr=Vr=null;break;case"mousedown":Kr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Kr=!1,qr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return qr(n,r)}return null}},Yr=$n.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Xr=$n.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Zr=_r.extend({relatedTarget:null});function Jr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var eo={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},to={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},no=_r.extend({key:function(e){if(e.key){var t=eo[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Jr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?to[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Nr,charCode:function(e){return"keypress"===e.type?Jr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Jr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ro=Ir.extend({dataTransfer:null}),oo=_r.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Nr}),io=$n.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),lo=Ir.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ao={eventTypes:At,extractEvents:function(e,t,n,r){var o=Ft.get(e);if(!o)return null;switch(e){case"keypress":if(0===Jr(n))return null;case"keydown":case"keyup":e=no;break;case"blur":case"focus":e=Zr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Ir;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ro;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=oo;break;case Qe:case $e:case Ke:e=Yr;break;case qe:e=io;break;case"scroll":e=_r;break;case"wheel":e=lo;break;case"copy":case"cut":case"paste":e=Xr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Ar;break;default:e=$n}return Ln(t=e.getPooled(o,t,n,r)),t}};if(v)throw Error(l(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=Rn,h=Nn,y=Mn,C({SimpleEventPlugin:ao,EnterLeaveEventPlugin:Dr,ChangeEventPlugin:Cr,SelectEventPlugin:Gr,BeforeInputEventPlugin:cr});var uo=[],co=-1;function so(e){0>co||(e.current=uo[co],uo[co]=null,co--)}function fo(e,t){co++,uo[co]=e.current,e.current=t}var po={},mo={current:po},ho={current:!1},yo=po;function go(e,t){var n=e.type.contextTypes;if(!n)return po;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function vo(e){return null!=e.childContextTypes}function bo(){so(ho),so(mo)}function wo(e,t,n){if(mo.current!==po)throw Error(l(168));fo(mo,t),fo(ho,n)}function ko(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(l(108,ye(t)||"Unknown",i));return o({},n,{},r)}function xo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||po,yo=mo.current,fo(mo,e),fo(ho,ho.current),!0}function Eo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=ko(e,t,yo),r.__reactInternalMemoizedMergedChildContext=e,so(ho),so(mo),fo(mo,e)):so(ho),fo(ho,n)}var So=i.unstable_runWithPriority,To=i.unstable_scheduleCallback,Co=i.unstable_cancelCallback,_o=i.unstable_requestPaint,Po=i.unstable_now,Oo=i.unstable_getCurrentPriorityLevel,No=i.unstable_ImmediatePriority,Mo=i.unstable_UserBlockingPriority,Ro=i.unstable_NormalPriority,zo=i.unstable_LowPriority,jo=i.unstable_IdlePriority,Io={},Ao=i.unstable_shouldYield,Fo=void 0!==_o?_o:function(){},Do=null,Lo=null,Bo=!1,Wo=Po(),Uo=1e4>Wo?Po:function(){return Po()-Wo};function Ho(){switch(Oo()){case No:return 99;case Mo:return 98;case Ro:return 97;case zo:return 96;case jo:return 95;default:throw Error(l(332))}}function Vo(e){switch(e){case 99:return No;case 98:return Mo;case 97:return Ro;case 96:return zo;case 95:return jo;default:throw Error(l(332))}}function Qo(e,t){return e=Vo(e),So(e,t)}function $o(e,t,n){return e=Vo(e),To(e,t,n)}function Ko(e){return null===Do?(Do=[e],Lo=To(No,Go)):Do.push(e),Io}function qo(){if(null!==Lo){var e=Lo;Lo=null,Co(e)}Go()}function Go(){if(!Bo&&null!==Do){Bo=!0;var e=0;try{var t=Do;Qo(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),To(No,qo),t}finally{Bo=!1}}}function Yo(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Xo(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Zo={current:null},Jo=null,ei=null,ti=null;function ni(){ti=ei=Jo=null}function ri(e){var t=Zo.current;so(Zo),e.type._context._currentValue=t}function oi(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function ii(e,t){Jo=e,ti=ei=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Rl=!0),e.firstContext=null)}function li(e,t){if(ti!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ti=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ei){if(null===Jo)throw Error(l(308));ei=t,Jo.dependencies={expirationTime:0,firstContext:t,responders:null}}else ei=ei.next=t;return e._currentValue}var ai=!1;function ui(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ci(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function si(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function fi(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function di(e,t){var n=e.alternate;null!==n&&ci(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function pi(e,t,n,r){var i=e.updateQueue;ai=!1;var l=i.baseQueue,a=i.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,i.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var c=i.baseState,s=0,f=null,d=null,p=null;if(null!==u)for(var m=u;;){if((a=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,f=c):p=p.next=h,a>s&&(s=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),cu(a,m.suspenseConfig);e:{var y=e,g=m;switch(a=t,h=n,g.tag){case 1:if("function"==typeof(y=g.payload)){c=y.call(h,c,a);break e}c=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null==(a="function"==typeof(y=g.payload)?y.call(h,c,a):y))break e;c=o({},c,a);break e;case 2:ai=!0}}null!==m.callback&&(e.effectTag|=32,null===(a=i.effects)?i.effects=[m]:a.push(m))}if(null===(m=m.next)||m===u){if(null===(a=i.shared.pending))break;m=l.next=a.next,a.next=u,i.baseQueue=l=a,i.shared.pending=null}}null===p?f=c:p.next=d,i.baseState=f,i.baseQueue=p,su(s),e.expirationTime=s,e.memoizedState=c}}function mi(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=o,o=n,"function"!=typeof r)throw Error(l(191,r));r.call(o)}}}var hi=Y.ReactCurrentBatchConfig,yi=(new r.Component).refs;function gi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ya(),o=hi.suspense;(o=si(r=Xa(r,e,o),o)).payload=t,null!=n&&(o.callback=n),fi(e,o),Za(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ya(),o=hi.suspense;(o=si(r=Xa(r,e,o),o)).tag=1,o.payload=t,null!=n&&(o.callback=n),fi(e,o),Za(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ya(),r=hi.suspense;(r=si(n=Xa(n,e,r),r)).tag=2,null!=t&&(r.callback=t),fi(e,r),Za(e,n)}};function bi(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!(t.prototype&&t.prototype.isPureReactComponent&&Wr(n,r)&&Wr(o,i))}function wi(e,t,n){var r=!1,o=po,i=t.contextType;return"object"==typeof i&&null!==i?i=li(i):(o=vo(t)?yo:mo.current,i=(r=null!=(r=t.contextTypes))?go(e,o):po),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vi,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function ki(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vi.enqueueReplaceState(t,t.state,null)}function xi(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=yi,ui(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=li(i):(i=vo(t)?yo:mo.current,o.context=go(e,i)),pi(e,n,o,r),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(gi(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&vi.enqueueReplaceState(o,o.state,null),pi(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Ei=Array.isArray;function Si(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===yi&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function Ti(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Ci(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Nu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=zu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=Si(e,t,n),r.return=e,r):((r=Mu(n.type,n.key,n.props,null,e.mode,r)).ref=Si(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=ju(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,i){return null===t||7!==t.tag?((t=Ru(n,e.mode,r,i)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=zu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Mu(t.type,t.key,t.props,null,e.mode,n)).ref=Si(e,null,t),n.return=e,n;case te:return(t=ju(t,e.mode,n)).return=e,t}if(Ei(t)||he(t))return(t=Ru(t,e.mode,n,null)).return=e,t;Ti(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===o?n.type===ne?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case te:return n.key===o?s(e,t,n,r):null}if(Ei(n)||he(n))return null!==o?null:f(e,t,n,r,null);Ti(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case te:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Ei(r)||he(r))return f(t,e=e.get(n)||null,r,o,null);Ti(t,r)}return null}function h(o,l,a,u){for(var c=null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(o,f,a[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),l=i(g,l,h),null===s?c=g:s.sibling=g,s=g,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)null!==(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<a.length;h++)null!==(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,a,u,c){var s=he(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,h=a,y=a=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(o,h,v.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=g}if(v.done)return n(o,h),s;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(o,v.value,c))&&(a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return s}for(h=r(o,h);!v.done;y++,v=u.next())null!==(v=m(h,o,y,v.value,c))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),a=i(v,a,y),null===f?s=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(o,e)})),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===ne&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag){if(i.type===ne){n(e,c.sibling),(r=o(c,i.props.children)).return=e,e=r;break e}}else if(c.elementType===i.type){n(e,c.sibling),(r=o(c,i.props)).ref=Si(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===ne?((r=Ru(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Mu(i.type,i.key,i.props,null,e.mode,u)).ref=Si(e,r,i),u.return=e,e=u)}return a(e);case te:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=ju(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=zu(i,e.mode,u)).return=e,e=r),a(e);if(Ei(i))return h(e,r,i,u);if(he(i))return y(e,r,i,u);if(s&&Ti(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var _i=Ci(!0),Pi=Ci(!1),Oi={},Ni={current:Oi},Mi={current:Oi},Ri={current:Oi};function zi(e){if(e===Oi)throw Error(l(174));return e}function ji(e,t){switch(fo(Ri,t),fo(Mi,e),fo(Ni,Oi),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Ie(null,"");break;default:t=Ie(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}so(Ni),fo(Ni,t)}function Ii(){so(Ni),so(Mi),so(Ri)}function Ai(e){zi(Ri.current);var t=zi(Ni.current),n=Ie(t,e.type);t!==n&&(fo(Mi,e),fo(Ni,n))}function Fi(e){Mi.current===e&&(so(Ni),so(Mi))}var Di={current:0};function Li(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===hn||n.data===yn))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Bi(e,t){return{responder:e,props:t}}var Wi=Y.ReactCurrentDispatcher,Ui=Y.ReactCurrentBatchConfig,Hi=0,Vi=null,Qi=null,$i=null,Ki=!1;function qi(){throw Error(l(321))}function Gi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Lr(e[n],t[n]))return!1;return!0}function Yi(e,t,n,r,o,i){if(Hi=i,Vi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Wi.current=null===e||null===e.memoizedState?bl:wl,e=n(r,o),t.expirationTime===Hi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(l(301));i+=1,$i=Qi=null,t.updateQueue=null,Wi.current=kl,e=n(r,o)}while(t.expirationTime===Hi)}if(Wi.current=vl,t=null!==Qi&&null!==Qi.next,Hi=0,$i=Qi=Vi=null,Ki=!1,t)throw Error(l(300));return e}function Xi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===$i?Vi.memoizedState=$i=e:$i=$i.next=e,$i}function Zi(){if(null===Qi){var e=Vi.alternate;e=null!==e?e.memoizedState:null}else e=Qi.next;var t=null===$i?Vi.memoizedState:$i.next;if(null!==t)$i=t,Qi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Qi=e).memoizedState,baseState:Qi.baseState,baseQueue:Qi.baseQueue,queue:Qi.queue,next:null},null===$i?Vi.memoizedState=$i=e:$i=$i.next=e}return $i}function Ji(e,t){return"function"==typeof t?t(e):t}function el(e){var t=Zi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Qi,o=r.baseQueue,i=n.pending;if(null!==i){if(null!==o){var a=o.next;o.next=i.next,i.next=a}r.baseQueue=o=i,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=a=i=null,c=o;do{var s=c.expirationTime;if(s<Hi){var f={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(a=u=f,i=r):u=u.next=f,s>Vi.expirationTime&&(Vi.expirationTime=s,su(s))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),cu(s,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=a,Lr(r,t.memoizedState)||(Rl=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function tl(e){var t=Zi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,i=t.memoizedState;if(null!==o){n.pending=null;var a=o=o.next;do{i=e(i,a.action),a=a.next}while(a!==o);Lr(i,t.memoizedState)||(Rl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function nl(e){var t=Xi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Ji,lastRenderedState:e}).dispatch=gl.bind(null,Vi,e),[t.memoizedState,e]}function rl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Vi.updateQueue)?(t={lastEffect:null},Vi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ol(){return Zi().memoizedState}function il(e,t,n,r){var o=Xi();Vi.effectTag|=e,o.memoizedState=rl(1|t,n,void 0,void 0===r?null:r)}function ll(e,t,n,r){var o=Zi();r=void 0===r?null:r;var i=void 0;if(null!==Qi){var l=Qi.memoizedState;if(i=l.destroy,null!==r&&Gi(r,l.deps))return void rl(t,n,i,r)}Vi.effectTag|=e,o.memoizedState=rl(1|t,n,i,r)}function al(e,t){return il(516,4,e,t)}function ul(e,t){return ll(516,4,e,t)}function cl(e,t){return ll(4,2,e,t)}function sl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function fl(e,t,n){return n=null!=n?n.concat([e]):null,ll(4,2,sl.bind(null,t,e),n)}function dl(){}function pl(e,t){return Xi().memoizedState=[e,void 0===t?null:t],e}function ml(e,t){var n=Zi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Gi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function hl(e,t){var n=Zi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Gi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function yl(e,t,n){var r=Ho();Qo(98>r?98:r,(function(){e(!0)})),Qo(97<r?97:r,(function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{e(!1),n()}finally{Ui.suspense=r}}))}function gl(e,t,n){var r=Ya(),o=hi.suspense;o={expirationTime:r=Xa(r,e,o),suspenseConfig:o,action:n,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Vi||null!==i&&i===Vi)Ki=!0,o.expirationTime=Hi,Vi.expirationTime=Hi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=i(l,n);if(o.eagerReducer=i,o.eagerState=a,Lr(a,l))return}catch(e){}Za(e,r)}}var vl={readContext:li,useCallback:qi,useContext:qi,useEffect:qi,useImperativeHandle:qi,useLayoutEffect:qi,useMemo:qi,useReducer:qi,useRef:qi,useState:qi,useDebugValue:qi,useResponder:qi,useDeferredValue:qi,useTransition:qi},bl={readContext:li,useCallback:pl,useContext:li,useEffect:al,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,il(4,2,sl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return il(4,2,e,t)},useMemo:function(e,t){var n=Xi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Xi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=gl.bind(null,Vi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Xi().memoizedState=e},useState:nl,useDebugValue:dl,useResponder:Bi,useDeferredValue:function(e,t){var n=nl(e),r=n[0],o=n[1];return al((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=nl(!1),n=t[0];return t=t[1],[pl(yl.bind(null,t,e),[t,e]),n]}},wl={readContext:li,useCallback:ml,useContext:li,useEffect:ul,useImperativeHandle:fl,useLayoutEffect:cl,useMemo:hl,useReducer:el,useRef:ol,useState:function(){return el(Ji)},useDebugValue:dl,useResponder:Bi,useDeferredValue:function(e,t){var n=el(Ji),r=n[0],o=n[1];return ul((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=el(Ji),n=t[0];return t=t[1],[ml(yl.bind(null,t,e),[t,e]),n]}},kl={readContext:li,useCallback:ml,useContext:li,useEffect:ul,useImperativeHandle:fl,useLayoutEffect:cl,useMemo:hl,useReducer:tl,useRef:ol,useState:function(){return tl(Ji)},useDebugValue:dl,useResponder:Bi,useDeferredValue:function(e,t){var n=tl(Ji),r=n[0],o=n[1];return ul((function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=n}}),[e,t]),r},useTransition:function(e){var t=tl(Ji),n=t[0];return t=t[1],[ml(yl.bind(null,t,e),[t,e]),n]}},xl=null,El=null,Sl=!1;function Tl(e,t){var n=Pu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Cl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function _l(e){if(Sl){var t=El;if(t){var n=t;if(!Cl(e,t)){if(!(t=En(n.nextSibling))||!Cl(e,t))return e.effectTag=-1025&e.effectTag|2,Sl=!1,void(xl=e);Tl(xl,n)}xl=e,El=En(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Sl=!1,xl=e}}function Pl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xl=e}function Ol(e){if(e!==xl)return!1;if(!Sl)return Pl(e),Sl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!wn(t,e.memoizedProps))for(t=El;t;)Tl(e,t),t=En(t.nextSibling);if(Pl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){El=En(e.nextSibling);break e}t--}else"$"!==n&&n!==yn&&n!==hn||t++}e=e.nextSibling}El=null}}else El=xl?En(e.stateNode.nextSibling):null;return!0}function Nl(){El=xl=null,Sl=!1}var Ml=Y.ReactCurrentOwner,Rl=!1;function zl(e,t,n,r){t.child=null===e?Pi(t,null,n,r):_i(t,e.child,n,r)}function jl(e,t,n,r,o){n=n.render;var i=t.ref;return ii(t,o),r=Yi(e,t,n,r,i,o),null===e||Rl?(t.effectTag|=1,zl(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Yl(e,t,o))}function Il(e,t,n,r,o,i){if(null===e){var l=n.type;return"function"!=typeof l||Ou(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Mu(n.type,null,r,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Al(e,t,l,r,o,i))}return l=e.child,o<i&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:Wr)(o,r)&&e.ref===t.ref)?Yl(e,t,i):(t.effectTag|=1,(e=Nu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Al(e,t,n,r,o,i){return null!==e&&Wr(e.memoizedProps,r)&&e.ref===t.ref&&(Rl=!1,o<i)?(t.expirationTime=e.expirationTime,Yl(e,t,i)):Dl(e,t,n,r,i)}function Fl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Dl(e,t,n,r,o){var i=vo(n)?yo:mo.current;return i=go(t,i),ii(t,o),n=Yi(e,t,n,r,i,o),null===e||Rl?(t.effectTag|=1,zl(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Yl(e,t,o))}function Ll(e,t,n,r,o){if(vo(n)){var i=!0;xo(t)}else i=!1;if(ii(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),wi(t,n,r),xi(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?li(c):go(t,c=vo(n)?yo:mo.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&ki(t,l,r,c),ai=!1;var d=t.memoizedState;l.state=d,pi(t,r,l,o),u=t.memoizedState,a!==r||d!==u||ho.current||ai?("function"==typeof s&&(gi(t,n,s,r),u=t.memoizedState),(a=ai||bi(t,n,a,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,ci(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Xo(t.type,a),u=l.context,c="object"==typeof(c=n.contextType)&&null!==c?li(c):go(t,c=vo(n)?yo:mo.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==c)&&ki(t,l,r,c),ai=!1,u=t.memoizedState,l.state=u,pi(t,r,l,o),d=t.memoizedState,a!==r||u!==d||ho.current||ai?("function"==typeof s&&(gi(t,n,s,r),d=t.memoizedState),(s=ai||bi(t,n,a,r,u,d,c))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,c),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Bl(e,t,n,r,i,o)}function Bl(e,t,n,r,o,i){Fl(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return o&&Eo(t,n,!1),Yl(e,t,i);r=t.stateNode,Ml.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=_i(t,e.child,null,i),t.child=_i(t,null,a,i)):zl(e,t,a,i),t.memoizedState=r.state,o&&Eo(t,n,!0),t.child}function Wl(e){var t=e.stateNode;t.pendingContext?wo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&wo(0,t.context,!1),ji(e,t.containerInfo)}var Ul,Hl,Vl,Ql={dehydrated:null,retryTime:0};function $l(e,t,n){var r,o=t.mode,i=t.pendingProps,l=Di.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(l|=1),fo(Di,1&l),null===e){if(void 0!==i.fallback&&_l(t),a){if(a=i.fallback,(i=Ru(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ru(a,o,n,null)).return=t,i.sibling=n,t.memoizedState=Ql,t.child=i,n}return o=i.children,t.memoizedState=null,t.child=Pi(t,null,o,n)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,a){if(i=i.fallback,(n=Nu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(o=Nu(o,i)).return=t,n.sibling=o,n.childExpirationTime=0,t.memoizedState=Ql,t.child=n,o}return n=_i(t,e.child,i.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=i.fallback,(i=Ru(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(n=Ru(a,o,n,null)).return=t,i.sibling=n,n.effectTag|=2,i.childExpirationTime=0,t.memoizedState=Ql,t.child=i,n}return t.memoizedState=null,t.child=_i(t,e,i.children,n)}function Kl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),oi(e.return,t)}function ql(e,t,n,r,o,i){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:o,lastEffect:i}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=o,l.lastEffect=i)}function Gl(e,t,n){var r=t.pendingProps,o=r.revealOrder,i=r.tail;if(zl(e,t,r.children,n),0!=(2&(r=Di.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Kl(e,n);else if(19===e.tag)Kl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(fo(Di,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===Li(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),ql(t,!1,o,n,i,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Li(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}ql(t,!0,n,null,i,t.lastEffect);break;case"together":ql(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Yl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&su(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Nu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Nu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Xl(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Zl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:case 17:return vo(t.type)&&bo(),null;case 3:return Ii(),so(ho),so(mo),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ol(t)||(t.effectTag|=4),null;case 5:Fi(t),n=zi(Ri.current);var i=t.type;if(null!==e&&null!=t.stateNode)Hl(e,t,i,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=zi(Ni.current),Ol(t)){r=t.stateNode,i=t.type;var a=t.memoizedProps;switch(r[Cn]=t,r[_n]=a,i){case"iframe":case"object":case"embed":$t("load",r);break;case"video":case"audio":for(e=0;e<Ge.length;e++)$t(Ge[e],r);break;case"source":$t("error",r);break;case"img":case"image":case"link":$t("error",r),$t("load",r);break;case"form":$t("reset",r),$t("submit",r);break;case"details":$t("toggle",r);break;case"input":Ee(r,a),$t("invalid",r),an(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},$t("invalid",r),an(n,"onChange");break;case"textarea":Me(r,a),$t("invalid",r),an(n,"onChange")}for(var u in rn(i,a),e=null,a)if(a.hasOwnProperty(u)){var c=a[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):S.hasOwnProperty(u)&&null!=c&&an(n,u)}switch(i){case"input":we(r),Ce(r,a,!0);break;case"textarea":we(r),ze(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=un)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=je(i)),e===ln?"script"===i?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(i,{is:r.is}):(e=u.createElement(i),"select"===i&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,i),e[Cn]=t,e[_n]=r,Ul(e,t),t.stateNode=e,u=on(i,r),i){case"iframe":case"object":case"embed":$t("load",e),c=r;break;case"video":case"audio":for(c=0;c<Ge.length;c++)$t(Ge[c],e);c=r;break;case"source":$t("error",e),c=r;break;case"img":case"image":case"link":$t("error",e),$t("load",e),c=r;break;case"form":$t("reset",e),$t("submit",e),c=r;break;case"details":$t("toggle",e),c=r;break;case"input":Ee(e,r),c=xe(e,r),$t("invalid",e),an(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=o({},r,{value:void 0}),$t("invalid",e),an(n,"onChange");break;case"textarea":Me(e,r),c=Ne(e,r),$t("invalid",e),an(n,"onChange");break;default:c=r}rn(i,c);var s=c;for(a in s)if(s.hasOwnProperty(a)){var f=s[a];"style"===a?tn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&De(e,f):"children"===a?"string"==typeof f?("textarea"!==i||""!==f)&&Le(e,f):"number"==typeof f&&Le(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?null!=f&&an(n,a):null!=f&&X(e,a,f,u))}switch(i){case"input":we(e),Ce(e,r,!1);break;case"textarea":we(e),ze(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ve(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=un)}bn(i,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Vl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=zi(Ri.current),zi(Ni.current),Ol(t)?(n=t.stateNode,r=t.memoizedProps,n[Cn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Cn]=t,t.stateNode=n)}return null;case 13:return so(Di),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ol(t):(r=null!==(i=e.memoizedState),n||null===i||null!==(i=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=i,i.nextEffect=a):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Di.current)?Ma===Sa&&(Ma=Ta):(Ma!==Sa&&Ma!==Ta||(Ma=Ca),0!==Aa&&null!==Pa&&(Fu(Pa,Na),Du(Pa,Aa)))),(n||r)&&(t.effectTag|=4),null);case 4:return Ii(),null;case 10:return ri(t),null;case 19:if(so(Di),null===(r=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(a=r.rendering)){if(i)Xl(r,!1);else if(Ma!==Sa||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Li(a))){for(t.effectTag|=64,Xl(r,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(i=r).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=a,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,a=e.dependencies,i.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return fo(Di,1&Di.current|2),t.child}a=a.sibling}}else{if(!i)if(null!==(e=Li(a))){if(t.effectTag|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Xl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,i=!0,Xl(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Uo()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Uo(),n.sibling=null,t=Di.current,fo(Di,i?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Jl(e){switch(e.tag){case 1:vo(e.type)&&bo();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ii(),so(ho),so(mo),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Fi(e),null;case 13:return so(Di),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return so(Di),null;case 4:return Ii(),null;case 10:return ri(e),null;default:return null}}function ea(e,t){return{value:e,source:t,stack:ge(t)}}Ul=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Hl=function(e,t,n,r,i){var l=e.memoizedProps;if(l!==r){var a,u,c=t.stateNode;switch(zi(Ni.current),e=null,n){case"input":l=xe(c,l),r=xe(c,r),e=[];break;case"option":l=Pe(c,l),r=Pe(c,r),e=[];break;case"select":l=o({},l,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(c,l),r=Ne(c,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(c.onclick=un)}for(a in rn(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in c=l[a])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(S.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var s=r[a];if(c=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&s!==c&&(null!=s||null!=c))if("style"===a)if(c){for(u in c)!c.hasOwnProperty(u)||s&&s.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in s)s.hasOwnProperty(u)&&c[u]!==s[u]&&(n||(n={}),n[u]=s[u])}else n||(e||(e=[]),e.push(a,n)),n=s;else"dangerouslySetInnerHTML"===a?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(a,s)):"children"===a?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(a,""+s):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(S.hasOwnProperty(a)?(null!=s&&an(i,a),e||c===s||(e=[])):(e=e||[]).push(a,s))}n&&(e=e||[]).push("style",n),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Vl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var ta="function"==typeof WeakSet?WeakSet:Set;function na(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ge(n)),null!==n&&ye(n.type),t=t.value,null!==e&&1===e.tag&&ye(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ra(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){xu(e,t)}else t.current=null}function oa(e,t){switch(t.tag){case 0:case 11:case 15:case 22:case 3:case 5:case 6:case 4:case 17:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Xo(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return}throw Error(l(163))}function ia(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function la(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function aa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void la(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Xo(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&mi(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:case 1:e=n.child.stateNode}mi(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&bn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:case 19:case 17:case 20:case 21:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&It(n)))))}throw Error(l(163))}function ua(e,t,n){switch("function"==typeof Cu&&Cu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Qo(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var o=t;try{n()}catch(e){xu(o,e)}}e=e.next}while(e!==r)}))}break;case 1:ra(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){xu(e,t)}}(t,n);break;case 5:ra(t);break;case 4:ma(e,t,n)}}function ca(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ca(t)}function sa(e){return 5===e.tag||3===e.tag||4===e.tag}function fa(e){e:{for(var t=e.return;null!==t;){if(sa(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(Le(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||sa(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?da(e,n,t):pa(e,n,t)}function da(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=un));else if(4!==r&&null!==(e=e.child))for(da(e,t,n),e=e.sibling;null!==e;)da(e,t,n),e=e.sibling}function pa(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(pa(e,t,n),e=e.sibling;null!==e;)pa(e,t,n),e=e.sibling}function ma(e,t,n){for(var r,o,i=t,a=!1;;){if(!a){a=i.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:o=!1;break e;case 3:case 4:r=r.containerInfo,o=!0;break e}a=a.return}a=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(ua(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break e;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(u=r,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){r=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(ua(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(a=!1)}i.sibling.return=i.return,i=i.sibling}}function ha(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ia(3,t);case 1:case 12:case 17:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[_n]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Se(n,r),on(e,o),t=on(e,r),o=0;o<i.length;o+=2){var a=i[o],u=i[o+1];"style"===a?tn(n,u):"dangerouslySetInnerHTML"===a?De(n,u):"children"===a?Le(n,u):X(n,a,u,t)}switch(e){case"input":Te(n,r);break;case"textarea":Re(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,It(t.containerInfo)));case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Da=Uo()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,r?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=en("display",o));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ya(t);case 19:return void ya(t)}throw Error(l(163))}function ya(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ta),t.forEach((function(t){var r=Su.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var ga="function"==typeof WeakMap?WeakMap:Map;function va(e,t,n){(n=si(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ba||(Ba=!0,Wa=r),na(e,t)},n}function ba(e,t,n){(n=si(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return na(e,t),r(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ua?Ua=new Set([this]):Ua.add(this),na(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var wa,ka=Math.ceil,xa=Y.ReactCurrentDispatcher,Ea=Y.ReactCurrentOwner,Sa=0,Ta=3,Ca=4,_a=0,Pa=null,Oa=null,Na=0,Ma=Sa,Ra=null,za=1073741823,ja=1073741823,Ia=null,Aa=0,Fa=!1,Da=0,La=null,Ba=!1,Wa=null,Ua=null,Ha=!1,Va=null,Qa=90,$a=null,Ka=0,qa=null,Ga=0;function Ya(){return 0!=(48&_a)?1073741821-(Uo()/10|0):0!==Ga?Ga:Ga=1073741821-(Uo()/10|0)}function Xa(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ho();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&_a))return Na;if(null!==n)e=Yo(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Yo(e,150,100);break;case 97:case 96:e=Yo(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==Pa&&e===Na&&--e,e}function Za(e,t){if(50<Ka)throw Ka=0,qa=null,Error(l(185));if(null!==(e=Ja(e,t))){var n=Ho();1073741823===t?0!=(8&_a)&&0==(48&_a)?ru(e):(tu(e),0===_a&&qo()):tu(e),0==(4&_a)||98!==n&&99!==n||(null===$a?$a=new Map([[e,t]]):(void 0===(n=$a.get(e))||n>t)&&$a.set(e,t))}}function Ja(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return null!==o&&(Pa===o&&(su(t),Ma===Ca&&Fu(o,Na)),Du(o,t)),o}function eu(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Au(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function tu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Ko(ru.bind(null,e));else{var t=eu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Ya();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=r)return;n!==Io&&Co(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Ko(ru.bind(null,e)):$o(r,nu.bind(null,e),{timeout:10*(1073741821-t)-Uo()}),e.callbackNode=t}}}function nu(e,t){if(Ga=0,t)return Lu(e,t=Ya()),tu(e),null;var n=eu(e);if(0!==n){if(t=e.callbackNode,0!=(48&_a))throw Error(l(327));if(bu(),e===Pa&&n===Na||lu(e,n),null!==Oa){var r=_a;_a|=16;for(var o=uu();;)try{du();break}catch(t){au(e,t)}if(ni(),_a=r,xa.current=o,1===Ma)throw t=Ra,lu(e,n),Fu(e,n),tu(e),t;if(null===Oa)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Ma,Pa=null,r){case Sa:case 1:throw Error(l(345));case 2:Lu(e,2<n?2:n);break;case Ta:if(Fu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=hu(o)),1073741823===za&&10<(o=Da+500-Uo())){if(Fa){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,lu(e,n);break}}if(0!==(i=eu(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=kn(yu.bind(null,e),o);break}yu(e);break;case Ca:if(Fu(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=hu(o)),Fa&&(0===(o=e.lastPingedTime)||o>=n)){e.lastPingedTime=n,lu(e,n);break}if(0!==(o=eu(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==ja?r=10*(1073741821-ja)-Uo():1073741823===za?r=0:(r=10*(1073741821-za)-5e3,0>(r=(o=Uo())-r)&&(r=0),(n=10*(1073741821-n)-o)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ka(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=kn(yu.bind(null,e),r);break}yu(e);break;case 5:if(1073741823!==za&&null!==Ia){i=za;var a=Ia;if(0>=(r=0|a.busyMinDurationMs)?r=0:(o=0|a.busyDelayMs,r=(i=Uo()-(10*(1073741821-i)-(0|a.timeoutMs||5e3)))<=o?0:o+r-i),10<r){Fu(e,n),e.timeoutHandle=kn(yu.bind(null,e),r);break}}yu(e);break;default:throw Error(l(329))}if(tu(e),e.callbackNode===t)return nu.bind(null,e)}}return null}function ru(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&_a))throw Error(l(327));if(bu(),e===Pa&&t===Na||lu(e,t),null!==Oa){var n=_a;_a|=16;for(var r=uu();;)try{fu();break}catch(t){au(e,t)}if(ni(),_a=n,xa.current=r,1===Ma)throw n=Ra,lu(e,t),Fu(e,t),tu(e),n;if(null!==Oa)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Pa=null,yu(e),tu(e)}return null}function ou(e,t){var n=_a;_a|=1;try{return e(t)}finally{0===(_a=n)&&qo()}}function iu(e,t){var n=_a;_a&=-2,_a|=8;try{return e(t)}finally{0===(_a=n)&&qo()}}function lu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,xn(n)),null!==Oa)for(n=Oa.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&bo();break;case 3:Ii(),so(ho),so(mo);break;case 5:Fi(r);break;case 4:Ii();break;case 13:case 19:so(Di);break;case 10:ri(r)}n=n.return}Pa=e,Oa=Nu(e.current,null),Na=t,Ma=Sa,Ra=null,ja=za=1073741823,Ia=null,Aa=0,Fa=!1}function au(e,t){for(;;){try{if(ni(),Wi.current=vl,Ki)for(var n=Vi.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Hi=0,$i=Qi=Vi=null,Ki=!1,null===Oa||null===Oa.return)return Ma=1,Ra=t,Oa=null;e:{var o=e,i=Oa.return,l=Oa,a=t;if(t=Na,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var c=l.alternate;c?(l.updateQueue=c.updateQueue,l.memoizedState=c.memoizedState,l.expirationTime=c.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var s=0!=(1&Di.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var h=f.updateQueue;if(null===h){var y=new Set;y.add(u),f.updateQueue=y}else h.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=si(1073741823,null);g.tag=2,fi(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new ga,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=Eu.bind(null,o,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ye(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ge(l))}5!==Ma&&(Ma=2),a=ea(a,l),f=i;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,di(f,va(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ua||!Ua.has(k)))){f.effectTag|=4096,f.expirationTime=t,di(f,ba(f,u,t));break e}}f=f.return}while(null!==f)}Oa=mu(Oa)}catch(e){t=e;continue}break}}function uu(){var e=xa.current;return xa.current=vl,null===e?vl:e}function cu(e,t){e<za&&2<e&&(za=e),null!==t&&e<ja&&2<e&&(ja=e,Ia=t)}function su(e){e>Aa&&(Aa=e)}function fu(){for(;null!==Oa;)Oa=pu(Oa)}function du(){for(;null!==Oa&&!Ao();)Oa=pu(Oa)}function pu(e){var t=wa(e.alternate,e,Na);return e.memoizedProps=e.pendingProps,null===t&&(t=mu(e)),Ea.current=null,t}function mu(e){Oa=e;do{var t=Oa.alternate;if(e=Oa.return,0==(2048&Oa.effectTag)){if(t=Zl(t,Oa,Na),1===Na||1!==Oa.childExpirationTime){for(var n=0,r=Oa.child;null!==r;){var o=r.expirationTime,i=r.childExpirationTime;o>n&&(n=o),i>n&&(n=i),r=r.sibling}Oa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Oa.firstEffect),null!==Oa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Oa.firstEffect),e.lastEffect=Oa.lastEffect),1<Oa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Oa:e.firstEffect=Oa,e.lastEffect=Oa))}else{if(null!==(t=Jl(Oa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Oa.sibling))return t;Oa=e}while(null!==Oa);return Ma===Sa&&(Ma=5),null}function hu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function yu(e){var t=Ho();return Qo(99,gu.bind(null,e,t)),null}function gu(e,t){do{bu()}while(null!==Va);if(0!=(48&_a))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=hu(n);if(e.firstPendingTime=o,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Pa&&(Oa=Pa=null,Na=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,o=n.firstEffect):o=n:o=n.firstEffect,null!==o){var i=_a;_a|=32,Ea.current=null,gn=Qt;var a=pn();if(mn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var c=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,y=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++h===s&&(p=d),v===f&&++y===c&&(m=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;vn={activeElementDetached:null,focusedElem:a,selectionRange:u},Qt=!1,La=o;do{try{vu()}catch(e){if(null===La)throw Error(l(330));xu(La,e),La=La.nextEffect}}while(null!==La);La=o;do{try{for(a=e,u=t;null!==La;){var w=La.effectTag;if(16&w&&Le(La.stateNode,""),128&w){var k=La.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:fa(La),La.effectTag&=-3;break;case 6:fa(La),La.effectTag&=-3,ha(La.alternate,La);break;case 1024:La.effectTag&=-1025;break;case 1028:La.effectTag&=-1025,ha(La.alternate,La);break;case 4:ha(La.alternate,La);break;case 8:ma(a,s=La,u),ca(s)}La=La.nextEffect}}catch(e){if(null===La)throw Error(l(330));xu(La,e),La=La.nextEffect}}while(null!==La);if(x=vn,k=pn(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&dn(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),s=w.textContent.length,a=Math.min(u.start,s),u=void 0===u.end?a:Math.min(u.end,s),!x.extend&&a>u&&(s=u,u=a,a=s),s=fn(w,a),f=fn(w,u),s&&f&&(1!==x.rangeCount||x.anchorNode!==s.node||x.anchorOffset!==s.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(s.node,s.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Qt=!!gn,vn=gn=null,e.current=n,La=o;do{try{for(w=e;null!==La;){var E=La.effectTag;if(36&E&&aa(w,La.alternate,La),128&E){k=void 0;var S=La.ref;if(null!==S){var T=La.stateNode;La.tag,k=T,"function"==typeof S?S(k):S.current=k}}La=La.nextEffect}}catch(e){if(null===La)throw Error(l(330));xu(La,e),La=La.nextEffect}}while(null!==La);La=null,Fo(),_a=i}else e.current=n;if(Ha)Ha=!1,Va=e,Qa=t;else for(La=o;null!==La;)t=La.nextEffect,La.nextEffect=null,La=t;if(0===(t=e.firstPendingTime)&&(Ua=null),1073741823===t?e===qa?Ka++:(Ka=0,qa=e):Ka=0,"function"==typeof Tu&&Tu(n.stateNode,r),tu(e),Ba)throw Ba=!1,e=Wa,Wa=null,e;return 0!=(8&_a)||qo(),null}function vu(){for(;null!==La;){var e=La.effectTag;0!=(256&e)&&oa(La.alternate,La),0==(512&e)||Ha||(Ha=!0,$o(97,(function(){return bu(),null}))),La=La.nextEffect}}function bu(){if(90!==Qa){var e=97<Qa?97:Qa;return Qa=90,Qo(e,wu)}}function wu(){if(null===Va)return!1;var e=Va;if(Va=null,0!=(48&_a))throw Error(l(331));var t=_a;for(_a|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ia(5,n),la(5,n)}}catch(t){if(null===e)throw Error(l(330));xu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return _a=t,qo(),!0}function ku(e,t,n){fi(e,t=va(e,t=ea(n,t),1073741823)),null!==(e=Ja(e,1073741823))&&tu(e)}function xu(e,t){if(3===e.tag)ku(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){ku(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ua||!Ua.has(r))){fi(n,e=ba(n,e=ea(t,e),1073741823)),null!==(n=Ja(n,1073741823))&&tu(n);break}}n=n.return}}function Eu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Pa===e&&Na===n?Ma===Ca||Ma===Ta&&1073741823===za&&Uo()-Da<500?lu(e,Na):Fa=!0:Au(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,tu(e)))}function Su(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=Xa(t=Ya(),e,null)),null!==(e=Ja(e,t))&&tu(e)}wa=function(e,t,n){var r=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||ho.current)Rl=!0;else{if(r<n){switch(Rl=!1,t.tag){case 3:Wl(t),Nl();break;case 5:if(Ai(t),4&t.mode&&1!==n&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:vo(t.type)&&xo(t);break;case 4:ji(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,o=t.type._context,fo(Zo,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?$l(e,t,n):(fo(Di,1&Di.current),null!==(t=Yl(e,t,n))?t.sibling:null);fo(Di,1&Di.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Gl(e,t,n);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),fo(Di,Di.current),!r)return null}return Yl(e,t,n)}Rl=!1}}else Rl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=go(t,mo.current),ii(t,n),o=Yi(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,vo(r)){var i=!0;xo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ui(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&gi(t,r,a,e),o.updater=vi,t.stateNode=o,o._reactInternalFiber=t,xi(t,r,e,n),t=Bl(null,t,r,!0,i,n)}else t.tag=0,zl(null,t,o,n),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Ou(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===fe)return 14}return 2}(o),e=Xo(o,e),i){case 0:t=Dl(null,t,o,e,n);break e;case 1:t=Ll(null,t,o,e,n);break e;case 11:t=jl(null,t,o,e,n);break e;case 14:t=Il(null,t,o,Xo(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Dl(e,t,r,o=t.elementType===r?o:Xo(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ll(e,t,r,o=t.elementType===r?o:Xo(r,o),n);case 3:if(Wl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,ci(e,t),pi(t,r,null,n),(r=t.memoizedState.element)===o)Nl(),t=Yl(e,t,n);else{if((o=t.stateNode.hydrate)&&(El=En(t.stateNode.containerInfo.firstChild),xl=t,o=Sl=!0),o)for(n=Pi(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else zl(e,t,r,n),Nl();t=t.child}return t;case 5:return Ai(t),null===e&&_l(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,wn(r,o)?a=null:null!==i&&wn(r,i)&&(t.effectTag|=16),Fl(e,t),4&t.mode&&1!==n&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(zl(e,t,a,n),t=t.child),t;case 6:return null===e&&_l(t),null;case 13:return $l(e,t,n);case 4:return ji(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=_i(t,null,r,n):zl(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,jl(e,t,r,o=t.elementType===r?o:Xo(r,o),n);case 7:return zl(e,t,t.pendingProps,n),t.child;case 8:case 12:return zl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value;var u=t.type._context;if(fo(Zo,u._currentValue),u._currentValue=i,null!==a)if(u=a.value,0==(i=Lr(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!ho.current){t=Yl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){a=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=si(n,null)).tag=2,fi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),oi(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}zl(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(i=t.pendingProps).children,ii(t,n),r=r(o=li(o,i.unstable_observedBits)),t.effectTag|=1,zl(e,t,r,n),t.child;case 14:return i=Xo(o=t.type,t.pendingProps),Il(e,t,o,i=Xo(o.type,i),r,n);case 15:return Al(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Xo(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,vo(r)?(e=!0,xo(t)):e=!1,ii(t,n),wi(t,r,o),xi(t,r,o,n),Bl(null,t,r,!0,e,n);case 19:return Gl(e,t,n)}throw Error(l(156,t.tag))};var Tu=null,Cu=null;function _u(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Pu(e,t,n,r){return new _u(e,t,n,r)}function Ou(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Nu(e,t){var n=e.alternate;return null===n?((n=Pu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mu(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Ou(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Ru(n.children,o,i,t);case ae:a=8,o|=7;break;case re:a=8,o|=1;break;case oe:return(e=Pu(12,n,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ce:return(e=Pu(13,n,t,o)).type=ce,e.elementType=ce,e.expirationTime=i,e;case se:return(e=Pu(19,n,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case le:a=9;break e;case ue:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Pu(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Ru(e,t,n,r){return(e=Pu(7,e,r,t)).expirationTime=n,e}function zu(e,t,n){return(e=Pu(6,e,null,t)).expirationTime=n,e}function ju(e,t,n){return(t=Pu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Iu(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Au(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Fu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Du(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Lu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Bu(e,t,n,r){var o=t.current,i=Ya(),a=hi.suspense;i=Xa(i,o,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(vo(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(vo(c)){n=ko(n,c,u);break e}}n=u}else n=po;return null===t.context?t.context=n:t.pendingContext=n,(t=si(i,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),fi(o,t),Za(o,i),i}function Wu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Uu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Hu(e,t){Uu(e,t),(e=e.alternate)&&Uu(e,t)}function Vu(e,t,n){var r=new Iu(e,t,n=null!=n&&!0===n.hydrate),o=Pu(3,null,null,2===t?7:1===t?3:0);r.current=o,o.stateNode=r,ui(o),e[Pn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);Tt.forEach((function(e){pt(e,t,n)})),Ct.forEach((function(e){pt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $u(e,t,n,r,o){var i=n._reactRootContainer;if(i){var l=i._internalRoot;if("function"==typeof o){var a=o;o=function(){var e=Wu(l);a.call(e)}}Bu(t,l,e,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Vu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=i._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Wu(l);u.call(e)}}iu((function(){Bu(t,l,e,o)}))}return Wu(l)}function Ku(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function qu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(l(200));return Ku(e,t,null,n)}Vu.prototype.render=function(e){Bu(e,this._internalRoot,null,null)},Vu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Bu(null,e,null,(function(){t[Pn]=null}))},mt=function(e){if(13===e.tag){var t=Yo(Ya(),150,100);Za(e,t),Hu(e,t)}},ht=function(e){13===e.tag&&(Za(e,3),Hu(e,3))},yt=function(e){if(13===e.tag){var t=Ya();Za(e,t=Xa(t,e,null)),Hu(e,t)}},P=function(e,t,n){switch(t){case"input":if(Te(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=Rn(r);if(!o)throw Error(l(90));ke(r),Te(r,o)}}}break;case"textarea":Re(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},j=ou,I=function(e,t,n,r,o){var i=_a;_a|=4;try{return Qo(98,e.bind(null,t,n,r,o))}finally{0===(_a=i)&&qo()}},A=function(){0==(49&_a)&&(function(){if(null!==$a){var e=$a;$a=null,e.forEach((function(e,t){Lu(t,e),tu(t)})),qo()}}(),bu())},F=function(e,t){var n=_a;_a|=2;try{return e(t)}finally{0===(_a=n)&&qo()}};var Gu={Events:[Nn,Mn,Rn,C,E,Ln,function(e){rt(e,Dn)},R,z,Yt,lt,bu,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Tu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Cu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(o({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=tt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:On,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Gu,t.createPortal=qu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=tt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&_a))throw Error(l(187));var n=_a;_a|=1;try{return Qo(99,e.bind(null,t))}finally{_a=n,qo()}},t.hydrate=function(e,t,n){if(!Qu(t))throw Error(l(200));return $u(null,e,t,!0,n)},t.render=function(e,t,n){if(!Qu(t))throw Error(l(200));return $u(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Qu(e))throw Error(l(40));return!!e._reactRootContainer&&(iu((function(){$u(null,null,e,!1,(function(){e._reactRootContainer=null,e[Pn]=null}))})),!0)},t.unstable_batchedUpdates=ou,t.unstable_createPortal=function(e,t){return qu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Qu(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return $u(e,t,n,!1,r)},t.version="16.14.0"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t,n)=>{"use strict";var r=n(418),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,h=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var E=x.prototype=new k;E.constructor=x,r(E,w.prototype),E.isPureReactComponent=!0;var S={current:null},T=Object.prototype.hasOwnProperty,C={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)T.call(t,r)&&!C.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:i,type:e,key:l,ref:a,props:o,_owner:S.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var O=/\/+/g,N=[];function M(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function z(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case i:case l:a=!0}}if(a)return n(r,e,""===t?"."+I(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var c=t+I(o=e[u],u);a+=z(o,c,n,r)}else if("function"==typeof(c=null===e||"object"!=typeof e?null:"function"==typeof(c=y&&e[y]||e["@@iterator"])?c:null))for(e=c.call(e),u=0;!(o=e.next()).done;)a+=z(o=o.value,c=t+I(o,u++),n,r);else if("object"===o)throw n=""+e,Error(g(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return a}function j(e,t,n){return null==e?0:z(e,"",t,n)}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function F(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),j(e,F,t=M(t,i,r,o)),R(t)}var L={current:null};function B(){var e=L.current;if(null===e)throw Error(g(321));return e}var W={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;j(e,A,t=M(null,null,t,n)),R(t)},count:function(e){return j(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=c,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var o=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=S.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)T.call(t,s)&&!C.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:i,type:e.type,key:l,ref:a,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return B().useCallback(e,t)},t.useContext=function(e,t){return B().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return B().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return B().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return B().useLayoutEffect(e,t)},t.useMemo=function(e,t){return B().useMemo(e,t)},t.useReducer=function(e,t,n){return B().useReducer(e,t,n)},t.useRef=function(e){return B().useRef(e)},t.useState=function(e){return B().useState(e)},t.version="16.14.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,o,i,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,u=null,c=function(){if(null!==a)try{var e=t.unstable_now();a(!0,e),a=null}catch(e){throw setTimeout(c,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},n=function(e){null!==a?setTimeout(n,0,e):(a=e,setTimeout(c,0))},r=function(e,t){u=setTimeout(e,t)},o=function(){clearTimeout(u)},i=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var f=window.performance,d=window.Date,p=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof f&&"function"==typeof f.now)t.unstable_now=function(){return f.now()};else{var y=d.now();t.unstable_now=function(){return d.now()-y}}var g=!1,v=null,b=-1,w=5,k=0;i=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var x=new MessageChannel,E=x.port2;x.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();k=e+w;try{v(!0,e)?E.postMessage(null):(g=!1,v=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){v=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=p((function(){e(t.unstable_now())}),n)},o=function(){m(b),b=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function T(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var i=2*(r+1)-1,l=e[i],a=i+1,u=e[a];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[i]=n,r=i);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],O=[],N=1,M=null,R=3,z=!1,j=!1,I=!1;function A(e){for(var t=T(O);null!==t;){if(null===t.callback)C(O);else{if(!(t.startTime<=e))break;C(O),t.sortIndex=t.expirationTime,S(P,t)}t=T(O)}}function F(e){if(I=!1,A(e),!j)if(null!==T(P))j=!0,n(D);else{var t=T(O);null!==t&&r(F,t.startTime-e)}}function D(e,n){j=!1,I&&(I=!1,o()),z=!0;var l=R;try{for(A(n),M=T(P);null!==M&&(!(M.expirationTime>n)||e&&!i());){var a=M.callback;if(null!==a){M.callback=null,R=M.priorityLevel;var u=a(M.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?M.callback=u:M===T(P)&&C(P),A(n)}else C(P);M=T(P)}if(null!==M)var c=!0;else{var s=T(O);null!==s&&r(F,s.startTime-n),c=!1}return c}finally{M=null,R=l,z=!1}}function L(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){j||z||(j=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return R},t.unstable_getFirstCallbackNode=function(){return T(P)},t.unstable_next=function(e){switch(R){case 1:case 2:case 3:var t=3;break;default:t=R}var n=R;R=t;try{return e()}finally{R=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=R;R=e;try{return t()}finally{R=n}},t.unstable_scheduleCallback=function(e,i,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:L(e)}else l=L(e),u=a;return e={id:N++,callback:i,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,S(O,e),null===T(P)&&e===T(O)&&(I?o():I=!0,r(F,u-a))):(e.sortIndex=l,S(P,e),j||z||(j=!0,n(D))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();A(e);var n=T(P);return n!==M&&null!==M&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<M.expirationTime||i()},t.unstable_wrapCallback=function(e){var t=R;return function(){var n=R;R=t;try{return e.apply(this,arguments)}finally{R=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},887:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},379:(e,t,n)=>{"use strict";var r,o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function l(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function a(e,t){for(var n={},r=[],o=0;o<e.length;o++){var a=e[o],u=t.base?a[0]+t.base:a[0],c=n[u]||0,s="".concat(u," ").concat(c);n[u]=c+1;var f=l(s),d={css:a[1],media:a[2],sourceMap:a[3]};-1!==f?(i[f].references++,i[f].updater(d)):i.push({identifier:s,updater:h(d,t),references:1}),r.push(s)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var l=o(e.insert||"head");if(!l)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");l.appendChild(t)}return t}var c,s=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function f(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(t,o);else{var i=document.createTextNode(o),l=e.childNodes;l[t]&&e.removeChild(l[t]),l.length?e.insertBefore(i,l[t]):e.appendChild(i)}}function d(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,m=0;function h(e,t){var n,r,o;if(t.singleton){var i=m++;n=p||(p=u(t)),r=f.bind(null,n,i,!1),o=f.bind(null,n,i,!0)}else n=u(t),r=d.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=a(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);i[o].references--}for(var u=a(e,t),c=0;c<n.length;c++){var s=l(n[c]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}n=u}}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";var e=n(294),t=n(935),r=n(697),o=n.n(r),i=n(887),l=n.n(i),a=n(272),u=n.n(a);function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){s(e,t,n[t])}))}return e}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var p=/([A-Z])/g,m=function(e){return"-".concat(e.toLowerCase())},h={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},y=["Webkit","ms","Moz","O"];Object.keys(h).forEach((function(e){y.forEach((function(t){h[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=h[e]}))}));var g=function(e,t){return"number"==typeof t?h[e]?""+t:t+"px":""+t},v=function(e,t){return w(g(e,t))},b=function(e,t){return l()(e).toString(36)},w=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},k="undefined"!=typeof Map,x=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(k&&n instanceof Map||n instanceof e){var i=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){i.set(t,e,r)})),void(this.elements[t]=i)}if(Array.isArray(n)||"object"!==c(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,a=Object.keys(n),u=0;u<a.length;u+=1)l.set(a[u],n[a[u]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(k&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function E(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function S(e,t){return e(t={exports:{}},t.exports),t.exports}var T=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));E(T);var C=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},i=e[t],l=(0,r.default)(t),a=Object.keys(n),u=0;u<a.length;u++){var c=a[u];if(c===t)for(var s=0;s<i.length;s++)o[i[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=T)&&n.__esModule?n:{default:n}}));E(C);var _=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var i=0,l=e.length;i<l;++i){var a=e[i](t,n,r,o);if(a)return a}}}));E(_);var P=S((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));E(P);var O=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));E(O);var N=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(a){for(var u in a){var c=a[u];if((0,i.default)(c))a[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],a,t);(0,o.default)(s,p||c[f])}s.length>0&&(a[u]=s)}else{var m=(0,r.default)(l,u,c,a,t);m&&(a[u]=m),a=(0,n.default)(t,u,a)}}return a}};var n=l(C),r=l(_),o=l(P),i=l(O);function l(e){return e&&e.__esModule?e:{default:e}}})),M=E(N),R=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}})),z=E(R),j=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));E(j);var I=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=j)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]})),A=E(I),F=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=j)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),D=E(F),L=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),B=E(L),W=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=j)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),U=E(W),H=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}})),V=E(H),Q=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(i.test(t))return void(l.msFlex=t+" 1 0%");var a=t.split(/\s/);switch(a.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(i.test(a[1])?l.msFlex=a[0]+" "+a[1]+" 0%":l.msFlex=a[0]+" 1 "+a[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},i=/^\d+(\.\d+)?$/})),$=E(Q),K=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}})),q=E(K),G=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&i.test(t))return o.map((function(e){return t.replace(i,(function(t){return e+t}))}))};var n,r=(n=j)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],i=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),Y=E(G),X=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var l,a=e[Symbol.iterator]();!(r=(l=a.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(o)throw i}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in i)return i[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],i={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridColumnStart(a,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),i=n(o,2),a=i[0],u=i[1];l.gridRowStart(a,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),Z=E(X),J=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=j)&&n.__esModule?n:{default:n},o=["-webkit-",""]})),ee=E(J),te=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],i=0,l=o.length;i<l;++i)r[o[i]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}})),ne=E(te),re=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}})),oe=E(re),ie=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),le=E(ie),ae=/[A-Z]/g,ue=/^ms-/,ce={};function se(e){return"-"+e.toLowerCase()}var fe,de=(fe=Object.freeze({default:function(e){if(ce.hasOwnProperty(e))return ce[e];var t=e.replace(ae,se);return ce[e]=ue.test(t)?"-"+t:t}}))&&fe.default||fe,pe=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=de)&&n.__esModule?n:{default:n};e.exports=t.default}));E(pe);var me=S((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,i,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),i=0,l=o.length;i<l;++i){var u=o[i],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,m=d.length;p<m;++p)c.unshift(u.replace(f,a[d[p]]+f))}o[i]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(i["Webkit"+(0,o.default)(e)]=s,i["Moz"+(0,o.default)(e)]=f,c)}};var n=i(pe),r=i(j),o=i(T);function i(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},a={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),he=["Webkit"],ye=["Moz"],ge=["ms"],ve=["Webkit","Moz"],be=["Webkit","ms"],we=["Webkit","Moz","ms"],ke=M({plugins:[z,A,D,B,U,V,$,q,Y,Z,ee,ne,oe,le,E(me)],prefixMap:{transform:be,transformOrigin:be,transformOriginX:be,transformOriginY:be,backfaceVisibility:he,perspective:he,perspectiveOrigin:he,transformStyle:he,transformOriginZ:he,animation:he,animationDelay:he,animationDirection:he,animationFillMode:he,animationDuration:he,animationIterationCount:he,animationName:he,animationPlayState:he,animationTimingFunction:he,appearance:ve,userSelect:we,fontKerning:he,textEmphasisPosition:he,textEmphasis:he,textEmphasisStyle:he,textEmphasisColor:he,boxDecorationBreak:he,clipPath:he,maskImage:he,maskMode:he,maskRepeat:he,maskPosition:he,maskClip:he,maskOrigin:he,maskSize:he,maskComposite:he,mask:he,maskBorderSource:he,maskBorderMode:he,maskBorderSlice:he,maskBorderWidth:he,maskBorderOutset:he,maskBorderRepeat:he,maskBorder:he,maskType:he,textDecorationStyle:ve,textDecorationSkip:ve,textDecorationLine:ve,textDecorationColor:ve,filter:he,fontFeatureSettings:ve,breakAfter:we,breakBefore:we,breakInside:we,columnCount:ve,columnFill:ve,columnGap:ve,columnRule:ve,columnRuleColor:ve,columnRuleStyle:ve,columnRuleWidth:ve,columns:ve,columnSpan:ve,columnWidth:ve,writingMode:be,flex:be,flexBasis:he,flexDirection:be,flexGrow:he,flexFlow:be,flexShrink:he,flexWrap:be,alignContent:he,alignItems:he,alignSelf:he,justifyContent:he,order:he,transitionDelay:he,transitionDuration:he,transitionProperty:he,transitionTimingFunction:he,backdropFilter:he,scrollSnapType:be,scrollSnapPointsX:be,scrollSnapPointsY:be,scrollSnapDestination:be,scrollSnapCoordinate:be,shapeImageThreshold:he,shapeImageMargin:he,shapeImageOutside:he,hyphens:we,flowInto:be,flowFrom:be,regionFragment:be,textOrientation:he,boxSizing:ye,textAlignLast:ye,tabSize:ye,wrapFlow:ge,wrapThrough:ge,wrapMargin:ge,touchAction:ge,textSizeAdjust:be,borderImage:he,borderImageOutset:he,borderImageRepeat:he,borderImageSlice:he,borderImageSource:he,borderImageWidth:he}}),xe=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],Ee=function e(t,n,r,o,i){for(var l=new x,a=0;a<n.length;a++)l.addStyleType(n[a]);var u=new x,c=[];l.forEach((function(n,l){r.some((function(a){var u=a(l,t,(function(t){return e(t,[n],r,o,i)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,d(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",a),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=Ce(t,u,o,i,r);return s&&c.unshift(s),c},Se=function(e,t,n){return"".concat((r=e,o=r.replace(p,m),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},Te=function(e,t){return e[t]=!0,e},Ce=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var i=r[o];e.has(i)&&e.set(i,t[i](e.get(i),n),!1)}}(t,n,o);var i=Object.keys(t.elements).reduce(Te,Object.create(null)),l=ke(t.elements),a=Object.keys(l);if(a.length!==t.keyOrder.length)for(var u=0;u<a.length;u++)if(!i[a[u]]){var c;if((c="W"===a[u][0]?a[u][6].toLowerCase()+a[u].slice(7):"o"===a[u][1]?a[u][3].toLowerCase()+a[u].slice(4):a[u][2].toLowerCase()+a[u].slice(3))&&i[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,a[u])}else t.keyOrder.unshift(a[u])}for(var f=!1===r?g:v,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=l[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(Se(m,h[y],f));else d.push(Se(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},_e=null,Pe={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===c(t)?(ze(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===c(t)){var r="keyframe_".concat((i=t,b(JSON.stringify(i)))),o="@keyframes ".concat(r,"{");return t instanceof x?t.forEach((function(e,t){o+=Ee(t,[e],n,Pe,!1).join("")})):Object.keys(t).forEach((function(e){o+=Ee(e,[t[e]],n,Pe,!1).join("")})),Re(r,[o+="}"]),r}return t;var i}},Oe={},Ne=[],Me=!1,Re=function(e,t){var n;if(!Oe[e]){if(!Me){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");Me=!0,u()(Fe)}(n=Ne).push.apply(n,d(t)),Oe[e]=!0}},ze=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!Oe[e]){var i=Ee(t,n,o,Pe,r);Re(e,i)}},je=function(){Ne=[],Oe={},Me=!1,_e=null},Ie=function(e){delete Oe[e]},Ae=function(){Me=!1;var e=Ne;return Ne=[],e},Fe=function(){var e=Ae();e.length>0&&function(e){if(null==_e&&null==(_e=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(_e=document.createElement("style")).type="text/css",_e.setAttribute("data-aphrodite",""),t.appendChild(_e)}var n=_e.styleSheet||_e.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else _e.innerText=(_e.innerText||"")+e.join("")}(e)},De=function(e){e.forEach((function(e){Oe[e]=!0}))},Le=function e(t,n,r,o){for(var i=0;i<t.length;i+=1)if(t[i])if(Array.isArray(t[i]))o+=e(t[i],n,r,o);else{if(!("_definition"in(l=t[i])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[i]._name),r.push(t[i]._definition),o+=t[i]._len}var l;return o},Be=function(e,t,n){var r,o=[],i=[],l=Le(t,o,i,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(b(o.join())).concat((l%36).toString(36)),ze(r,".".concat(r),i,e,n),r)},We=function(e,t){return"".concat(t,"_").concat(b(e))},Ue=b,He={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],i=e[o],l=JSON.stringify(i);t[o]={_len:l.length,_name:Ue(l,o),_definition:i}}return t},rehydrate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];De(e)}},Ve="undefined"!=typeof window?null:{renderStatic:function(e){return je(),function(){if(Me)throw new Error("Cannot buffer while already buffering");Me=!0}(),{html:e(),css:{content:Ae().join(""),renderedClassNames:Object.keys(Oe)}}}},Qe=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:xe;return{StyleSheet:f({},He,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:Ve,StyleSheetTestUtils:null,minify:function(e){Ue=e?b:We},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return Be(t,r,n)},flushToStyleTag:Fe,injectAndGetClassName:Be,defaultSelectorHandlers:xe,reset:je,resetInjectedStyle:Ie}}(!0),$e=Qe.StyleSheet,Ke=(Qe.StyleSheetServer,Qe.StyleSheetTestUtils,Qe.css);function qe(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Qe.minify,Qe.flushToStyleTag,Qe.injectAndGetClassName,Qe.defaultSelectorHandlers,Qe.reset,Qe.resetInjectedStyle;var Ge=e.memo((function(t){var n=t.type,r=t.value,o=t.html,i=t.markAsRead,l=t.id,a=Ke("urgent"===n?Ze.urgent:Ze.default);return r?e.createElement("li",{className:a,"data-notification-type":n,onClick:function(){return i(l)}},r):e.createElement("li",{className:a,"data-notification-type":n,dangerouslySetInnerHTML:o,onClick:function(){return i(l)}})}));Ge.defaultProps={type:"default",value:"",html:{},markAsRead:function(){},id:NaN},Ge.propTypes={type:o().string,value:o().string,html:o().shape({__html:o().string}),markAsRead:o().func,id:o().number};var Ye="@media screen and (max-width: 900px)",Xe={listStyle:"none",borderBottom:"1px solid black",padding:"10px 8px",fontSize:"20px"},Ze=$e.create({default:qe({color:"blue"},Ye,Xe),urgent:qe({color:"red"},Ye,Xe)});const Je=Ge,et=o().shape({id:o().number.isRequired,html:o().shape({__html:o().string}),type:o().string.isRequired,value:o().string}),tt=n.p+"d358bb35dc011695b84ce67f9214c2bf.png";function nt(e){return nt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},nt(e)}function rt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ot(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function it(e,t){return it=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},it(e,t)}function lt(e,t){if(t&&("object"===nt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return at(e)}function at(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ut(e){return ut=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},ut(e)}var ct=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&it(e,t)}(a,t);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ut(o);if(i){var n=ut(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return lt(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=l.call(this,e)).markAsRead=t.markAsRead.bind(at(t)),t}return n=a,r=[{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length}},{key:"markAsRead",value:function(e){console.log("Notification ".concat(e," has been marked as read"))}},{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,o=n.listNotifications,i=Ke(r?ft.menuItemPNoShow:ft.menuItemPShow);return e.createElement(e.Fragment,null,e.createElement("div",{className:Ke(ft.menuItem),id:"menuItem"},e.createElement("p",{className:i},"Your notifications")),r&&e.createElement("div",{className:Ke(ft.notifications),id:"Notifications"},e.createElement("button",{style:{background:"transparent",border:"none",position:"absolute",right:20},"aria-label":"close"},e.createElement("img",{src:tt,alt:"close-icon",className:Ke(ft.notificationsButtonImage)})),e.createElement("p",{className:Ke(ft.notificationsP)},"Here is the list of notifications"),e.createElement("ul",{className:Ke(ft.notificationsUL)},0===o.length&&e.createElement(Je,{value:"No new notification for now"}),o.map((function(n){return e.createElement(Je,{key:n.id,id:n.id,type:n.type,value:n.value,html:n.html,markAsRead:t.markAsRead})})))))}}],r&&ot(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(e.Component);ct.defaultProps={displayDrawer:!1,listNotifications:[]},ct.propTypes={displayDrawer:o().bool,listNotifications:o().arrayOf(et)};var st="@media screen and (max-width: 900px)",ft=$e.create({menuItem:{textAlign:"right"},menuItemPNoShow:rt({marginRight:"8px"},st,{display:"none"}),menuItemPShow:{marginRight:"8px"},notifications:rt({float:"right",border:"3px dashed ".concat("#e01d3f"),padding:"10px",marginBottom:"20px"},st,{float:"none",border:"none",listStyle:"none",padding:0,fontSize:"20px",position:"absolute",background:"white",height:"110vh",width:"100vw"}),notificationsButtonImage:{width:"10px"},notificationsP:{margin:0,marginTop:"15px"},notificationsUL:rt({},st,{padding:0})});const dt=ct,pt=n.p+"24bab5d633e36ca8d17edc63164cf934.jpg";var mt=$e.create({header:{display:"flex",alignItems:"center",color:"#e01d3f",fontSize:"20px"},headerImg:{width:"200px"}});const ht=function(){return e.createElement("div",{className:Ke(mt.header)},e.createElement("img",{src:pt,className:Ke(mt.headerImg)}),e.createElement("h1",null,"School dashboard"))};function yt(e){return yt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},yt(e)}function gt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function vt(e,t){return vt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},vt(e,t)}function bt(e,t){if(t&&("object"===yt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function wt(e){return wt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},wt(e)}var kt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&vt(e,t)}(a,t);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=wt(o);if(i){var n=wt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return bt(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l.call(this,e)}return n=a,(r=[{key:"render",value:function(){var t=this.props,n=t.children,r=t.title;return e.createElement("div",{className:Ke(Tt.bodySection)},e.createElement("h2",{className:Ke(Tt.bodySectionH2)},r),n)}}])&&gt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(e.Component);kt.defaultProps={title:""},kt.propTypes={title:o().string};var xt,Et,St,Tt=$e.create({bodySection:(xt={display:"flex",flexWrap:"wrap",width:"100%"},Et="@media screen and (max-width: 900px)",St={boxSizing:"border-box",paddingLeft:"50px",paddingRight:"50px",paddingBottom:"20px"},Et in xt?Object.defineProperty(xt,Et,{value:St,enumerable:!0,configurable:!0,writable:!0}):xt[Et]=St,xt),bodySectionH2:{width:"100%"}});const Ct=kt;function _t(e){return _t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_t(e)}function Pt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Ot(e,t){return Ot=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},Ot(e,t)}function Nt(e,t){if(t&&("object"===_t(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function Mt(e){return Mt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Mt(e)}var Rt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ot(e,t)}(a,t);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Mt(o);if(i){var n=Mt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Nt(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),l.call(this,e)}return n=a,(r=[{key:"render",value:function(){return e.createElement("div",{className:Ke(zt.bodySectionWithMargin)},e.createElement(Ct,this.props))}}])&&Pt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(e.Component);Rt.defaultProps={title:""},Rt.propTypes={title:o().string};var zt=$e.create({bodySectionWithMargin:{marginBottom:"40px",width:"100%"}});const jt=Rt;function It(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var At="@media screen and (max-width: 900px)",Ft=$e.create({login:It({margin:"50px",flexGrow:1},At,{marginTop:"10px",marginLeft:0,marginRight:0,marginBottom:0}),loginInput:It({marginLeft:"10px",marginRight:"20px"},At,{display:"block",marginLeft:0,marginTop:"10px",marginBottom:"10px"})});const Dt=function(){return e.createElement("div",{className:Ke(Ft.login)},e.createElement("p",null,"Login to access the full dashboard"),e.createElement("label",{htmlFor:"email"},"Email:"),e.createElement("input",{type:"email",id:"email",className:Ke(Ft.loginInput)}),e.createElement("label",{htmlFor:"password"},"Password:"),e.createElement("input",{type:"password",id:"password",className:Ke(Ft.loginInput)}),e.createElement("button",null,"OK"))};var Lt={backgroundColor:"#f5f5f5ab"},Bt={backgroundColor:"#deb5b545"};function Wt(t){var n,r,o=t.isHeader,i=t.textFirstCell,l=t.textSecondCell,a=Ke(o?Ht.CourseListTh:Ht.CourseListTd);return!0===o?n=null===l?e.createElement("th",{colSpan:"2",className:Ke(Ht.CourseListThSpan2)},i):e.createElement(e.Fragment,null,e.createElement("th",{className:a},i),e.createElement("th",{className:a},l)):!1===o&&(n=e.createElement(e.Fragment,null,e.createElement("td",{className:a},i),e.createElement("td",{className:a},l))),r=o?Bt:Lt,e.createElement("tr",{style:r},n)}Wt.defaultProps={isHeader:!1,textSecondCell:null},Wt.propTypes={isHeader:o().bool,textFirstCell:o().string.isRequired,textSecondCell:o().oneOfType([o().string,o().number])};var Ut="rgb(170, 170, 170);",Ht=$e.create({CourseListTh:{borderTop:"1px solid ".concat(Ut),borderBottom:"1px solid ".concat(Ut),textAlign:"left",fontSize:"18px"},CourseListThSpan2:{textAlign:"center"},CourseListTd:{textAlign:"left"}});const Vt=Wt,Qt=o().shape({id:o().number,name:o().string,credit:o().number});function $t(t){var n=t.listCourses;return e.createElement("table",{id:"CourseList",className:Ke(Kt.list)},e.createElement("thead",null,e.createElement(Vt,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(Vt,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0===n.length&&e.createElement(Vt,{textFirstCell:"No course available yet",isHeader:!1}),n.map((function(t){return e.createElement(Vt,{key:t.id,textFirstCell:t.name,textSecondCell:t.credit,isHeader:!1})}))))}$t.defaultProps={listCourses:[]},$t.propTypes={listCourses:o().arrayOf(Qt)};var Kt=$e.create({list:{border:"1px solid ".concat("rgb(170, 170, 170);"),borderCollapse:"collapse",width:"95%",margin:"40px auto 0 auto"}});const qt=$t;var Gt=n(379),Yt=n.n(Gt),Xt=n(342);Yt()(Xt.Z,{insert:"head",singleton:!1}),Xt.Z.locals;const Zt=function(){return e.createElement(e.Fragment,null,e.createElement("div",{className:"footer"},e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School")))};function Jt(e){return Jt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Jt(e)}function en(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function tn(e,t){return tn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},tn(e,t)}function nn(e,t){if(t&&("object"===Jt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return rn(e)}function rn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function on(e){return on=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},on(e)}var ln=[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}],an=[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}],un=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&tn(e,t)}(a,t);var n,r,o,i,l=(o=a,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=on(o);if(i){var n=on(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return nn(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=l.call(this,e)).handleKeyCombination=t.handleKeyCombination.bind(rn(t)),t}return n=a,(r=[{key:"handleKeyCombination",value:function(e){"h"===e.key&&e.ctrlKey&&(alert("Logging you out"),this.props.logOut())}},{key:"componentDidMount",value:function(){document.addEventListener("keydown",this.handleKeyCombination)}},{key:"componentWillUnmount",value:function(){document.removeEventListener("keydown",this.handleKeyCombination)}},{key:"render",value:function(){var t=this.props,n=t.isLoggedIn;return t.logOut,e.createElement(e.Fragment,null,e.createElement(dt,{listNotifications:an}),e.createElement("div",{className:Ke(sn.app)},e.createElement(ht,null)),e.createElement("div",{className:Ke(sn.body)},n?e.createElement(jt,{title:"Course list"},e.createElement(qt,{listCourses:ln})):e.createElement(jt,{title:"Log in to continue"},e.createElement(Dt,null))),e.createElement(Ct,{title:"News from the School"},e.createElement("p",null,"Some Random Text")),e.createElement("div",{className:Ke(sn.footer)},e.createElement(Zt,null)))}}])&&en(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),a}(e.Component);un.defaultProps={isLoggedIn:!1,logOut:function(){}},un.propTypes={isLoggedIn:o().bool,logOut:o().func};var cn="#e01d3f",sn=$e.create({app:{borderBottom:"3px solid ".concat(cn)},body:{display:"flex",justifyContent:"center"},footer:{borderTop:"3px solid ".concat(cn),width:"100%",display:"flex",justifyContent:"center",position:"fixed",bottom:0,fontStyle:"italic"}});const fn=un;t.render(e.createElement(e.StrictMode,null,e.createElement(fn,null)),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQVIsRUFBUUEsV0FDUixPQURBLEVBQW9CRixPQUVsQixnQ0FDRSxnQkFBQyxHQUFELENBQWVsRSxrQkFBbUJBLEtBQ2xDLHVCQUFLbEQsVUFBVzNULEdBQUlpVyxHQUFPaUYsTUFDekIsZ0JBQUMsR0FBRCxPQUVGLHVCQUFLdkgsVUFBVzNULEdBQUlpVyxHQUFPem5DLE9BQ3ZCeXNDLEVBS0EsZ0JBQUMsR0FBRCxDQUE2QnhDLE1BQU0sZUFDakMsZ0JBQUMsR0FBRCxDQUFZOEIsWUFBYUEsTUFMM0IsZ0JBQUMsR0FBRCxDQUE2QjlCLE1BQU0sc0JBQ2pDLGdCQUFDLEdBQUQsUUFRTixnQkFBQyxHQUFELENBQWFBLE1BQU0sd0JBQ2pCLDhDQUdGLHVCQUFLOUUsVUFBVzNULEdBQUlpVyxHQUFPa0YsU0FDekIsZ0JBQUMsR0FBRCxvRkE3Q0pQLENBQVluMkIsRUFBQUEsV0FvRGxCbTJCLEdBQUkvNEIsYUFBZSxDQUNqQm81QixZQUFZLEVBQ1pGLE9BQVEsY0FHVkgsR0FBSXhFLFVBQVksQ0FDZDZFLFdBQVlqa0QsSUFBQUEsS0FDWitqRCxPQUFRL2pELElBQUFBLE1BR1YsSUFBTW1qRCxHQUNPLFVBR1BsRSxHQUFTMUIsR0FBQUEsT0FBa0IsQ0FDL0IyRyxJQUFLLENBQ0gxRSxhQUFjLGFBQUYsT0FBZTJELEtBRzdCM3JDLEtBQU0sQ0FDSjhqQixRQUFTLE9BQ1R1VyxlQUFnQixVQUdsQnNTLE9BQVEsQ0FDTmYsVUFBVyxhQUFGLE9BQWVELElBQ3hCcmhDLE1BQU8sT0FDUHdaLFFBQVMsT0FDVHVXLGVBQWdCLFNBQ2hCNkIsU0FBVSxRQUNWMFEsT0FBUSxFQUNSQyxVQUFXLFlBSWYsWUMxR0FDLEVBQUFBLE9BQ0UsZ0JBQUMsYUFBRCxLQUNFLGdCQUFDLEdBQUQsT0FFRmpzRCxTQUFTa3NELGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLWFzYXAuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2FzYXAvYnJvd3Nlci1yYXcuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0Zvb3Rlci9Gb290ZXIuY3NzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc3RyaW5nLWhhc2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2FwaHJvZGl0ZS9lcy9jaHVuay1mZWJjZTQ2Yi5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbkl0ZW0uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uSXRlbVNoYXBlLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9hc3NldHMvY2xvc2UtaWNvbi5wbmciLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9ucy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvYXNzZXRzL2hvbGJlcnRvbl9sb2dvLmpwZyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvSGVhZGVyL0hlYWRlci5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvTG9naW4vTG9naW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdFJvdy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VTaGFwZS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Gb290ZXIvRm9vdGVyLmNzcz8xYmE2Iiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Gb290ZXIvRm9vdGVyLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy91dGlscy91dGlscy5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQXBwL0FwcC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJhd0FzYXAgcHJvdmlkZXMgZXZlcnl0aGluZyB3ZSBuZWVkIGV4Y2VwdCBleGNlcHRpb24gbWFuYWdlbWVudC5cbnZhciByYXdBc2FwID0gcmVxdWlyZShcIi4vcmF3XCIpO1xuLy8gUmF3VGFza3MgYXJlIHJlY3ljbGVkIHRvIHJlZHVjZSBHQyBjaHVybi5cbnZhciBmcmVlVGFza3MgPSBbXTtcbi8vIFdlIHF1ZXVlIGVycm9ycyB0byBlbnN1cmUgdGhleSBhcmUgdGhyb3duIGluIHJpZ2h0IG9yZGVyIChGSUZPKS5cbi8vIEFycmF5LWFzLXF1ZXVlIGlzIGdvb2QgZW5vdWdoIGhlcmUsIHNpbmNlIHdlIGFyZSBqdXN0IGRlYWxpbmcgd2l0aCBleGNlcHRpb25zLlxudmFyIHBlbmRpbmdFcnJvcnMgPSBbXTtcbnZhciByZXF1ZXN0RXJyb3JUaHJvdyA9IHJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKHRocm93Rmlyc3RFcnJvcik7XG5cbmZ1bmN0aW9uIHRocm93Rmlyc3RFcnJvcigpIHtcbiAgICBpZiAocGVuZGluZ0Vycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgcGVuZGluZ0Vycm9ycy5zaGlmdCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDYWxscyBhIHRhc2sgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciByZXR1cm5pbmcsIGluIGl0cyBvd24gZXZlbnQsIHdpdGggcHJpb3JpdHlcbiAqIG92ZXIgb3RoZXIgZXZlbnRzIGxpa2UgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZXBhaW50LiBBbiBlcnJvciB0aHJvd24gZnJvbSBhblxuICogZXZlbnQgd2lsbCBub3QgaW50ZXJydXB0LCBub3IgZXZlbiBzdWJzdGFudGlhbGx5IHNsb3cgZG93biB0aGUgcHJvY2Vzc2luZyBvZlxuICogb3RoZXIgZXZlbnRzLCBidXQgd2lsbCBiZSByYXRoZXIgcG9zdHBvbmVkIHRvIGEgbG93ZXIgcHJpb3JpdHkgZXZlbnQuXG4gKiBAcGFyYW0ge3tjYWxsfX0gdGFzayBBIGNhbGxhYmxlIG9iamVjdCwgdHlwaWNhbGx5IGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBub1xuICogYXJndW1lbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzYXA7XG5mdW5jdGlvbiBhc2FwKHRhc2spIHtcbiAgICB2YXIgcmF3VGFzaztcbiAgICBpZiAoZnJlZVRhc2tzLmxlbmd0aCkge1xuICAgICAgICByYXdUYXNrID0gZnJlZVRhc2tzLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJhd1Rhc2sgPSBuZXcgUmF3VGFzaygpO1xuICAgIH1cbiAgICByYXdUYXNrLnRhc2sgPSB0YXNrO1xuICAgIHJhd0FzYXAocmF3VGFzayk7XG59XG5cbi8vIFdlIHdyYXAgdGFza3Mgd2l0aCByZWN5Y2xhYmxlIHRhc2sgb2JqZWN0cy4gIEEgdGFzayBvYmplY3QgaW1wbGVtZW50c1xuLy8gYGNhbGxgLCBqdXN0IGxpa2UgYSBmdW5jdGlvbi5cbmZ1bmN0aW9uIFJhd1Rhc2soKSB7XG4gICAgdGhpcy50YXNrID0gbnVsbDtcbn1cblxuLy8gVGhlIHNvbGUgcHVycG9zZSBvZiB3cmFwcGluZyB0aGUgdGFzayBpcyB0byBjYXRjaCB0aGUgZXhjZXB0aW9uIGFuZCByZWN5Y2xlXG4vLyB0aGUgdGFzayBvYmplY3QgYWZ0ZXIgaXRzIHNpbmdsZSB1c2UuXG5SYXdUYXNrLnByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMudGFzay5jYWxsKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGFzYXAub25lcnJvcikge1xuICAgICAgICAgICAgLy8gVGhpcyBob29rIGV4aXN0cyBwdXJlbHkgZm9yIHRlc3RpbmcgcHVycG9zZXMuXG4gICAgICAgICAgICAvLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXRcbiAgICAgICAgICAgIC8vIGRlcGVuZHMgb24gaXRzIGV4aXN0ZW5jZS5cbiAgICAgICAgICAgIGFzYXAub25lcnJvcihlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJbiBhIHdlYiBicm93c2VyLCBleGNlcHRpb25zIGFyZSBub3QgZmF0YWwuIEhvd2V2ZXIsIHRvIGF2b2lkXG4gICAgICAgICAgICAvLyBzbG93aW5nIGRvd24gdGhlIHF1ZXVlIG9mIHBlbmRpbmcgdGFza3MsIHdlIHJldGhyb3cgdGhlIGVycm9yIGluIGFcbiAgICAgICAgICAgIC8vIGxvd2VyIHByaW9yaXR5IHR1cm4uXG4gICAgICAgICAgICBwZW5kaW5nRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgcmVxdWVzdEVycm9yVGhyb3coKTtcbiAgICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMudGFzayA9IG51bGw7XG4gICAgICAgIGZyZWVUYXNrc1tmcmVlVGFza3MubGVuZ3RoXSA9IHRoaXM7XG4gICAgfVxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vLyBVc2UgdGhlIGZhc3Rlc3QgbWVhbnMgcG9zc2libGUgdG8gZXhlY3V0ZSBhIHRhc2sgaW4gaXRzIG93biB0dXJuLCB3aXRoXG4vLyBwcmlvcml0eSBvdmVyIG90aGVyIGV2ZW50cyBpbmNsdWRpbmcgSU8sIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVkcmF3XG4vLyBldmVudHMgaW4gYnJvd3NlcnMuXG4vL1xuLy8gQW4gZXhjZXB0aW9uIHRocm93biBieSBhIHRhc2sgd2lsbCBwZXJtYW5lbnRseSBpbnRlcnJ1cHQgdGhlIHByb2Nlc3Npbmcgb2Zcbi8vIHN1YnNlcXVlbnQgdGFza3MuIFRoZSBoaWdoZXIgbGV2ZWwgYGFzYXBgIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93biBieSBhIHRhc2ssIHRoYXQgdGhlIHRhc2sgcXVldWUgd2lsbCBjb250aW51ZSBmbHVzaGluZyBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZSwgYnV0IGlmIHlvdSB1c2UgYHJhd0FzYXBgIGRpcmVjdGx5LCB5b3UgYXJlIHJlc3BvbnNpYmxlIHRvXG4vLyBlaXRoZXIgZW5zdXJlIHRoYXQgbm8gZXhjZXB0aW9ucyBhcmUgdGhyb3duIGZyb20geW91ciB0YXNrLCBvciB0byBtYW51YWxseVxuLy8gY2FsbCBgcmF3QXNhcC5yZXF1ZXN0Rmx1c2hgIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5tb2R1bGUuZXhwb3J0cyA9IHJhd0FzYXA7XG5mdW5jdGlvbiByYXdBc2FwKHRhc2spIHtcbiAgICBpZiAoIXF1ZXVlLmxlbmd0aCkge1xuICAgICAgICByZXF1ZXN0Rmx1c2goKTtcbiAgICAgICAgZmx1c2hpbmcgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBFcXVpdmFsZW50IHRvIHB1c2gsIGJ1dCBhdm9pZHMgYSBmdW5jdGlvbiBjYWxsLlxuICAgIHF1ZXVlW3F1ZXVlLmxlbmd0aF0gPSB0YXNrO1xufVxuXG52YXIgcXVldWUgPSBbXTtcbi8vIE9uY2UgYSBmbHVzaCBoYXMgYmVlbiByZXF1ZXN0ZWQsIG5vIGZ1cnRoZXIgY2FsbHMgdG8gYHJlcXVlc3RGbHVzaGAgYXJlXG4vLyBuZWNlc3NhcnkgdW50aWwgdGhlIG5leHQgYGZsdXNoYCBjb21wbGV0ZXMuXG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIG1ldGhvZCB0aGF0IGF0dGVtcHRzIHRvIGtpY2tcbi8vIG9mZiBhIGBmbHVzaGAgZXZlbnQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gYGZsdXNoYCB3aWxsIGF0dGVtcHQgdG8gZXhoYXVzdFxuLy8gdGhlIGV2ZW50IHF1ZXVlIGJlZm9yZSB5aWVsZGluZyB0byB0aGUgYnJvd3NlcidzIG93biBldmVudCBsb29wLlxudmFyIHJlcXVlc3RGbHVzaDtcbi8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgbmV4dCB0YXNrIHRvIGV4ZWN1dGUgaW4gdGhlIHRhc2sgcXVldWUuIFRoaXMgaXNcbi8vIHByZXNlcnZlZCBiZXR3ZWVuIGNhbGxzIHRvIGBmbHVzaGAgc28gdGhhdCBpdCBjYW4gYmUgcmVzdW1lZCBpZlxuLy8gYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24uXG52YXIgaW5kZXggPSAwO1xuLy8gSWYgYSB0YXNrIHNjaGVkdWxlcyBhZGRpdGlvbmFsIHRhc2tzIHJlY3Vyc2l2ZWx5LCB0aGUgdGFzayBxdWV1ZSBjYW4gZ3Jvd1xuLy8gdW5ib3VuZGVkLiBUbyBwcmV2ZW50IG1lbW9yeSBleGhhdXN0aW9uLCB0aGUgdGFzayBxdWV1ZSB3aWxsIHBlcmlvZGljYWxseVxuLy8gdHJ1bmNhdGUgYWxyZWFkeS1jb21wbGV0ZWQgdGFza3MuXG52YXIgY2FwYWNpdHkgPSAxMDI0O1xuXG4vLyBUaGUgZmx1c2ggZnVuY3Rpb24gcHJvY2Vzc2VzIGFsbCB0YXNrcyB0aGF0IGhhdmUgYmVlbiBzY2hlZHVsZWQgd2l0aFxuLy8gYHJhd0FzYXBgIHVubGVzcyBhbmQgdW50aWwgb25lIG9mIHRob3NlIHRhc2tzIHRocm93cyBhbiBleGNlcHRpb24uXG4vLyBJZiBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgYGZsdXNoYCBlbnN1cmVzIHRoYXQgaXRzIHN0YXRlIHdpbGwgcmVtYWluXG4vLyBjb25zaXN0ZW50IGFuZCB3aWxsIHJlc3VtZSB3aGVyZSBpdCBsZWZ0IG9mZiB3aGVuIGNhbGxlZCBhZ2Fpbi5cbi8vIEhvd2V2ZXIsIGBmbHVzaGAgZG9lcyBub3QgbWFrZSBhbnkgYXJyYW5nZW1lbnRzIHRvIGJlIGNhbGxlZCBhZ2FpbiBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93bi5cbmZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHdoaWxlIChpbmRleCA8IHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIC8vIEFkdmFuY2UgdGhlIGluZGV4IGJlZm9yZSBjYWxsaW5nIHRoZSB0YXNrLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSB3aWxsXG4gICAgICAgIC8vIGJlZ2luIGZsdXNoaW5nIG9uIHRoZSBuZXh0IHRhc2sgdGhlIHRhc2sgdGhyb3dzIGFuIGVycm9yLlxuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcXVldWVbY3VycmVudEluZGV4XS5jYWxsKCk7XG4gICAgICAgIC8vIFByZXZlbnQgbGVha2luZyBtZW1vcnkgZm9yIGxvbmcgY2hhaW5zIG9mIHJlY3Vyc2l2ZSBjYWxscyB0byBgYXNhcGAuXG4gICAgICAgIC8vIElmIHdlIGNhbGwgYGFzYXBgIHdpdGhpbiB0YXNrcyBzY2hlZHVsZWQgYnkgYGFzYXBgLCB0aGUgcXVldWUgd2lsbFxuICAgICAgICAvLyBncm93LCBidXQgdG8gYXZvaWQgYW4gTyhuKSB3YWxrIGZvciBldmVyeSB0YXNrIHdlIGV4ZWN1dGUsIHdlIGRvbid0XG4gICAgICAgIC8vIHNoaWZ0IHRhc2tzIG9mZiB0aGUgcXVldWUgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gZXhlY3V0ZWQuXG4gICAgICAgIC8vIEluc3RlYWQsIHdlIHBlcmlvZGljYWxseSBzaGlmdCAxMDI0IHRhc2tzIG9mZiB0aGUgcXVldWUuXG4gICAgICAgIGlmIChpbmRleCA+IGNhcGFjaXR5KSB7XG4gICAgICAgICAgICAvLyBNYW51YWxseSBzaGlmdCBhbGwgdmFsdWVzIHN0YXJ0aW5nIGF0IHRoZSBpbmRleCBiYWNrIHRvIHRoZVxuICAgICAgICAgICAgLy8gYmVnaW5uaW5nIG9mIHRoZSBxdWV1ZS5cbiAgICAgICAgICAgIGZvciAodmFyIHNjYW4gPSAwLCBuZXdMZW5ndGggPSBxdWV1ZS5sZW5ndGggLSBpbmRleDsgc2NhbiA8IG5ld0xlbmd0aDsgc2NhbisrKSB7XG4gICAgICAgICAgICAgICAgcXVldWVbc2Nhbl0gPSBxdWV1ZVtzY2FuICsgaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUubGVuZ3RoIC09IGluZGV4O1xuICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgaW5kZXggPSAwO1xuICAgIGZsdXNoaW5nID0gZmFsc2U7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGltcGxlbWVudGVkIHVzaW5nIGEgc3RyYXRlZ3kgYmFzZWQgb24gZGF0YSBjb2xsZWN0ZWQgZnJvbVxuLy8gZXZlcnkgYXZhaWxhYmxlIFNhdWNlTGFicyBTZWxlbml1bSB3ZWIgZHJpdmVyIHdvcmtlciBhdCB0aW1lIG9mIHdyaXRpbmcuXG4vLyBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xbUctNVVZR3VwNXF4R2RFTVdraFA2QldDejA1M05VYjJFMVFvVVRVMTZ1QS9lZGl0I2dpZD03ODM3MjQ1OTNcblxuLy8gU2FmYXJpIDYgYW5kIDYuMSBmb3IgZGVza3RvcCwgaVBhZCwgYW5kIGlQaG9uZSBhcmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdFxuLy8gaGF2ZSBXZWJLaXRNdXRhdGlvbk9ic2VydmVyIGJ1dCBub3QgdW4tcHJlZml4ZWQgTXV0YXRpb25PYnNlcnZlci5cbi8vIE11c3QgdXNlIGBnbG9iYWxgIG9yIGBzZWxmYCBpbnN0ZWFkIG9mIGB3aW5kb3dgIHRvIHdvcmsgaW4gYm90aCBmcmFtZXMgYW5kIHdlYlxuLy8gd29ya2Vycy4gYGdsb2JhbGAgaXMgYSBwcm92aXNpb24gb2YgQnJvd3NlcmlmeSwgTXIsIE1ycywgb3IgTW9wLlxuXG4vKiBnbG9iYWxzIHNlbGYgKi9cbnZhciBzY29wZSA9IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiBzZWxmO1xudmFyIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID0gc2NvcGUuTXV0YXRpb25PYnNlcnZlciB8fCBzY29wZS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVycyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBoYXZlIGhpZ2ggcHJpb3JpdHkgYW5kIHdvcmtcbi8vIHJlbGlhYmx5IGV2ZXJ5d2hlcmUgdGhleSBhcmUgaW1wbGVtZW50ZWQuXG4vLyBUaGV5IGFyZSBpbXBsZW1lbnRlZCBpbiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuLy9cbi8vIC0gQW5kcm9pZCA0LTQuM1xuLy8gLSBDaHJvbWUgMjYtMzRcbi8vIC0gRmlyZWZveCAxNC0yOVxuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciAxMVxuLy8gLSBpUGFkIFNhZmFyaSA2LTcuMVxuLy8gLSBpUGhvbmUgU2FmYXJpIDctNy4xXG4vLyAtIFNhZmFyaSA2LTdcbmlmICh0eXBlb2YgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGZsdXNoKTtcblxuLy8gTWVzc2FnZUNoYW5uZWxzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGdpdmUgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRNTFxuLy8gdGFzayBxdWV1ZSwgYXJlIGltcGxlbWVudGVkIGluIEludGVybmV0IEV4cGxvcmVyIDEwLCBTYWZhcmkgNS4wLTEsIGFuZCBPcGVyYVxuLy8gMTEtMTIsIGFuZCBpbiB3ZWIgd29ya2VycyBpbiBtYW55IGVuZ2luZXMuXG4vLyBBbHRob3VnaCBtZXNzYWdlIGNoYW5uZWxzIHlpZWxkIHRvIGFueSBxdWV1ZWQgcmVuZGVyaW5nIGFuZCBJTyB0YXNrcywgdGhleVxuLy8gd291bGQgYmUgYmV0dGVyIHRoYW4gaW1wb3NpbmcgdGhlIDRtcyBkZWxheSBvZiB0aW1lcnMuXG4vLyBIb3dldmVyLCB0aGV5IGRvIG5vdCB3b3JrIHJlbGlhYmx5IGluIEludGVybmV0IEV4cGxvcmVyIG9yIFNhZmFyaS5cblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTAgaXMgdGhlIG9ubHkgYnJvd3NlciB0aGF0IGhhcyBzZXRJbW1lZGlhdGUgYnV0IGRvZXNcbi8vIG5vdCBoYXZlIE11dGF0aW9uT2JzZXJ2ZXJzLlxuLy8gQWx0aG91Z2ggc2V0SW1tZWRpYXRlIHlpZWxkcyB0byB0aGUgYnJvd3NlcidzIHJlbmRlcmVyLCBpdCB3b3VsZCBiZVxuLy8gcHJlZmVycmFibGUgdG8gZmFsbGluZyBiYWNrIHRvIHNldFRpbWVvdXQgc2luY2UgaXQgZG9lcyBub3QgaGF2ZVxuLy8gdGhlIG1pbmltdW0gNG1zIHBlbmFsdHkuXG4vLyBVbmZvcnR1bmF0ZWx5IHRoZXJlIGFwcGVhcnMgdG8gYmUgYSBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAgTW9iaWxlIChhbmRcbi8vIERlc2t0b3AgdG8gYSBsZXNzZXIgZXh0ZW50KSB0aGF0IHJlbmRlcnMgYm90aCBzZXRJbW1lZGlhdGUgYW5kXG4vLyBNZXNzYWdlQ2hhbm5lbCB1c2VsZXNzIGZvciB0aGUgcHVycG9zZXMgb2YgQVNBUC5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS9pc3N1ZXMvMzk2XG5cbi8vIFRpbWVycyBhcmUgaW1wbGVtZW50ZWQgdW5pdmVyc2FsbHkuXG4vLyBXZSBmYWxsIGJhY2sgdG8gdGltZXJzIGluIHdvcmtlcnMgaW4gbW9zdCBlbmdpbmVzLCBhbmQgaW4gZm9yZWdyb3VuZFxuLy8gY29udGV4dHMgaW4gdGhlIGZvbGxvd2luZyBicm93c2Vycy5cbi8vIEhvd2V2ZXIsIG5vdGUgdGhhdCBldmVuIHRoaXMgc2ltcGxlIGNhc2UgcmVxdWlyZXMgbnVhbmNlcyB0byBvcGVyYXRlIGluIGFcbi8vIGJyb2FkIHNwZWN0cnVtIG9mIGJyb3dzZXJzLlxuLy9cbi8vIC0gRmlyZWZveCAzLTEzXG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDYtOVxuLy8gLSBpUGFkIFNhZmFyaSA0LjNcbi8vIC0gTHlueCAyLjguN1xufSBlbHNlIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoZmx1c2gpO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCByZXF1ZXN0cyB0aGF0IHRoZSBoaWdoIHByaW9yaXR5IGV2ZW50IHF1ZXVlIGJlIGZsdXNoZWQgYXNcbi8vIHNvb24gYXMgcG9zc2libGUuXG4vLyBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IGFuIGVycm9yIHRocm93biBpbiBhIHRhc2sgZnJvbSBzdGFsbGluZyB0aGUgZXZlbnRcbi8vIHF1ZXVlIGlmIHRoZSBleGNlcHRpb24gaGFuZGxlZCBieSBOb2RlLmpz4oCZc1xuLy8gYHByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiKWAgb3IgYnkgYSBkb21haW4uXG5yYXdBc2FwLnJlcXVlc3RGbHVzaCA9IHJlcXVlc3RGbHVzaDtcblxuLy8gVG8gcmVxdWVzdCBhIGhpZ2ggcHJpb3JpdHkgZXZlbnQsIHdlIGluZHVjZSBhIG11dGF0aW9uIG9ic2VydmVyIGJ5IHRvZ2dsaW5nXG4vLyB0aGUgdGV4dCBvZiBhIHRleHQgbm9kZSBiZXR3ZWVuIFwiMVwiIGFuZCBcIi0xXCIuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjaykge1xuICAgIHZhciB0b2dnbGUgPSAxO1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICB0b2dnbGUgPSAtdG9nZ2xlO1xuICAgICAgICBub2RlLmRhdGEgPSB0b2dnbGU7XG4gICAgfTtcbn1cblxuLy8gVGhlIG1lc3NhZ2UgY2hhbm5lbCB0ZWNobmlxdWUgd2FzIGRpc2NvdmVyZWQgYnkgTWFsdGUgVWJsIGFuZCB3YXMgdGhlXG4vLyBvcmlnaW5hbCBmb3VuZGF0aW9uIGZvciB0aGlzIGxpYnJhcnkuXG4vLyBodHRwOi8vd3d3Lm5vbmJsb2NraW5nLmlvLzIwMTEvMDYvd2luZG93bmV4dHRpY2suaHRtbFxuXG4vLyBTYWZhcmkgNi4wLjUgKGF0IGxlYXN0KSBpbnRlcm1pdHRlbnRseSBmYWlscyB0byBjcmVhdGUgbWVzc2FnZSBwb3J0cyBvbiBhXG4vLyBwYWdlJ3MgZmlyc3QgbG9hZC4gVGhhbmtmdWxseSwgdGhpcyB2ZXJzaW9uIG9mIFNhZmFyaSBzdXBwb3J0c1xuLy8gTXV0YXRpb25PYnNlcnZlcnMsIHNvIHdlIGRvbid0IG5lZWQgdG8gZmFsbCBiYWNrIGluIHRoYXQgY2FzZS5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU1lc3NhZ2VDaGFubmVsKGNhbGxiYWNrKSB7XG4vLyAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbi8vICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGNhbGxiYWNrO1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBGb3IgcmVhc29ucyBleHBsYWluZWQgYWJvdmUsIHdlIGFyZSBhbHNvIHVuYWJsZSB0byB1c2UgYHNldEltbWVkaWF0ZWBcbi8vIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLlxuLy8gRXZlbiBpZiB3ZSB3ZXJlLCB0aGVyZSBpcyBhbm90aGVyIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMC5cbi8vIEl0IGlzIG5vdCBzdWZmaWNpZW50IHRvIGFzc2lnbiBgc2V0SW1tZWRpYXRlYCB0byBgcmVxdWVzdEZsdXNoYCBiZWNhdXNlXG4vLyBgc2V0SW1tZWRpYXRlYCBtdXN0IGJlIGNhbGxlZCAqYnkgbmFtZSogYW5kIHRoZXJlZm9yZSBtdXN0IGJlIHdyYXBwZWQgaW4gYVxuLy8gY2xvc3VyZS5cbi8vIE5ldmVyIGZvcmdldC5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVNldEltbWVkaWF0ZShjYWxsYmFjaykge1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBTYWZhcmkgNi4wIGhhcyBhIHByb2JsZW0gd2hlcmUgdGltZXJzIHdpbGwgZ2V0IGxvc3Qgd2hpbGUgdGhlIHVzZXIgaXNcbi8vIHNjcm9sbGluZy4gVGhpcyBwcm9ibGVtIGRvZXMgbm90IGltcGFjdCBBU0FQIGJlY2F1c2UgU2FmYXJpIDYuMCBzdXBwb3J0c1xuLy8gbXV0YXRpb24gb2JzZXJ2ZXJzLCBzbyB0aGF0IGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW5zdGVhZC5cbi8vIEhvd2V2ZXIsIGlmIHdlIGV2ZXIgZWxlY3QgdG8gdXNlIHRpbWVycyBpbiBTYWZhcmksIHRoZSBwcmV2YWxlbnQgd29yay1hcm91bmRcbi8vIGlzIHRvIGFkZCBhIHNjcm9sbCBldmVudCBsaXN0ZW5lciB0aGF0IGNhbGxzIGZvciBhIGZsdXNoLlxuXG4vLyBgc2V0VGltZW91dGAgZG9lcyBub3QgY2FsbCB0aGUgcGFzc2VkIGNhbGxiYWNrIGlmIHRoZSBkZWxheSBpcyBsZXNzIHRoYW5cbi8vIGFwcHJveGltYXRlbHkgNyBpbiB3ZWIgd29ya2VycyBpbiBGaXJlZm94IDggdGhyb3VnaCAxOCwgYW5kIHNvbWV0aW1lcyBub3Rcbi8vIGV2ZW4gdGhlbi5cblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICAvLyBXZSBkaXNwYXRjaCBhIHRpbWVvdXQgd2l0aCBhIHNwZWNpZmllZCBkZWxheSBvZiAwIGZvciBlbmdpbmVzIHRoYXRcbiAgICAgICAgLy8gY2FuIHJlbGlhYmx5IGFjY29tbW9kYXRlIHRoYXQgcmVxdWVzdC4gVGhpcyB3aWxsIHVzdWFsbHkgYmUgc25hcHBlZFxuICAgICAgICAvLyB0byBhIDQgbWlsaXNlY29uZCBkZWxheSwgYnV0IG9uY2Ugd2UncmUgZmx1c2hpbmcsIHRoZXJlJ3Mgbm8gZGVsYXlcbiAgICAgICAgLy8gYmV0d2VlbiBldmVudHMuXG4gICAgICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChoYW5kbGVUaW1lciwgMCk7XG4gICAgICAgIC8vIEhvd2V2ZXIsIHNpbmNlIHRoaXMgdGltZXIgZ2V0cyBmcmVxdWVudGx5IGRyb3BwZWQgaW4gRmlyZWZveFxuICAgICAgICAvLyB3b3JrZXJzLCB3ZSBlbmxpc3QgYW4gaW50ZXJ2YWwgaGFuZGxlIHRoYXQgd2lsbCB0cnkgdG8gZmlyZVxuICAgICAgICAvLyBhbiBldmVudCAyMCB0aW1lcyBwZXIgc2Vjb25kIHVudGlsIGl0IHN1Y2NlZWRzLlxuICAgICAgICB2YXIgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbChoYW5kbGVUaW1lciwgNTApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZVRpbWVyKCkge1xuICAgICAgICAgICAgLy8gV2hpY2hldmVyIHRpbWVyIHN1Y2NlZWRzIHdpbGwgY2FuY2VsIGJvdGggdGltZXJzIGFuZFxuICAgICAgICAgICAgLy8gZXhlY3V0ZSB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUaGlzIGlzIGZvciBgYXNhcC5qc2Agb25seS5cbi8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdCBkZXBlbmRzIG9uXG4vLyBpdHMgZXhpc3RlbmNlLlxucmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIgPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXI7XG5cbi8vIEFTQVAgd2FzIG9yaWdpbmFsbHkgYSBuZXh0VGljayBzaGltIGluY2x1ZGVkIGluIFEuIFRoaXMgd2FzIGZhY3RvcmVkIG91dFxuLy8gaW50byB0aGlzIEFTQVAgcGFja2FnZS4gSXQgd2FzIGxhdGVyIGFkYXB0ZWQgdG8gUlNWUCB3aGljaCBtYWRlIGZ1cnRoZXJcbi8vIGFtZW5kbWVudHMuIFRoZXNlIGRlY2lzaW9ucywgcGFydGljdWxhcmx5IHRvIG1hcmdpbmFsaXplIE1lc3NhZ2VDaGFubmVsIGFuZFxuLy8gdG8gY2FwdHVyZSB0aGUgTXV0YXRpb25PYnNlcnZlciBpbXBsZW1lbnRhdGlvbiBpbiBhIGNsb3N1cmUsIHdlcmUgaW50ZWdyYXRlZFxuLy8gYmFjayBpbnRvIEFTQVAgcHJvcGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RpbGRlaW8vcnN2cC5qcy9ibG9iL2NkZGY3MjMyNTQ2YTljZjg1ODUyNGI3NWNkZTZmOWVkZjcyNjIwYTcvbGliL3JzdnAvYXNhcC5qc1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCI6cm9vdCB7XFxuICAtLW1haW4tY29sb3I6ICNlMDFkM2Y7XFxufVxcblxcbi5mb290ZXIge1xcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHZhcigtLW1haW4tY29sb3IpO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBib3R0b206IDA7XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9Gb290ZXIvRm9vdGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHVDQUF1QztFQUN2QyxXQUFXO0VBQ1gsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixlQUFlO0VBQ2YsU0FBUztFQUNULGtCQUFrQjtBQUNwQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAtLW1haW4tY29sb3I6ICNlMDFkM2Y7XFxufVxcblxcbi5mb290ZXIge1xcbiAgYm9yZGVyLXRvcDogM3B4IHNvbGlkIHZhcigtLW1haW4tY29sb3IpO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBib3R0b206IDA7XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBhcnIgJiYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXSk7IGlmIChfaSA9PSBudWxsKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX3MsIF9lOyB0cnkgeyBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBiaWdpbnQ6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xNC4wXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7XG5mdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsayl7ZGE9ITE7ZWE9bnVsbDtiYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgbD1lYTtkYT0hMTtlYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtmYXx8KGZhPSEwLGhhPWwpfX12YXIgbGE9bnVsbCxtYT1udWxsLG5hPW51bGw7XG5mdW5jdGlvbiBvYShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9bmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH12YXIgcGE9bnVsbCxxYT17fTtcbmZ1bmN0aW9uIHJhKCl7aWYocGEpZm9yKHZhciBhIGluIHFhKXt2YXIgYj1xYVthXSxjPXBhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighc2FbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7c2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZih0YS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTt0YVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZ1YShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8odWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIHVhKGEsYixjKXtpZih2YVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7dmFbYV09Yjt3YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBzYT1bXSx0YT17fSx2YT17fSx3YT17fTtmdW5jdGlvbiB4YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighcWEuaGFzT3duUHJvcGVydHkoYyl8fHFhW2NdIT09ZCl7aWYocWFbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO3FhW2NdPWQ7Yj0hMH19YiYmcmEoKX12YXIgeWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLHphPW51bGwsQWE9bnVsbCxCYT1udWxsO1xuZnVuY3Rpb24gQ2EoYSl7aWYoYT1tYShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHphKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9bGEoYiksemEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRGEoYSl7QWE/QmE/QmEucHVzaChhKTpCYT1bYV06QWE9YX1mdW5jdGlvbiBFYSgpe2lmKEFhKXt2YXIgYT1BYSxiPUJhO0JhPUFhPW51bGw7Q2EoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUNhKGJbYV0pfX1mdW5jdGlvbiBGYShhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEdhKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSGEoKXt9dmFyIElhPUZhLEphPSExLEthPSExO2Z1bmN0aW9uIExhKCl7aWYobnVsbCE9PUFhfHxudWxsIT09QmEpSGEoKSxFYSgpfVxuZnVuY3Rpb24gTWEoYSxiLGMpe2lmKEthKXJldHVybiBhKGIsYyk7S2E9ITA7dHJ5e3JldHVybiBJYShhLGIsYyl9ZmluYWxseXtLYT0hMSxMYSgpfX12YXIgTmE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLE9hPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksUGE9e30sUWE9e307XG5mdW5jdGlvbiBSYShhKXtpZihPYS5jYWxsKFFhLGEpKXJldHVybiEwO2lmKE9hLmNhbGwoUGEsYSkpcmV0dXJuITE7aWYoTmEudGVzdChhKSlyZXR1cm4gUWFbYV09ITA7UGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gU2EoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBUYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxTYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBDPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0NbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBVYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIFZhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFxuVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuQy54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO3ZhciBXYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoV2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbmZ1bmN0aW9uIFhhKGEsYixjLGQpe3ZhciBlPUMuaGFzT3duUHJvcGVydHkoYik/Q1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KFRhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9SYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIFlhPS9eKC4qKVtcXFxcXFwvXS8sRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFphPUU/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsJGE9RT9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGFiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGJiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGNiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGRiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGViPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZmI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGdiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGhiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGliPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxqYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGtiPUU/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsbGI9RT9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsbWI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIG5iKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1tYiYmYVttYl18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiBvYihhKXtpZigtMT09PWEuX3N0YXR1cyl7YS5fc3RhdHVzPTA7dmFyIGI9YS5fY3RvcjtiPWIoKTthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfX1cbmZ1bmN0aW9uIHBiKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJiOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGI6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgaWI6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZWI6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGdiOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XG5cIkZvcndhcmRSZWZcIik7Y2FzZSBqYjpyZXR1cm4gcGIoYS50eXBlKTtjYXNlIGxiOnJldHVybiBwYihhLnJlbmRlcik7Y2FzZSBrYjppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIHBiKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIHFiKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1wYihhLnR5cGUpO2M9bnVsbDtkJiYoYz1wYihkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFlhLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiByYihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gc2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHRiKGEpe3ZhciBiPXNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB4YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9dGIoYSkpfWZ1bmN0aW9uIHliKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1zYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIHpiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXJiKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZYYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2IoYSxiKXtCYihhLGIpO3ZhciBjPXJiKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRiKGEsYi50eXBlLHJiKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBGYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBHYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUZiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEhiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIityYihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSWIoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnJiKGMpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9cmIoYi52YWx1ZSksZD1yYihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIExiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE1iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIE5iKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gT2IoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP05iKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFBiLFFiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU1iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1BiPVBifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1BiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVBiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gU2IoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGI9e2FuaW1hdGlvbmVuZDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNiKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWI9e30sVmI9e307XG55YSYmKFZiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2IoYSl7aWYoVWJbYV0pcmV0dXJuIFViW2FdO2lmKCFUYlthXSlyZXR1cm4gYTt2YXIgYj1UYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYilyZXR1cm4gVWJbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYj1XYihcImFuaW1hdGlvbmVuZFwiKSxZYj1XYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYj1XYihcImFuaW1hdGlvbnN0YXJ0XCIpLCRiPVdiKFwidHJhbnNpdGlvbmVuZFwiKSxhYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmM9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24gY2MoYSl7dmFyIGI9YmMuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBNYXAsYmMuc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24gZGMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZWMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmYyhhKXtpZihkYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBnYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1kYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBmYyhlKSxhO2lmKGY9PT1kKXJldHVybiBmYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhjKGEpe2E9Z2MoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpYyhhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBqYyhhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIga2M9bnVsbDtcbmZ1bmN0aW9uIGxjKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKylvYShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZvYShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gbWMoYSl7bnVsbCE9PWEmJihrYz1pYyhrYyxhKSk7YT1rYztrYz1udWxsO2lmKGEpe2pjKGEsbGMpO2lmKGtjKXRocm93IEVycm9yKHUoOTUpKTtpZihmYSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9fVxuZnVuY3Rpb24gbmMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIG9jKGEpe2lmKCF5YSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgcGM9W107ZnVuY3Rpb24gcWMoYSl7YS50b3BMZXZlbFR5cGU9bnVsbDthLm5hdGl2ZUV2ZW50PW51bGw7YS50YXJnZXRJbnN0PW51bGw7YS5hbmNlc3RvcnMubGVuZ3RoPTA7MTA+cGMubGVuZ3RoJiZwYy5wdXNoKGEpfVxuZnVuY3Rpb24gcmMoYSxiLGMsZCl7aWYocGMubGVuZ3RoKXt2YXIgZT1wYy5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1kO2UubmF0aXZlRXZlbnQ9YjtlLnRhcmdldEluc3Q9YztyZXR1cm4gZX1yZXR1cm57dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX19XG5mdW5jdGlvbiBzYyhhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9dGMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9bmMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTt2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzOzA9PT1jJiYoZ3w9NjQpO2Zvcih2YXIgaD1udWxsLGs9MDtrPHNhLmxlbmd0aDtrKyspe3ZhciBsPXNhW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9XG5pYyhoLGwpKX1tYyhoKX19ZnVuY3Rpb24gdWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjp2YyhiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6dmMoYixcImZvY3VzXCIsITApO3ZjKGIsXCJibHVyXCIsITApO2Muc2V0KFwiYmx1clwiLG51bGwpO2Muc2V0KFwiZm9jdXNcIixudWxsKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6b2MoYSkmJnZjKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFjLmluZGV4T2YoYSkmJkYoYSxiKX1jLnNldChhLG51bGwpfX1cbnZhciB3Yyx4Yyx5Yyx6Yz0hMSxBYz1bXSxCYz1udWxsLENjPW51bGwsRGM9bnVsbCxFYz1uZXcgTWFwLEZjPW5ldyBNYXAsR2M9W10sSGM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxJYz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBKYyhhLGIpe3ZhciBjPWNjKGIpO0hjLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSk7SWMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KX1mdW5jdGlvbiBLYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZSxjb250YWluZXI6ZH19XG5mdW5jdGlvbiBMYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkJjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpDYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpEYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6RWMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6RmMuZGVsZXRlKGIucG9pbnRlcklkKX19ZnVuY3Rpb24gTWMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1LYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1OYyhiKSxudWxsIT09YiYmeGMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfVxuZnVuY3Rpb24gT2MoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIEJjPU1jKEJjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBDYz1NYyhDYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gRGM9TWMoRGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtFYy5zZXQoZixNYyhFYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsRmMuc2V0KGYsTWMoRmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUGMoYSl7dmFyIGI9dGMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1kYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1lYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7eWMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIFFjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPU5jKGIpO251bGwhPT1jJiZ4YyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gU2MoYSxiLGMpe1FjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBUYygpe2Zvcih6Yz0hMTswPEFjLmxlbmd0aDspe3ZhciBhPUFjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1OYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJndjKGEpO2JyZWFrfXZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOkFjLnNoaWZ0KCl9bnVsbCE9PUJjJiZRYyhCYykmJihCYz1udWxsKTtudWxsIT09Q2MmJlFjKENjKSYmKENjPW51bGwpO251bGwhPT1EYyYmUWMoRGMpJiYoRGM9bnVsbCk7RWMuZm9yRWFjaChTYyk7RmMuZm9yRWFjaChTYyl9ZnVuY3Rpb24gVWMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLHpjfHwoemM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVGMpKSl9XG5mdW5jdGlvbiBWYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBVYyhiLGEpfWlmKDA8QWMubGVuZ3RoKXtVYyhBY1swXSxhKTtmb3IodmFyIGM9MTtjPEFjLmxlbmd0aDtjKyspe3ZhciBkPUFjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09QmMmJlVjKEJjLGEpO251bGwhPT1DYyYmVWMoQ2MsYSk7bnVsbCE9PURjJiZVYyhEYyxhKTtFYy5mb3JFYWNoKGIpO0ZjLmZvckVhY2goYik7Zm9yKGM9MDtjPEdjLmxlbmd0aDtjKyspZD1HY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8R2MubGVuZ3RoJiYoYz1HY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylQYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJkdjLnNoaWZ0KCl9XG52YXIgV2M9e30sWWM9bmV3IE1hcCxaYz1uZXcgTWFwLCRjPVtcImFib3J0XCIsXCJhYm9ydFwiLFhiLFwiYW5pbWF0aW9uRW5kXCIsWWIsXCJhbmltYXRpb25JdGVyYXRpb25cIixaYixcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcblwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLCRiLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBhZChhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXSxmPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO2Y9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmYsY2FwdHVyZWQ6ZitcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltkXSxldmVudFByaW9yaXR5OmJ9O1pjLnNldChkLGIpO1ljLnNldChkLGYpO1djW2VdPWZ9fVxuYWQoXCJibHVyIGJsdXIgY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXMgZm9jdXMgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSwwKTtcbmFkKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO2FkKCRjLDIpO2Zvcih2YXIgYmQ9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLGNkPTA7Y2Q8YmQubGVuZ3RoO2NkKyspWmMuc2V0KGJkW2NkXSwwKTtcbnZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIEYoYSxiKXt2YyhiLGEsITEpfWZ1bmN0aW9uIHZjKGEsYixjKXt2YXIgZD1aYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWQ/MjpkKXtjYXNlIDA6ZD1nZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2Nhc2UgMTpkPWhkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7ZGVmYXVsdDpkPWlkLmJpbmQobnVsbCxiLDEsYSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBnZChhLGIsYyxkKXtKYXx8SGEoKTt2YXIgZT1pZCxmPUphO0phPSEwO3RyeXtHYShlLGEsYixjLGQpfWZpbmFsbHl7KEphPWYpfHxMYSgpfX1mdW5jdGlvbiBoZChhLGIsYyxkKXtlZChkZCxpZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCl7aWYoZmQpaWYoMDxBYy5sZW5ndGgmJi0xPEhjLmluZGV4T2YoYSkpYT1LYyhudWxsLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZXt2YXIgZT1SYyhhLGIsYyxkKTtpZihudWxsPT09ZSlMYyhhLGQpO2Vsc2UgaWYoLTE8SGMuaW5kZXhPZihhKSlhPUtjKGUsYSxiLGMsZCksQWMucHVzaChhKTtlbHNlIGlmKCFPYyhlLGEsYixjLGQpKXtMYyhhLGQpO2E9cmMoYSxkLG51bGwsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9fX19XG5mdW5jdGlvbiBSYyhhLGIsYyxkKXtjPW5jKGQpO2M9dGMoYyk7aWYobnVsbCE9PWMpe3ZhciBlPWRjKGMpO2lmKG51bGw9PT1lKWM9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7Yz1lYyhlKTtpZihudWxsIT09YylyZXR1cm4gYztjPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtjPW51bGx9ZWxzZSBlIT09YyYmKGM9bnVsbCl9fWE9cmMoYSxkLGMsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9cmV0dXJuIG51bGx9XG52YXIgamQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sa2Q9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGpkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2tkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7amRbYl09amRbYV19KX0pO2Z1bmN0aW9uIGxkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxqZC5oYXNPd25Qcm9wZXJ0eShhKSYmamRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gbWQoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bGQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgbmQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIG9kKGEsYil7aWYoYil7aWYobmRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBwZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHFkPU1iLmh0bWw7ZnVuY3Rpb24gcmQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9Y2MoYSk7Yj13YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl1YyhiW2RdLGEsYyl9ZnVuY3Rpb24gc2QoKXt9XG5mdW5jdGlvbiB0ZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gdWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHZkKGEsYil7dmFyIGM9dWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9dWQoYyl9fVxuZnVuY3Rpb24gd2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT93ZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24geGQoKXtmb3IodmFyIGE9d2luZG93LGI9dGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9dGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB5ZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciB6ZD1cIiRcIixBZD1cIi8kXCIsQmQ9XCIkP1wiLENkPVwiJCFcIixEZD1udWxsLEVkPW51bGw7ZnVuY3Rpb24gRmQoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gR2QoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBIZD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxJZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gSmQoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBLZChhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT16ZHx8Yz09PUNkfHxjPT09QmQpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1BZCYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIExkPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE1kPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrTGQsTmQ9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitMZCxPZD1cIl9fcmVhY3RDb250YWluZXJlJFwiK0xkO1xuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YVtNZF07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbT2RdfHxjW01kXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUtkKGEpO251bGwhPT1hOyl7aWYoYz1hW01kXSlyZXR1cm4gYzthPUtkKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBOYyhhKXthPWFbTWRdfHxhW09kXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gUGQoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24gUWQoYSl7cmV0dXJuIGFbTmRdfHxudWxsfVxuZnVuY3Rpb24gUmQoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9bGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLFxuYix0eXBlb2YgYykpO3JldHVybiBjfWZ1bmN0aW9uIFRkKGEsYixjKXtpZihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gVWQoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1SZChiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspVGQoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylUZChjW2JdLFwiYnViYmxlZFwiLGEpfX1cbmZ1bmN0aW9uIFZkKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gV2QoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWZChhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWGQoYSl7amMoYSxVZCl9dmFyIFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsO1xuZnVuY3Rpb24gYWUoKXtpZigkZClyZXR1cm4gJGQ7dmFyIGEsYj1aZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiAkZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGJlKCl7cmV0dXJuITB9ZnVuY3Rpb24gY2UoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIEcoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2JlOmNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Y2U7cmV0dXJuIHRoaXN9XG5uKEcucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YmUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9YmV9LGlzUGVyc2lzdGVudDpjZSxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1jZTt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0cuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRy5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtkZShjKTtyZXR1cm4gY307ZGUoRyk7ZnVuY3Rpb24gZWUoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBmZShhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBkZShhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1lZTthLnJlbGVhc2U9ZmV9dmFyIGdlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxoZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaWU9WzksMTMsMjcsMzJdLGplPXlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxrZT1udWxsO3lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihrZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIGxlPXlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYha2UsbWU9eWEmJighamV8fGtlJiY4PGtlJiYxMT49a2UpLG5lPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLG9lPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHBlPSExO1xuZnVuY3Rpb24gcWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1pZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHJlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHNlPSExO2Z1bmN0aW9uIHRlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiByZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7cGU9ITA7cmV0dXJuIG5lO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PW5lJiZwZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFqZSYmcWUoYSxiKT8oYT1hZSgpLCRkPVpkPVlkPW51bGwsc2U9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIG1lJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB2ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGplKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPW9lLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPW9lLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1vZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugc2U/cWUoYSxjKSYmKGY9b2UuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1vZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhtZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihzZXx8ZiE9PW9lLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PW9lLmNvbXBvc2l0aW9uRW5kJiZzZSYmKGU9YWUoKSk6KFlkPWQsWmQ9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsc2U9ITApKSxmPWdlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9cmUoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFhkKGYpLGU9Zik6ZT1udWxsOyhhPWxlP3RlKGEsYyk6dWUoYSxjKSk/KGI9aGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxYZChiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSx3ZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB4ZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB5ZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB6ZShhLGIsYyl7YT1HLmdldFBvb2xlZCh5ZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0RhKGMpO1hkKGEpO3JldHVybiBhfXZhciBBZT1udWxsLEJlPW51bGw7ZnVuY3Rpb24gQ2UoYSl7bWMoYSl9ZnVuY3Rpb24gRGUoYSl7dmFyIGI9UGQoYSk7aWYoeWIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgRmU9ITE7eWEmJihGZT1vYyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIEdlKCl7QWUmJihBZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSksQmU9QWU9bnVsbCl9ZnVuY3Rpb24gSGUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkRlKEJlKSlpZihhPXplKEJlLGEsbmMoYSkpLEphKW1jKGEpO2Vsc2V7SmE9ITA7dHJ5e0ZhKENlLGEpfWZpbmFsbHl7SmE9ITEsTGEoKX19fWZ1bmN0aW9uIEllKGEsYixjKXtcImZvY3VzXCI9PT1hPyhHZSgpLEFlPWIsQmU9YyxBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSkpOlwiYmx1clwiPT09YSYmR2UoKX1mdW5jdGlvbiBKZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBEZShCZSl9ZnVuY3Rpb24gS2UoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBEZShiKX1mdW5jdGlvbiBMZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBEZShiKX1cbnZhciBNZT17ZXZlbnRUeXBlczp5ZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkZlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9QZChiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUVlO2Vsc2UgaWYoeGUoZSkpaWYoRmUpZz1MZTtlbHNle2c9SmU7dmFyIGg9SWV9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPUtlKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB6ZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LE5lPUcuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxcbk9lPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9lW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gUWUoKXtyZXR1cm4gUGV9XG52YXIgUmU9MCxTZT0wLFRlPSExLFVlPSExLFZlPU5lLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1SZTtSZT1hLnNjcmVlblg7cmV0dXJuIFRlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooVGU9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1TZTtTZT1hLnNjcmVlblk7cmV0dXJuIFVlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooVWU9ITAsMCl9fSksV2U9VmUuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLFhlPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxZZT17ZXZlbnRUeXBlczpYZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtmPWQud2luZG93PT09ZD9kOihmPWQub3duZXJEb2N1bWVudCk/Zi5kZWZhdWx0Vmlld3x8Zi5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3RjKGIpOm51bGwsbnVsbCE9PWIpe3ZhciBoPWRjKGIpO2lmKGIhPT1ofHw1IT09Yi50YWcmJjYhPT1iLnRhZyliPW51bGx9fWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1cbmEpe3ZhciBrPVZlO3ZhciBsPVhlLm1vdXNlTGVhdmU7dmFyIG09WGUubW91c2VFbnRlcjt2YXIgcD1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaz1XZSxsPVhlLnBvaW50ZXJMZWF2ZSxtPVhlLnBvaW50ZXJFbnRlcixwPVwicG9pbnRlclwiO2E9bnVsbD09Zz9mOlBkKGcpO2Y9bnVsbD09Yj9mOlBkKGIpO2w9ay5nZXRQb29sZWQobCxnLGMsZCk7bC50eXBlPXArXCJsZWF2ZVwiO2wudGFyZ2V0PWE7bC5yZWxhdGVkVGFyZ2V0PWY7Yz1rLmdldFBvb2xlZChtLGIsYyxkKTtjLnR5cGU9cCtcImVudGVyXCI7Yy50YXJnZXQ9ZjtjLnJlbGF0ZWRUYXJnZXQ9YTtkPWc7cD1iO2lmKGQmJnApYTp7az1kO209cDtnPTA7Zm9yKGE9azthO2E9UmQoYSkpZysrO2E9MDtmb3IoYj1tO2I7Yj1SZChiKSlhKys7Zm9yKDswPGctYTspaz1SZChrKSxnLS07Zm9yKDswPGEtZzspbT1SZChtKSxhLS07Zm9yKDtnLS07KXtpZihrPT09bXx8az09PW0uYWx0ZXJuYXRlKWJyZWFrIGE7XG5rPVJkKGspO209UmQobSl9az1udWxsfWVsc2Ugaz1udWxsO209aztmb3Ioaz1bXTtkJiZkIT09bTspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2sucHVzaChkKTtkPVJkKGQpfWZvcihkPVtdO3AmJnAhPT1tOyl7Zz1wLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ZC5wdXNoKHApO3A9UmQocCl9Zm9yKHA9MDtwPGsubGVuZ3RoO3ArKylWZChrW3BdLFwiYnViYmxlZFwiLGwpO2ZvcihwPWQubGVuZ3RoOzA8cC0tOylWZChkW3BdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm4gMD09PShlJjY0KT9bbF06W2wsY119fTtmdW5jdGlvbiBaZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyICRlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOlplLGFmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBiZihhLGIpe2lmKCRlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighYWYuY2FsbChiLGNbZF0pfHwhJGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciBjZj15YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGRmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxlZj1udWxsLGZmPW51bGwsZ2Y9bnVsbCxoZj0hMTtcbmZ1bmN0aW9uIGpmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoaGZ8fG51bGw9PWVmfHxlZiE9PXRkKGMpKXJldHVybiBudWxsO2M9ZWY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmeWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gZ2YmJmJmKGdmLGMpP251bGw6KGdmPWMsYT1HLmdldFBvb2xlZChkZi5zZWxlY3QsZmYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1lZixYZChhKSxhKX1cbnZhciBrZj17ZXZlbnRUeXBlczpkZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtlPWZ8fChkLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCk7aWYoIShmPSFlKSl7YTp7ZT1jYyhlKTtmPXdhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9QZChiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKHhlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKWVmPWUsZmY9YixnZj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6Z2Y9ZmY9ZWY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6aGY9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBoZj0hMSxqZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihjZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGpmKGMsZCl9cmV0dXJuIG51bGx9fSxsZj1HLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksbWY9Ry5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxuZj1OZS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIG9mKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHBmPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxxZj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0scmY9TmUuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXBmW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9mKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9xZlthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2YoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2YoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxzZj1WZS5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksdGY9TmUuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWV9KSx1Zj1HLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx2Zj1WZS5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHdmPXtldmVudFR5cGVzOldjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9WWMuZ2V0KGEpO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2YoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXJmO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1uZjticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVxuVmU7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1zZjticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXRmO2JyZWFrO2Nhc2UgWGI6Y2FzZSBZYjpjYXNlIFpiOmE9bGY7YnJlYWs7Y2FzZSAkYjphPXVmO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPU5lO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9dmY7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1tZjticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVxuV2U7YnJlYWs7ZGVmYXVsdDphPUd9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtYZChiKTtyZXR1cm4gYn19O2lmKHBhKXRocm93IEVycm9yKHUoMTAxKSk7cGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7cmEoKTt2YXIgeGY9TmM7bGE9UWQ7bWE9eGY7bmE9UGQ7eGEoe1NpbXBsZUV2ZW50UGx1Z2luOndmLEVudGVyTGVhdmVFdmVudFBsdWdpbjpZZSxDaGFuZ2VFdmVudFBsdWdpbjpNZSxTZWxlY3RFdmVudFBsdWdpbjprZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnZlfSk7dmFyIHlmPVtdLHpmPS0xO2Z1bmN0aW9uIEgoYSl7MD56Znx8KGEuY3VycmVudD15Zlt6Zl0seWZbemZdPW51bGwsemYtLSl9XG5mdW5jdGlvbiBJKGEsYil7emYrKzt5Zlt6Zl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBBZj17fSxKPXtjdXJyZW50OkFmfSxLPXtjdXJyZW50OiExfSxCZj1BZjtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIERmKCl7SChLKTtIKEopfWZ1bmN0aW9uIEVmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1BZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiKTtJKEssYyl9ZnVuY3Rpb24gRmYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxwYihiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gR2YoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEFmO0JmPUouY3VycmVudDtJKEosYSk7SShLLEsuY3VycmVudCk7cmV0dXJuITB9XG5mdW5jdGlvbiBIZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhhPUZmKGEsYixCZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoSyksSChKKSxJKEosYSkpOkgoSyk7SShLLGMpfVxudmFyIElmPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEpmPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxLZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLExmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LE1mPXIudW5zdGFibGVfbm93LE5mPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsT2Y9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxQZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFFmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksUmY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxTZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxUZj17fSxVZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFZmPXZvaWQgMCE9PUxmP0xmOmZ1bmN0aW9uKCl7fSxXZj1udWxsLFhmPW51bGwsWWY9ITEsWmY9TWYoKSwkZj0xRTQ+WmY/TWY6ZnVuY3Rpb24oKXtyZXR1cm4gTWYoKS1aZn07XG5mdW5jdGlvbiBhZygpe3N3aXRjaChOZigpKXtjYXNlIE9mOnJldHVybiA5OTtjYXNlIFBmOnJldHVybiA5ODtjYXNlIFFmOnJldHVybiA5NztjYXNlIFJmOnJldHVybiA5NjtjYXNlIFNmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBiZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gT2Y7Y2FzZSA5ODpyZXR1cm4gUGY7Y2FzZSA5NzpyZXR1cm4gUWY7Y2FzZSA5NjpyZXR1cm4gUmY7Y2FzZSA5NTpyZXR1cm4gU2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gY2coYSxiKXthPWJnKGEpO3JldHVybiBJZihhLGIpfWZ1bmN0aW9uIGRnKGEsYixjKXthPWJnKGEpO3JldHVybiBKZihhLGIsYyl9ZnVuY3Rpb24gZWcoYSl7bnVsbD09PVdmPyhXZj1bYV0sWGY9SmYoT2YsZmcpKTpXZi5wdXNoKGEpO3JldHVybiBUZn1mdW5jdGlvbiBnZygpe2lmKG51bGwhPT1YZil7dmFyIGE9WGY7WGY9bnVsbDtLZihhKX1mZygpfVxuZnVuY3Rpb24gZmcoKXtpZighWWYmJm51bGwhPT1XZil7WWY9ITA7dmFyIGE9MDt0cnl7dmFyIGI9V2Y7Y2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1dmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVdmJiYoV2Y9V2Yuc2xpY2UoYSsxKSksSmYoT2YsZ2cpLGM7fWZpbmFsbHl7WWY9ITF9fX1mdW5jdGlvbiBoZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBpZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgamc9e2N1cnJlbnQ6bnVsbH0sa2c9bnVsbCxsZz1udWxsLG1nPW51bGw7ZnVuY3Rpb24gbmcoKXttZz1sZz1rZz1udWxsfVxuZnVuY3Rpb24gb2coYSl7dmFyIGI9amcuY3VycmVudDtIKGpnKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHBnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHFnKGEsYil7a2c9YTttZz1sZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJihyZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBzZyhhLGIpe2lmKG1nIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YiltZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09bGcpe2lmKG51bGw9PT1rZyl0aHJvdyBFcnJvcih1KDMwOCkpO2xnPWI7a2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBsZz1sZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgdGc9ITE7ZnVuY3Rpb24gdWcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHZnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB3ZyhhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiB4ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIHlnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJnZnKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3RnPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLG09bnVsbCxwPW51bGwseD1udWxsO2lmKG51bGwhPT1oKXt2YXIgej1oO2Rve2c9ei5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBjYT17ZXhwaXJhdGlvblRpbWU6ei5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PXg/KHA9eD1cbmNhLG09ayk6eD14Lm5leHQ9Y2E7Zz5sJiYobD1nKX1lbHNle251bGwhPT14JiYoeD14Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9KTtBZyhnLHouc3VzcGVuc2VDb25maWcpO2E6e3ZhciBEPWEsdD16O2c9YjtjYT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOkQ9dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBEKXtrPUQuY2FsbChjYSxrLGcpO2JyZWFrIGF9az1EO2JyZWFrIGE7Y2FzZSAzOkQuZWZmZWN0VGFnPUQuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDpEPXQucGF5bG9hZDtnPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBEP0QuY2FsbChjYSxrLGcpOkQ7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPW4oe30sayxnKTticmVhayBhO2Nhc2UgMjp0Zz0hMH19bnVsbCE9PXouY2FsbGJhY2smJlxuKGEuZWZmZWN0VGFnfD0zMixnPWUuZWZmZWN0cyxudWxsPT09Zz9lLmVmZmVjdHM9W3pdOmcucHVzaCh6KSl9ej16Lm5leHQ7aWYobnVsbD09PXp8fHo9PT1oKWlmKGc9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09ZylicmVhaztlbHNlIHo9Zi5uZXh0PWcubmV4dCxnLm5leHQ9aCxlLmJhc2VRdWV1ZT1mPWcsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpfW51bGw9PT14P209azp4Lm5leHQ9cDtlLmJhc2VTdGF0ZT1tO2UuYmFzZVF1ZXVlPXg7QmcobCk7YS5leHBpcmF0aW9uVGltZT1sO2EubWVtb2l6ZWRTdGF0ZT1rfX1cbmZ1bmN0aW9uIENnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9ZTtlPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQpdGhyb3cgRXJyb3IodSgxOTEsZCkpO2QuY2FsbChlKX19fXZhciBEZz1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxFZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBGZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgSmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2RjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1HZygpLGQ9RGcuc3VzcGVuc2U7XG5jPUhnKGMsYSxkKTtkPXdnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7eGcoYSxkKTtJZyhhLGMpfX07ZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hYmYoYyxkKXx8IWJmKGUsZik6ITB9XG5mdW5jdGlvbiBMZyhhLGIsYyl7dmFyIGQ9ITEsZT1BZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1zZyhmKTooZT1MKGIpP0JmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0NmKGEsZSk6QWYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1KZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVnO3VnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9c2coZik6KGY9TChiKT9CZjpKLmN1cnJlbnQsZS5jb250ZXh0PUNmKGEsZikpO3pnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx6ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE9nPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBQZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFFnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiBSZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1TZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1UZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1QZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VWcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UGcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1WZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9V2coYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1UZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYz1VZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1QZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGE6cmV0dXJuIGI9VmcoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKE9nKGIpfHxcbm5iKGIpKXJldHVybiBiPVdnKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihPZyhjKXx8bmIoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihPZyhkKXx8bmIoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2EoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLG09Zyx5PWc9MCxBPW51bGw7bnVsbCE9PW0mJnk8aC5sZW5ndGg7eSsrKXttLmluZGV4Pnk/KEE9bSxtPW51bGwpOkE9bS5zaWJsaW5nO3ZhciBxPXgoZSxtLGhbeV0sayk7aWYobnVsbD09PXEpe251bGw9PT1tJiYobT1BKTticmVha31hJiZcbm0mJm51bGw9PT1xLmFsdGVybmF0ZSYmYihlLG0pO2c9ZihxLGcseSk7bnVsbD09PXQ/bD1xOnQuc2libGluZz1xO3Q9cTttPUF9aWYoeT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt5PGgubGVuZ3RoO3krKyltPXAoZSxoW3ldLGspLG51bGwhPT1tJiYoZz1mKG0sZyx5KSxudWxsPT09dD9sPW06dC5zaWJsaW5nPW0sdD1tKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7eTxoLmxlbmd0aDt5KyspQT16KG0sZSx5LGhbeV0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1BLmtleT95OkEua2V5KSxnPWYoQSxnLHkpLG51bGw9PT10P2w9QTp0LnNpYmxpbmc9QSx0PUEpO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gRChlLGcsaCxsKXt2YXIgaz1uYihoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2Ygayl0aHJvdyBFcnJvcih1KDE1MCkpO2g9ay5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1rPW51bGwsdD1nLHk9Zz0wLEE9bnVsbCxxPWgubmV4dCgpO251bGwhPT10JiYhcS5kb25lO3krKyxxPWgubmV4dCgpKXt0LmluZGV4Pnk/KEE9dCx0PW51bGwpOkE9dC5zaWJsaW5nO3ZhciBEPXgoZSx0LHEudmFsdWUsbCk7aWYobnVsbD09PUQpe251bGw9PT10JiYodD1BKTticmVha31hJiZ0JiZudWxsPT09RC5hbHRlcm5hdGUmJmIoZSx0KTtnPWYoRCxnLHkpO251bGw9PT1tP2s9RDptLnNpYmxpbmc9RDttPUQ7dD1BfWlmKHEuZG9uZSlyZXR1cm4gYyhlLHQpLGs7aWYobnVsbD09PXQpe2Zvcig7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXAoZSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTtyZXR1cm4ga31mb3IodD1kKGUsdCk7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXoodCxlLHkscS52YWx1ZSxsKSxudWxsIT09cSYmKGEmJm51bGwhPT1cbnEuYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09cS5rZXk/eTpxLmtleSksZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBrfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PWFiKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLFxuay5zaWJsaW5nKTtkPWUoayxmLnByb3BzKTtkLnJlZj1QZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWFiPyhkPVdnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1VZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1QZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9XG5kLnNpYmxpbmd9ZD1WZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1UZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihPZyhmKSlyZXR1cm4gY2EoYSxkLGYsaCk7aWYobmIoZikpcmV0dXJuIEQoYSxkLGYsaCk7bCYmUWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFhnPVJnKCEwKSxZZz1SZyghMSksWmc9e30sJGc9e2N1cnJlbnQ6Wmd9LGFoPXtjdXJyZW50OlpnfSxiaD17Y3VycmVudDpaZ307XG5mdW5jdGlvbiBjaChhKXtpZihhPT09WmcpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBkaChhLGIpe0koYmgsYik7SShhaCxhKTtJKCRnLFpnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOk9iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1PYihiLGEpfUgoJGcpO0koJGcsYil9ZnVuY3Rpb24gZWgoKXtIKCRnKTtIKGFoKTtIKGJoKX1mdW5jdGlvbiBmaChhKXtjaChiaC5jdXJyZW50KTt2YXIgYj1jaCgkZy5jdXJyZW50KTt2YXIgYz1PYihiLGEudHlwZSk7YiE9PWMmJihJKGFoLGEpLEkoJGcsYykpfWZ1bmN0aW9uIGdoKGEpe2FoLmN1cnJlbnQ9PT1hJiYoSCgkZyksSChhaCkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gaGgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09QmR8fGMuZGF0YT09PUNkKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIGloKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIGpoPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsa2g9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxtaD0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gbmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighJGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXtsaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO2poLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/cGg6cWg7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PWxoKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IodSgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtqaC5jdXJyZW50PXJoO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT1saCl9amguY3VycmVudD1zaDtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O2xoPTA7UD1PPU49bnVsbDttaD0hMTtpZihiKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB0aCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiB1aCgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gdmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiB3aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPGxoKXt2YXIgbT17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW0sZj1kKTpoPWgubmV4dD1tO2w+Ti5leHBpcmF0aW9uVGltZSYmXG4oTi5leHBpcmF0aW9uVGltZT1sLEJnKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLEFnKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7JGUoZCxiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHhoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTskZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24geWgoYSl7dmFyIGI9dGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6dmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gQmgoKXtyZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIENoKGEsYixjLGQpe3ZhciBlPXRoKCk7Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gRGgoYSxiLGMsZCl7dmFyIGU9dWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuaChkLGcuZGVwcykpe0FoKGIsYyxmLGQpO3JldHVybn19Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLGYsZCl9ZnVuY3Rpb24gRWgoYSxiKXtyZXR1cm4gQ2goNTE2LDQsYSxiKX1mdW5jdGlvbiBGaChhLGIpe3JldHVybiBEaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEdoKGEsYil7cmV0dXJuIERoKDQsMixhLGIpfVxuZnVuY3Rpb24gSGgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBJaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIERoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBKaCgpe31mdW5jdGlvbiBLaChhLGIpe3RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBNaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBOaChhLGIsYyl7dmFyIGQ9YWcoKTtjZyg5OD5kPzk4OmQsZnVuY3Rpb24oKXthKCEwKX0pO2NnKDk3PGQ/OTc6ZCxmdW5jdGlvbigpe3ZhciBkPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXthKCExKSxjKCl9ZmluYWxseXtraC5zdXNwZW5zZT1kfX0pfVxuZnVuY3Rpb24gemgoYSxiLGMpe3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXtleHBpcmF0aW9uVGltZTpkLHN1c3BlbnNlQ29uZmlnOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGY9Yi5wZW5kaW5nO251bGw9PT1mP2UubmV4dD1lOihlLm5leHQ9Zi5uZXh0LGYubmV4dD1lKTtiLnBlbmRpbmc9ZTtmPWEuYWx0ZXJuYXRlO2lmKGE9PT1OfHxudWxsIT09ZiYmZj09PU4pbWg9ITAsZS5leHBpcmF0aW9uVGltZT1saCxOLmV4cGlyYXRpb25UaW1lPWxoO2Vsc2V7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09Znx8MD09PWYuZXhwaXJhdGlvblRpbWUpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuZWFnZXJSZWR1Y2VyPWY7ZS5lYWdlclN0YXRlPWg7aWYoJGUoaCxnKSlyZXR1cm59Y2F0Y2goayl7fWZpbmFsbHl7fUlnKGEsXG5kKX19XG52YXIgc2g9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LHBoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpLaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpFaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gQ2goNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ2goNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz10aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLFxuYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPXRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnloLHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz15aChhKSxkPWNbMF0sZT1jWzFdO0VoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1cbmN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eWgoITEpLGM9YlswXTtiPWJbMV07cmV0dXJuW0toKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHFoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6d2gsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXdoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVxud2godmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHJoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6eGgsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHhoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXhoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXhoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LE9oPW51bGwsUGg9bnVsbCxRaD0hMTtmdW5jdGlvbiBSaChhLGIpe3ZhciBjPVNoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBUaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVWgoYSl7aWYoUWgpe3ZhciBiPVBoO2lmKGIpe3ZhciBjPWI7aWYoIVRoKGEsYikpe2I9SmQoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFUaChhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO1FoPSExO09oPWE7cmV0dXJufVJoKE9oLGMpfU9oPWE7UGg9SmQoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsUWg9ITEsT2g9YX19ZnVuY3Rpb24gVmgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO09oPWF9XG5mdW5jdGlvbiBXaChhKXtpZihhIT09T2gpcmV0dXJuITE7aWYoIVFoKXJldHVybiBWaChhKSxRaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUdkKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1QaDtiOylSaChhLGIpLGI9SmQoYi5uZXh0U2libGluZyk7VmgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1BZCl7aWYoMD09PWIpe1BoPUpkKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PXpkJiZjIT09Q2QmJmMhPT1CZHx8YisrfWE9YS5uZXh0U2libGluZ31QaD1udWxsfX1lbHNlIFBoPU9oP0pkKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoKXtQaD1PaD1udWxsO1FoPSExfXZhciBZaD1XYS5SZWFjdEN1cnJlbnRPd25lcixyZz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWcoYixudWxsLGMsZCk6WGcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3FnKGIsZSk7ZD1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFiaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxjaShhLGIsZyxkLGUsZik7YT1VZyhjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmJmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuICRoKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVNnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2koYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmYmYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocmc9ITEsZTxmKT8oYi5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLCRoKGEsYixmKSk6ZGkoYSxiLGMsZCxmKX1mdW5jdGlvbiBlaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGRpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9CZjpKLmN1cnJlbnQ7Zj1DZihiLGYpO3FnKGIsZSk7Yz1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7cWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLExnKGIsYyxkKSxOZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKTt0Zz0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT14O3pnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9dGd8fEtnKGIsYyxoLGQseCxrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLHZnKGEsYiksaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6aWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKSx0Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssemcoYixkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT10Z3x8S2coYixjLGgsZCxrLHgsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTpcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gZ2koYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gZ2koYSxiLGMsZCxlLGYpe2VpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZIZihiLGMsITEpLCRoKGEsYixmKTtkPWIuc3RhdGVOb2RlO1loLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WGcoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmSGYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0VmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkVmKGEsYi5jb250ZXh0LCExKTtkaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgaWk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBqaShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmVWgoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WWcoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9U2coZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1YZyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1cbmN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVhnKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24ga2koYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3BnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYma2koYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpa2koYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1oaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO2xpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWhoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1saShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6bGkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRoKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZCZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVNnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIG5pLG9pLHBpLHFpO1xubmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O29pPWZ1bmN0aW9uKCl7fTtcbnBpPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtjaCgkZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emIoZyxmKTtkPXpiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1HYihnLGYpO2Q9R2IoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1zZCl9b2QoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLGwpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiZyZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7aWYoYi51cGRhdGVRdWV1ZT1lKWIuZWZmZWN0VGFnfD00fX07XG5xaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZWZmZWN0VGFnfD00KX07ZnVuY3Rpb24gcmkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gc2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDM6cmV0dXJuIGVoKCksSChLKSxIKEopLGM9Yi5zdGF0ZU5vZGUsYy5wZW5kaW5nQ29udGV4dCYmKGMuY29udGV4dD1jLnBlbmRpbmdDb250ZXh0LGMucGVuZGluZ0NvbnRleHQ9bnVsbCksbnVsbCE9PWEmJm51bGwhPT1hLmNoaWxkfHwhV2goYil8fChiLmVmZmVjdFRhZ3w9NCksb2koYiksbnVsbDtjYXNlIDU6Z2goYik7Yz1jaChiaC5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXBpKGEsYixlLGQsYyksYS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xucmV0dXJuIG51bGx9YT1jaCgkZy5jdXJyZW50KTtpZihXaChiKSl7ZD1iLnN0YXRlTm9kZTtlPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtNZF09YjtkW05kXT1mO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPGFjLmxlbmd0aDthKyspRihhY1thXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYihkLGYpO0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihkLGYpLEYoXCJpbnZhbGlkXCIsZCkscmQoYyxcIm9uQ2hhbmdlXCIpfW9kKGUsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJihhPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTp2YS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmcmQoYyxnKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoZCk7RWIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihkKTtMYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmXG4oZC5vbmNsaWNrPXNkKX1jPWE7Yi51cGRhdGVRdWV1ZT1jO251bGwhPT1jJiYoYi5lZmZlY3RUYWd8PTQpfWVsc2V7Zz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDthPT09cWQmJihhPU5iKGUpKTthPT09cWQ/XCJzY3JpcHRcIj09PWU/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChlLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxlKTthW01kXT1iO2FbTmRdPWQ7bmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9cGQoZSxkKTtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuYSk7aD1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYy5sZW5ndGg7aCsrKUYoYWNbaF0sYSk7aD1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsYSk7RihcImxvYWRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixhKTtGKFwic3VibWl0XCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpBYihhLGQpO2g9emIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1HYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07aD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGEsXG5kKTtoPUliKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPWR9b2QoZSxoKTt2YXIgaz1oO2ZvcihmIGluIGspaWYoay5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGw9a1tmXTtcInN0eWxlXCI9PT1mP21kKGEsbCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8obD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1sJiZRYihhLGwpKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD8oXCJ0ZXh0YXJlYVwiIT09ZXx8XCJcIiE9PWwpJiZSYihhLGwpOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmUmIoYSxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJih2YS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1sJiZyZChjLGYpOm51bGwhPWwmJlhhKGEsZixsLGcpKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoYSk7RWIoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGEpO0xiKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIityYihkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2M9ZC52YWx1ZTtudWxsIT1jP0hiKGEsISFkLm11bHRpcGxlLGMsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZIYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoYS5vbmNsaWNrPXNkKX1GZChlLGQpJiYoYi5lZmZlY3RUYWd8PTQpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlxaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbmM9Y2goYmguY3VycmVudCk7Y2goJGcuY3VycmVudCk7V2goYik/KGM9Yi5zdGF0ZU5vZGUsZD1iLm1lbW9pemVkUHJvcHMsY1tNZF09YixjLm5vZGVWYWx1ZSE9PWQmJihiLmVmZmVjdFRhZ3w9NCkpOihjPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksY1tNZF09YixiLnN0YXRlTm9kZT1jKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9YyxiO2M9bnVsbCE9PWQ7ZD0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJldoKGIpOihlPWEubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1lLGN8fG51bGw9PT1lfHwoZT1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihmPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWY/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9Zik6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PVxuZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpKTtpZihjJiYhZCYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlTPT09dGkmJihTPXVpKTtlbHNle2lmKFM9PT10aXx8Uz09PXVpKVM9dmk7MCE9PXdpJiZudWxsIT09VCYmKHhpKFQsVSkseWkoVCx3aSkpfWlmKGN8fGQpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG9pKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYiksbnVsbDtjYXNlIDE3OnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDE5OkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZT0wIT09KGIuZWZmZWN0VGFnJjY0KTtmPWQucmVuZGVyaW5nO2lmKG51bGw9PT1mKWlmKGUpcmkoZCwhMSk7ZWxzZXtpZihTIT09dGl8fG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJlxuNjQpKWZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KXthPWhoKGYpO2lmKG51bGwhPT1hKXtiLmVmZmVjdFRhZ3w9NjQ7cmkoZCwhMSk7ZT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1lJiYoYi51cGRhdGVRdWV1ZT1lLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2ZvcihkPWIuY2hpbGQ7bnVsbCE9PWQ7KWU9ZCxmPWMsZS5lZmZlY3RUYWcmPTIsZS5uZXh0RWZmZWN0PW51bGwsZS5maXJzdEVmZmVjdD1udWxsLGUubGFzdEVmZmVjdD1udWxsLGE9ZS5hbHRlcm5hdGUsbnVsbD09PWE/KGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9ZixlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lLFxuZS5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLGUuY2hpbGQ9YS5jaGlsZCxlLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzLGUubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGUsZS51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGY9YS5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PWY/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Zi5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Zi5maXJzdENvbnRleHQscmVzcG9uZGVyczpmLnJlc3BvbmRlcnN9KSxkPWQuc2libGluZztJKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9Zj1mLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT1oaChmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZWZmZWN0VGFnfD00KSxyaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPVxuYi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMiokZigpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHJpKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oMD09PWQudGFpbEV4cGlyYXRpb24mJihkLnRhaWxFeHBpcmF0aW9uPSRmKCkrNTAwKSxjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT0kZigpLGMuc2libGluZz1udWxsLGI9TS5jdXJyZW50LEkoTSxlP2ImMXwyOmImMSksYyk6bnVsbH10aHJvdyBFcnJvcih1KDE1NixcbmIudGFnKSk7fWZ1bmN0aW9uIHppKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRGYoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBnaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoTSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKE0pLG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBBaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOnFiKGIpfX1cbnZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBDaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPXFiKGMpKTtudWxsIT09YyYmcGIoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmcGIoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gRGkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0VpKGEsYyl9fWZ1bmN0aW9uIEZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0VpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEdpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmlnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEhpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuZGVzdHJveTtjLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWQmJmQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1cbmZ1bmN0aW9uIEppKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpJaSgzLGMpO3JldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtpZihjLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1iKWEuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmlnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWI9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmQ2coYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1DZyhjLGIsYSl9cmV0dXJuO1xuY2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZWZmZWN0VGFnJjQmJkZkKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmVmMoYykpKSk7cmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gS2koYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMaSYmTGkoYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtjZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7RWkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOkZpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJkRpKGIsYyk7YnJlYWs7Y2FzZSA1OkZpKGIpO2JyZWFrO2Nhc2UgNDpNaShhLGIsYyl9fVxuZnVuY3Rpb24gTmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO251bGwhPT1iJiZOaShiKX1mdW5jdGlvbiBPaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFBpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE9pKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihSYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8T2koYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP1FpKGEsYyxiKTpSaShhLGMsYil9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9c2QpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUWkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylRaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBSaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFJpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUmkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gTWkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihLaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrIGE7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihLaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOkhpKDMsYik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW05kXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZCYihjLGQpO3BkKGEsZSk7Yj1wZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/bWQoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1FiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9SYihjLGgpOlhhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpDYihjLGQpO2JyZWFrO1xuY2FzZSBcInRleHRhcmVhXCI6S2IoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9IYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SGIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkhiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsVmMoYi5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/XG5kPSExOihkPSEwLGM9Yi5jaGlsZCxUaT0kZigpKTtpZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9bGQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9XG5mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfVVpKGIpO3JldHVybjtjYXNlIDE5OlVpKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31mdW5jdGlvbiBVaShhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBCaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVZpLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxudmFyIFdpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFhpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7WWl8fChZaT0hMCxaaT1kKTtDaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uICRpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe0NpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1haj9haj1uZXcgU2V0KFt0aGlzXSk6YWouYWRkKHRoaXMpLENpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGJqPU1hdGguY2VpbCxjaj1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGRqPVdhLlJlYWN0Q3VycmVudE93bmVyLFY9MCxlaj04LGZqPTE2LGdqPTMyLHRpPTAsaGo9MSxpaj0yLHVpPTMsdmk9NCxqaj01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXRpLGtqPW51bGwsbGo9MTA3Mzc0MTgyMyxtaj0xMDczNzQxODIzLG5qPW51bGwsd2k9MCxvaj0hMSxUaT0wLHBqPTUwMCxZPW51bGwsWWk9ITEsWmk9bnVsbCxhaj1udWxsLHFqPSExLHJqPW51bGwsc2o9OTAsdGo9bnVsbCx1aj0wLHZqPW51bGwsd2o9MDtmdW5jdGlvbiBHZygpe3JldHVybihXJihmanxnaikpIT09Vj8xMDczNzQxODIxLSgkZigpLzEwfDApOjAhPT13aj93ajp3aj0xMDczNzQxODIxLSgkZigpLzEwfDApfVxuZnVuY3Rpb24gSGcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1hZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVyZmaikhPT1WKXJldHVybiBVO2lmKG51bGwhPT1jKWE9aGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9aGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1oZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVQmJmE9PT1VJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZyhhLGIpe2lmKDUwPHVqKXRocm93IHVqPTAsdmo9bnVsbCxFcnJvcih1KDE4NSkpO2E9eGooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9YWcoKTsxMDczNzQxODIzPT09Yj8oVyZlaikhPT1WJiYoVyYoZmp8Z2opKT09PVY/eWooYSk6KFooYSksVz09PVYmJmdnKCkpOlooYSk7KFcmNCk9PT1WfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT10aj90aj1uZXcgTWFwKFtbYSxiXV0pOihjPXRqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmdGouc2V0KGEsYikpKX19XG5mdW5jdGlvbiB4aihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVD09PWUmJihCZyhiKSxTPT09dmkmJnhpKGUsVSkpLHlpKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gemooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIUFqKGEsYikpcmV0dXJuIGI7dmFyIGM9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO2E9Yz5hP2M6YTtyZXR1cm4gMj49YSYmYiE9PWE/MDphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWVnKHlqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj16aihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9R2coKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09VGYmJktmKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9lZyh5ai5iaW5kKG51bGwsYSkpOmRnKGQsQmouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLSRmKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBCaihhLGIpe3dqPTA7aWYoYilyZXR1cm4gYj1HZygpLENqKGEsYiksWihhKSxudWxsO3ZhciBjPXpqKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmM9PT1VfHxFaihhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWZqO3ZhciBlPUZqKCk7ZG8gdHJ5e0dqKCk7YnJlYWt9Y2F0Y2goaCl7SGooYSxoKX13aGlsZSgxKTtuZygpO1c9ZDtjai5jdXJyZW50PWU7aWYoUz09PWhqKXRocm93IGI9a2osRWooYSxjKSx4aShhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB0aTpjYXNlIGhqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBpajpDaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdWk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZigxMDczNzQxODIzPT09bGomJihlPVRpK3BqLSRmKCksMTA8ZSkpe2lmKG9qKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha319Zj16aihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxlKTticmVha31KaihhKTticmVhaztjYXNlIHZpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKG9qJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9ZT16aihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09bWo/ZD0xMCooMTA3Mzc0MTgyMS1taiktJGYoKToxMDczNzQxODIzPT09bGo/ZD0wOihkPTEwKigxMDczNzQxODIxLWxqKS01RTMsZT0kZigpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugamo6aWYoMTA3Mzc0MTgyMyE9PWxqJiZudWxsIT09bmope2Y9bGo7dmFyIGc9bmo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9JGYoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXt4aShhLGMpO2EudGltZW91dEhhbmRsZT1cbkhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha319SmooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gQmouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHlqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmI9PT1VfHxFaihhLGIpO2lmKG51bGwhPT1YKXt2YXIgYz1XO1d8PWZqO3ZhciBkPUZqKCk7ZG8gdHJ5e0tqKCk7YnJlYWt9Y2F0Y2goZSl7SGooYSxlKX13aGlsZSgxKTtuZygpO1c9Yztjai5jdXJyZW50PWQ7aWYoUz09PWhqKXRocm93IGM9a2osRWooYSxiKSx4aShhLGIpLFooYSksYztpZihudWxsIT09WCl0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VD1udWxsO0pqKGEpO1ooYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGooKXtpZihudWxsIT09dGope3ZhciBhPXRqO3RqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7Q2ooYyxhKTtaKGMpfSk7Z2coKX19XG5mdW5jdGlvbiBNaihhLGIpe3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fWZ1bmN0aW9uIE5qKGEsYil7dmFyIGM9VztXJj0tMjtXfD1lajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fVxuZnVuY3Rpb24gRWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsSWQoYykpO2lmKG51bGwhPT1YKWZvcihjPVgucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmRGYoKTticmVhaztjYXNlIDM6ZWgoKTtIKEspO0goSik7YnJlYWs7Y2FzZSA1OmdoKGQpO2JyZWFrO2Nhc2UgNDplaCgpO2JyZWFrO2Nhc2UgMTM6SChNKTticmVhaztjYXNlIDE5OkgoTSk7YnJlYWs7Y2FzZSAxMDpvZyhkKX1jPWMucmV0dXJufVQ9YTtYPVNnKGEuY3VycmVudCxudWxsKTtVPWI7Uz10aTtraj1udWxsO21qPWxqPTEwNzM3NDE4MjM7bmo9bnVsbDt3aT0wO29qPSExfVxuZnVuY3Rpb24gSGooYSxiKXtkb3t0cnl7bmcoKTtqaC5jdXJyZW50PXNoO2lmKG1oKWZvcih2YXIgYz1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWM7KXt2YXIgZD1jLnF1ZXVlO251bGwhPT1kJiYoZC5wZW5kaW5nPW51bGwpO2M9Yy5uZXh0fWxoPTA7UD1PPU49bnVsbDttaD0hMTtpZihudWxsPT09WHx8bnVsbD09PVgucmV0dXJuKXJldHVybiBTPWhqLGtqPWIsWD1udWxsO2E6e3ZhciBlPWEsZj1YLnJldHVybixnPVgsaD1iO2I9VTtnLmVmZmVjdFRhZ3w9MjA0ODtnLmZpcnN0RWZmZWN0PWcubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1oJiZcIm9iamVjdFwiPT09dHlwZW9mIGgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLnRoZW4pe3ZhciBrPWg7aWYoMD09PShnLm1vZGUmMikpe3ZhciBsPWcuYWx0ZXJuYXRlO2w/KGcudXBkYXRlUXVldWU9bC51cGRhdGVRdWV1ZSxnLm1lbW9pemVkU3RhdGU9bC5tZW1vaXplZFN0YXRlLGcuZXhwaXJhdGlvblRpbWU9bC5leHBpcmF0aW9uVGltZSk6KGcudXBkYXRlUXVldWU9XG5udWxsLGcubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgbT0wIT09KE0uY3VycmVudCYxKSxwPWY7ZG97dmFyIHg7aWYoeD0xMz09PXAudGFnKXt2YXIgej1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXopeD1udWxsIT09ei5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIGNhPXAubWVtb2l6ZWRQcm9wczt4PXZvaWQgMD09PWNhLmZhbGxiYWNrPyExOiEwIT09Y2EudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6bT8hMTohMH19aWYoeCl7dmFyIEQ9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09RCl7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtwLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBELmFkZChrKTtpZigwPT09KHAubW9kZSYyKSl7cC5lZmZlY3RUYWd8PTY0O2cuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09Zy50YWcpaWYobnVsbD09PWcuYWx0ZXJuYXRlKWcudGFnPTE3O2Vsc2V7dmFyIHk9d2coMTA3Mzc0MTgyMyxudWxsKTt5LnRhZz0yO3hnKGcseSl9Zy5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO1xuYnJlYWsgYX1oPXZvaWQgMDtnPWI7dmFyIEE9ZS5waW5nQ2FjaGU7bnVsbD09PUE/KEE9ZS5waW5nQ2FjaGU9bmV3IFdpLGg9bmV3IFNldCxBLnNldChrLGgpKTooaD1BLmdldChrKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LEEuc2V0KGssaCkpKTtpZighaC5oYXMoZykpe2guYWRkKGcpO3ZhciBxPU9qLmJpbmQobnVsbCxlLGssZyk7ay50aGVuKHEscSl9cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7aD1FcnJvcigocGIoZy50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK3FiKGcpKX1TIT09XG5qaiYmKFM9aWopO2g9QWkoaCxnKTtwPWY7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6az1oO3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgQj1YaShwLGssYik7eWcocCxCKTticmVhayBhO2Nhc2UgMTprPWg7dmFyIHc9cC50eXBlLHViPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yi5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyh1YikpKSl7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciB2Yj0kaShwLGssYik7eWcocCx2Yik7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WD1QaihYKX1jYXRjaChYYyl7Yj1YYztjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIEZqKCl7dmFyIGE9Y2ouY3VycmVudDtjai5jdXJyZW50PXNoO3JldHVybiBudWxsPT09YT9zaDphfWZ1bmN0aW9uIEFnKGEsYil7YTxsaiYmMjxhJiYobGo9YSk7bnVsbCE9PWImJmE8bWomJjI8YSYmKG1qPWEsbmo9Yil9ZnVuY3Rpb24gQmcoYSl7YT53aSYmKHdpPWEpfWZ1bmN0aW9uIEtqKCl7Zm9yKDtudWxsIT09WDspWD1RaihYKX1mdW5jdGlvbiBHaigpe2Zvcig7bnVsbCE9PVgmJiFVZigpOylYPVFqKFgpfWZ1bmN0aW9uIFFqKGEpe3ZhciBiPVJqKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1QaihhKSk7ZGouY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gUGooYSl7WD1hO2Rve3ZhciBiPVguYWx0ZXJuYXRlO2E9WC5yZXR1cm47aWYoMD09PShYLmVmZmVjdFRhZyYyMDQ4KSl7Yj1zaShiLFgsVSk7aWYoMT09PVV8fDEhPT1YLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Zvcih2YXIgYz0wLGQ9WC5jaGlsZDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWUsZj1kLmNoaWxkRXhwaXJhdGlvblRpbWU7ZT5jJiYoYz1lKTtmPmMmJihjPWYpO2Q9ZC5zaWJsaW5nfVguY2hpbGRFeHBpcmF0aW9uVGltZT1jfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVguZmlyc3RFZmZlY3QpLG51bGwhPT1YLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WC5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PVgubGFzdEVmZmVjdCksMTxYLmVmZmVjdFRhZyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YOmEuZmlyc3RFZmZlY3Q9WCxhLmxhc3RFZmZlY3Q9WCkpfWVsc2V7Yj16aShYKTtpZihudWxsIT09YilyZXR1cm4gYi5lZmZlY3RUYWcmPTIwNDcsYjtudWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5lZmZlY3RUYWd8PTIwNDgpfWI9WC5zaWJsaW5nO2lmKG51bGwhPT1iKXJldHVybiBiO1g9YX13aGlsZShudWxsIT09WCk7Uz09PXRpJiYoUz1qaik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gSWooYSl7dmFyIGI9YS5leHBpcmF0aW9uVGltZTthPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtyZXR1cm4gYj5hP2I6YX1mdW5jdGlvbiBKaihhKXt2YXIgYj1hZygpO2NnKDk5LFNqLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG8gRGooKTt3aGlsZShudWxsIT09cmopO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih1KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9SWooYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1cbmQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VCYmKFg9VD1udWxsLFU9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VztXfD1najtkai5jdXJyZW50PW51bGw7RGQ9ZmQ7dmFyIGc9eGQoKTtpZih5ZChnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyl2YXIgaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7aD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGs9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCk7aWYoayYmMCE9PWsucmFuZ2VDb3VudCl7aD1rLmFuY2hvck5vZGU7dmFyIGw9ay5hbmNob3JPZmZzZXQsXG5tPWsuZm9jdXNOb2RlO2s9ay5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxtLm5vZGVUeXBlfWNhdGNoKHdiKXtoPW51bGw7YnJlYWsgYX12YXIgcD0wLHg9LTEsej0tMSxjYT0wLEQ9MCx0PWcseT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIEE7Oyl7dCE9PWh8fDAhPT1sJiYzIT09dC5ub2RlVHlwZXx8KHg9cCtsKTt0IT09bXx8MCE9PWsmJjMhPT10Lm5vZGVUeXBlfHwoej1wK2spOzM9PT10Lm5vZGVUeXBlJiYocCs9dC5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KEE9dC5maXJzdENoaWxkKSlicmVhazt5PXQ7dD1BfWZvcig7Oyl7aWYodD09PWcpYnJlYWsgYjt5PT09aCYmKytjYT09PWwmJih4PXApO3k9PT1tJiYrK0Q9PT1rJiYoej1wKTtpZihudWxsIT09KEE9dC5uZXh0U2libGluZykpYnJlYWs7dD15O3k9dC5wYXJlbnROb2RlfXQ9QX1oPS0xPT09eHx8LTE9PT16P251bGw6e3N0YXJ0OngsZW5kOnp9fWVsc2UgaD1udWxsfWg9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1cbm51bGw7RWQ9e2FjdGl2ZUVsZW1lbnREZXRhY2hlZDpudWxsLGZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7WT1lO2RvIHRyeXtUaigpfWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPWU7ZG8gdHJ5e2ZvcihnPWEsaD1iO251bGwhPT1ZOyl7dmFyIHE9WS5lZmZlY3RUYWc7cSYxNiYmUmIoWS5zdGF0ZU5vZGUsXCJcIik7aWYocSYxMjgpe3ZhciBCPVkuYWx0ZXJuYXRlO2lmKG51bGwhPT1CKXt2YXIgdz1CLnJlZjtudWxsIT09dyYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3P3cobnVsbCk6dy5jdXJyZW50PW51bGwpfX1zd2l0Y2gocSYxMDM4KXtjYXNlIDI6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSAxMDI0OlkuZWZmZWN0VGFnJj0tMTAyNTticmVhaztjYXNlIDEwMjg6WS5lZmZlY3RUYWcmPVxuLTEwMjU7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA0OlNpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgODpsPVksTWkoZyxsLGgpLE5pKGwpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7dz1FZDtCPXhkKCk7cT13LmZvY3VzZWRFbGVtO2g9dy5zZWxlY3Rpb25SYW5nZTtpZihCIT09cSYmcSYmcS5vd25lckRvY3VtZW50JiZ3ZChxLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHEpKXtudWxsIT09aCYmeWQocSkmJihCPWguc3RhcnQsdz1oLmVuZCx2b2lkIDA9PT13JiYodz1CKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PUIscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odyxxLnZhbHVlLmxlbmd0aCkpOih3PShCPXEub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZCLmRlZmF1bHRWaWV3fHx3aW5kb3csdy5nZXRTZWxlY3Rpb24mJlxuKHc9dy5nZXRTZWxlY3Rpb24oKSxsPXEudGV4dENvbnRlbnQubGVuZ3RoLGc9TWF0aC5taW4oaC5zdGFydCxsKSxoPXZvaWQgMD09PWguZW5kP2c6TWF0aC5taW4oaC5lbmQsbCksIXcuZXh0ZW5kJiZnPmgmJihsPWgsaD1nLGc9bCksbD12ZChxLGcpLG09dmQocSxoKSxsJiZtJiYoMSE9PXcucmFuZ2VDb3VudHx8dy5hbmNob3JOb2RlIT09bC5ub2RlfHx3LmFuY2hvck9mZnNldCE9PWwub2Zmc2V0fHx3LmZvY3VzTm9kZSE9PW0ubm9kZXx8dy5mb2N1c09mZnNldCE9PW0ub2Zmc2V0KSYmKEI9Qi5jcmVhdGVSYW5nZSgpLEIuc2V0U3RhcnQobC5ub2RlLGwub2Zmc2V0KSx3LnJlbW92ZUFsbFJhbmdlcygpLGc+aD8ody5hZGRSYW5nZShCKSx3LmV4dGVuZChtLm5vZGUsbS5vZmZzZXQpKTooQi5zZXRFbmQobS5ub2RlLG0ub2Zmc2V0KSx3LmFkZFJhbmdlKEIpKSkpKSk7Qj1bXTtmb3Iodz1xO3c9dy5wYXJlbnROb2RlOykxPT09dy5ub2RlVHlwZSYmQi5wdXNoKHtlbGVtZW50OncsbGVmdDp3LnNjcm9sbExlZnQsXG50b3A6dy5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgcS5mb2N1cyYmcS5mb2N1cygpO2ZvcihxPTA7cTxCLmxlbmd0aDtxKyspdz1CW3FdLHcuZWxlbWVudC5zY3JvbGxMZWZ0PXcubGVmdCx3LmVsZW1lbnQuc2Nyb2xsVG9wPXcudG9wfWZkPSEhRGQ7RWQ9RGQ9bnVsbDthLmN1cnJlbnQ9YztZPWU7ZG8gdHJ5e2ZvcihxPWE7bnVsbCE9PVk7KXt2YXIgdWI9WS5lZmZlY3RUYWc7dWImMzYmJkppKHEsWS5hbHRlcm5hdGUsWSk7aWYodWImMTI4KXtCPXZvaWQgMDt2YXIgdmI9WS5yZWY7aWYobnVsbCE9PXZiKXt2YXIgWGM9WS5zdGF0ZU5vZGU7c3dpdGNoKFkudGFnKXtjYXNlIDU6Qj1YYzticmVhaztkZWZhdWx0OkI9WGN9XCJmdW5jdGlvblwiPT09dHlwZW9mIHZiP3ZiKEIpOnZiLmN1cnJlbnQ9Qn19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPVxubnVsbDtWZigpO1c9Zn1lbHNlIGEuY3VycmVudD1jO2lmKHFqKXFqPSExLHJqPWEsc2o9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmKGFqPW51bGwpOzEwNzM3NDE4MjM9PT1iP2E9PT12aj91aisrOih1aj0wLHZqPWEpOnVqPTA7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVqJiZVaihjLnN0YXRlTm9kZSxkKTtaKGEpO2lmKFlpKXRocm93IFlpPSExLGE9WmksWmk9bnVsbCxhO2lmKChXJmVqKSE9PVYpcmV0dXJuIG51bGw7Z2coKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBUaigpe2Zvcig7bnVsbCE9PVk7KXt2YXIgYT1ZLmVmZmVjdFRhZzswIT09KGEmMjU2KSYmR2koWS5hbHRlcm5hdGUsWSk7MD09PShhJjUxMil8fHFqfHwocWo9ITAsZGcoOTcsZnVuY3Rpb24oKXtEaigpO3JldHVybiBudWxsfSkpO1k9WS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIERqKCl7aWYoOTAhPT1zail7dmFyIGE9OTc8c2o/OTc6c2o7c2o9OTA7cmV0dXJuIGNnKGEsVmopfX1mdW5jdGlvbiBWaigpe2lmKG51bGw9PT1yailyZXR1cm4hMTt2YXIgYT1yajtyaj1udWxsO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMzMSkpO3ZhciBiPVc7V3w9Z2o7Zm9yKGE9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1hOyl7dHJ5e3ZhciBjPWE7aWYoMCE9PShjLmVmZmVjdFRhZyY1MTIpKXN3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOkhpKDUsYyksSWkoNSxjKX19Y2F0Y2goZCl7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMzApKTtFaShhLGQpfWM9YS5uZXh0RWZmZWN0O2EubmV4dEVmZmVjdD1udWxsO2E9Y31XPWI7Z2coKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFdqKGEsYixjKXtiPUFpKGMsYik7Yj1YaShhLGIsMTA3Mzc0MTgyMyk7eGcoYSxiKTthPXhqKGEsMTA3Mzc0MTgyMyk7bnVsbCE9PWEmJlooYSl9ZnVuY3Rpb24gRWkoYSxiKXtpZigzPT09YS50YWcpV2ooYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtXaihjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyhkKSkpe2E9QWkoYixhKTthPSRpKGMsYSwxMDczNzQxODIzKTt4ZyhjLGEpO2M9eGooYywxMDczNzQxODIzKTtudWxsIT09YyYmWihjKTticmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBPaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1Q9PT1hJiZVPT09Yz9TPT09dml8fFM9PT11aSYmMTA3Mzc0MTgyMz09PWxqJiYkZigpLVRpPHBqP0VqKGEsVSk6b2o9ITA6QWooYSxjKSYmKGI9YS5sYXN0UGluZ2VkVGltZSwwIT09YiYmYjxjfHwoYS5sYXN0UGluZ2VkVGltZT1jLFooYSkpKX1mdW5jdGlvbiBWaShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPUdnKCksYj1IZyhiLGEsbnVsbCkpO2E9eGooYSxiKTtudWxsIT09YSYmWihhKX12YXIgUmo7XG5Saj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSl7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7aWYoYS5tZW1vaXplZFByb3BzIT09ZXx8Sy5jdXJyZW50KXJnPSEwO2Vsc2V7aWYoZDxjKXtyZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpoaShiKTtYaCgpO2JyZWFrO2Nhc2UgNTpmaChiKTtpZihiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLG51bGw7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmR2YoYik7YnJlYWs7Y2FzZSA0OmRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtlPWIudHlwZS5fY29udGV4dDtJKGpnLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtcbmlmKDAhPT1kJiZkPj1jKXJldHVybiBqaShhLGIsYyk7SShNLE0uY3VycmVudCYxKTtiPSRoKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9SShNLE0uY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBtaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCk7aWYoIWQpcmV0dXJuIG51bGx9cmV0dXJuICRoKGEsYixjKX1yZz0hMX19ZWxzZSByZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1DZihiLEouY3VycmVudCk7cWcoYixjKTtlPW9oKG51bGwsXG5iLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoTChkKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dWcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkZnKGIsZCxnLGEpO2UudXBkYXRlcj1KZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO05nKGIsZCxhLGMpO2I9Z2kobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjphOntlPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1cbm51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztvYihlKTtpZigxIT09ZS5fc3RhdHVzKXRocm93IGUuX3Jlc3VsdDtlPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPVhqKGUpO2E9aWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9ZGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPWZpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmgobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haShudWxsLGIsZSxpZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZmkoYSxiLGQsZSxjKTtcbmNhc2UgMzpoaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3ZnKGEsYik7emcoYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlYaCgpLGI9JGgoYSxiLGMpO2Vsc2V7aWYoZT1iLnN0YXRlTm9kZS5oeWRyYXRlKVBoPUpkKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksT2g9YixlPVFoPSEwO2lmKGUpZm9yKGM9WWcoYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZWZmZWN0VGFnPWMuZWZmZWN0VGFnJi0zfDEwMjQsYz1jLnNpYmxpbmc7ZWxzZSBSKGEsYixkLGMpLFhoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZmgoYiksbnVsbD09PWEmJlVoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5udWxsLGc9ZS5jaGlsZHJlbixHZChkLGUpP2c9bnVsbDpudWxsIT09ZiYmR2QoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksZWkoYSxiKSxiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFIoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJlVoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gamkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WGcoYixudWxsLGQsYyk6UihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksWmgoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKGpnLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9JGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj0kaChhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09XG5rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPWsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD13ZyhjLG51bGwpLGwudGFnPTIseGcoaCxsKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3BnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9XG5nfVIoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4scWcoYixjKSxlPXNnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1pZyhlLGIucGVuZGluZ1Byb3BzKSxmPWlnKGUudHlwZSxmKSxhaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gY2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT0hMCxHZihiKSk6YT0hMSxxZyhiLGMpLExnKGIsZCxlKSxOZyhiLGQsZSxjKSxnaShudWxsLFxuYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fTt2YXIgVWo9bnVsbCxMaT1udWxsO2Z1bmN0aW9uIFlqKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1VqPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O0xpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWmooYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBTaChhLGIsYyxkKXtyZXR1cm4gbmV3IFpqKGEsYixjLGQpfVxuZnVuY3Rpb24gYmkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBYaihhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdiKXJldHVybiAxMTtpZihhPT09amIpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1TaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFVnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm4gV2coYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYjpnPTg7ZXw9NzticmVhaztjYXNlIGJiOmc9ODtlfD0xO2JyZWFrO2Nhc2UgY2I6cmV0dXJuIGE9U2goMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1jYixhLnR5cGU9Y2IsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYjpyZXR1cm4gYT1TaCgxMyxjLGIsZSksYS50eXBlPWhiLGEuZWxlbWVudFR5cGU9aGIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBpYjpyZXR1cm4gYT1TaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1pYixhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGI6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBlYjpnPTk7YnJlYWsgYTtjYXNlIGdiOmc9MTE7YnJlYWsgYTtjYXNlIGpiOmc9MTQ7YnJlYWsgYTtjYXNlIGtiOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBsYjpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1TaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFdnKGEsYixjLGQpe2E9U2goNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIFRnKGEsYixjKXthPVNoKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFZnKGEsYixjKXtiPVNoKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIEFqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiB4aShhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24geWkoYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBDaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIGJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUdnKCksZz1EZy5zdXNwZW5zZTtmPUhnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGRjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9RmYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9QWY7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj13ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO3hnKGUsYik7SWcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBjayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiBlayhhLGIpe2RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZkayhhLGIpfVxuZnVuY3Rpb24gZmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IGFrKGEsYixjKSxlPVNoKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO3VnKGUpO2FbT2RdPWQuY3VycmVudDtjJiYwIT09YiYmSmMoYSw5PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudCk7dGhpcy5faW50ZXJuYWxSb290PWR9ZmsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtiayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtmay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztiayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbT2RdPW51bGx9KX07XG5mdW5jdGlvbiBnayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gaGsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBmayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIGlrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7aC5jYWxsKGEpfX1iayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWhrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2suY2FsbChhKX19TmooZnVuY3Rpb24oKXtiayhiLGcsYSxlKX0pfXJldHVybiBjayhnKX1mdW5jdGlvbiBqayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxud2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9aGcoR2coKSwxNTAsMTAwKTtJZyhhLGIpO2VrKGEsYil9fTt4Yz1mdW5jdGlvbihhKXsxMz09PWEudGFnJiYoSWcoYSwzKSxlayhhLDMpKX07eWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9R2coKTtiPUhnKGIsYSxudWxsKTtJZyhhLGIpO2VrKGEsYil9fTtcbnphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Q2IoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPVFkKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt5YihkKTtDYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6S2IoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkhiKGEsISFjLm11bHRpcGxlLGIsITEpfX07RmE9TWo7XG5HYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVc7V3w9NDt0cnl7cmV0dXJuIGNnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1c9ZixXPT09ViYmZ2coKX19O0hhPWZ1bmN0aW9uKCl7KFcmKDF8Zmp8Z2opKT09PVYmJihMaigpLERqKCkpfTtJYT1mdW5jdGlvbihhLGIpe3ZhciBjPVc7V3w9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fTtmdW5jdGlvbiBrayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBqayhhLGIsbnVsbCxjKX12YXIgbGs9e0V2ZW50czpbTmMsUGQsUWQseGEsdGEsWGQsZnVuY3Rpb24oYSl7amMoYSxXZCl9LERhLEVhLGlkLG1jLERqLHtjdXJyZW50OiExfV19O1xuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFlqKG4oe30sYSx7b3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGMoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH0sZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp0YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjE0LjBcIixcbnJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9bGs7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9a2s7ZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IodSgxODgpKTt0aHJvdyBFcnJvcih1KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWhjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07XG5leHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGNnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1c9YyxnZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITAsYyl9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITEsYyl9O1xuZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFnayhhKSl0aHJvdyBFcnJvcih1KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oTmooZnVuY3Rpb24oKXtpayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbT2RdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1NajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiBrayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIWdrKGMpKXRocm93IEVycm9yKHUoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gaWsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjE0LjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHk9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LEE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTpcbjYwMTE2LEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEMoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgRD17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRT17fTtmdW5jdGlvbiBGKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoQyg4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Ri5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBHKCl7fUcucHJvdG90eXBlPUYucHJvdG90eXBlO2Z1bmN0aW9uIEgoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RTt0aGlzLnVwZGF0ZXI9Y3x8RH12YXIgST1ILnByb3RvdHlwZT1uZXcgRztJLmNvbnN0cnVjdG9yPUg7bChJLEYucHJvdG90eXBlKTtJLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixjKXt2YXIgZSxkPXt9LGc9bnVsbCxrPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGs9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGUpJiYhTC5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zm9yKHZhciBoPUFycmF5KGYpLG09MDttPGY7bSsrKWhbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1ofWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1kW2VdJiYoZFtlXT1mW2VdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmsscHJvcHM6ZCxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgUD0vXFwvKy9nLFE9W107ZnVuY3Rpb24gUihhLGIsYyxlKXtpZihRLmxlbmd0aCl7dmFyIGQ9US5wb3AoKTtkLnJlc3VsdD1hO2Qua2V5UHJlZml4PWI7ZC5mdW5jPWM7ZC5jb250ZXh0PWU7ZC5jb3VudD0wO3JldHVybiBkfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmMsY29udGV4dDplLGNvdW50OjB9fVxuZnVuY3Rpb24gUyhhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlEubGVuZ3RoJiZRLnB1c2goYSl9XG5mdW5jdGlvbiBUKGEsYixjLGUpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBjKGUsYSxcIlwiPT09Yj9cIi5cIitVKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBrPTA7azxhLmxlbmd0aDtrKyspe2Q9YVtrXTt2YXIgZj1iK1UoZCxrKTtnKz1UKGQsZixjLGUpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QiYmYVtCXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxrPVxuMDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVShkLGsrKyksZys9VChkLGYsYyxlKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1kKXRocm93IGM9XCJcIithLEVycm9yKEMoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWM/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YyxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVihhLGIsYyl7cmV0dXJuIG51bGw9PWE/MDpUKGEsXCJcIixiLGMpfWZ1bmN0aW9uIFUoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIFcoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gYWEoYSxiLGMpe3ZhciBlPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/WChhLGUsYyxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihPKGEpJiYoYT1OKGEsZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYykpLGUucHVzaChhKSl9ZnVuY3Rpb24gWChhLGIsYyxlLGQpe3ZhciBnPVwiXCI7bnVsbCE9YyYmKGc9KFwiXCIrYykucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKTtiPVIoYixnLGUsZCk7VihhLGFhLGIpO1MoYil9dmFyIFk9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gWigpe3ZhciBhPVkuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcihDKDMyMSkpO3JldHVybiBhfVxudmFyIGJhPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlksUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3N1c3BlbnNlOm51bGx9LFJlYWN0Q3VycmVudE93bmVyOkosSXNTb21lUmVuZGVyZXJBY3Rpbmc6e2N1cnJlbnQ6ITF9LGFzc2lnbjpsfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W107WChhLGUsbnVsbCxiLGMpO3JldHVybiBlfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO2I9UihudWxsLG51bGwsYixjKTtWKGEsVyxiKTtTKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVihhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1goYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihDKDE0MykpO3JldHVybiBhfX07XG5leHBvcnRzLkNvbXBvbmVudD1GO2V4cG9ydHMuRnJhZ21lbnQ9cjtleHBvcnRzLlByb2ZpbGVyPXU7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUg7ZXhwb3J0cy5TdHJpY3RNb2RlPXQ7ZXhwb3J0cy5TdXNwZW5zZT15O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9YmE7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoQygyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxnPWEucmVmLGs9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihnPWIucmVmLGs9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBmPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGggaW4gYilLLmNhbGwoYixoKSYmIUwuaGFzT3duUHJvcGVydHkoaCkmJihlW2hdPXZvaWQgMD09PWJbaF0mJnZvaWQgMCE9PWY/ZltoXTpiW2hdKX12YXIgaD1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWgpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxoKXtmPUFycmF5KGgpO2Zvcih2YXIgbT0wO208aDttKyspZlttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWZ9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6Zyxwcm9wczplLF9vd25lcjprfX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PU07ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOngscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOkEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp6LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBaKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gWigpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNi4xNC4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGssbDtcbmlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBwPW51bGwscT1udWxsLHQ9ZnVuY3Rpb24oKXtpZihudWxsIT09cCl0cnl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtwKCEwLGEpO3A9bnVsbH1jYXRjaChiKXt0aHJvdyBzZXRUaW1lb3V0KHQsMCksYjt9fSx1PURhdGUubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKS11fTtmPWZ1bmN0aW9uKGEpe251bGwhPT1wP3NldFRpbWVvdXQoZiwwLGEpOihwPWEsc2V0VGltZW91dCh0LDApKX07Zz1mdW5jdGlvbihhLGIpe3E9c2V0VGltZW91dChhLGIpfTtoPWZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHEpfTtrPWZ1bmN0aW9uKCl7cmV0dXJuITF9O2w9ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbigpe319ZWxzZXt2YXIgdz13aW5kb3cucGVyZm9ybWFuY2UseD13aW5kb3cuRGF0ZSxcbnk9d2luZG93LnNldFRpbWVvdXQsej13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIEE9d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIil9aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIHcmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB3Lm5vdylleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB3Lm5vdygpfTtlbHNle3ZhciBCPXgubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKS1CfX12YXIgQz0hMSxEPW51bGwsRT0tMSxGPTUsRz0wO2s9ZnVuY3Rpb24oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKT49R307bD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZXJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHVuc3VwcG9ydGVkXCIpOkY9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBIPW5ldyBNZXNzYWdlQ2hhbm5lbCxJPUgucG9ydDI7SC5wb3J0MS5vbm1lc3NhZ2U9XG5mdW5jdGlvbigpe2lmKG51bGwhPT1EKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0c9YStGO3RyeXtEKCEwLGEpP0kucG9zdE1lc3NhZ2UobnVsbCk6KEM9ITEsRD1udWxsKX1jYXRjaChiKXt0aHJvdyBJLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEM9ITF9O2Y9ZnVuY3Rpb24oYSl7RD1hO0N8fChDPSEwLEkucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7RT15KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt6KEUpO0U9LTF9fWZ1bmN0aW9uIEooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SyhlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gTChhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gTShhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5LKG4sYykpdm9pZCAwIT09ciYmMD5LKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5LKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBOPVtdLE89W10sUD0xLFE9bnVsbCxSPTMsUz0hMSxUPSExLFU9ITE7XG5mdW5jdGlvbiBWKGEpe2Zvcih2YXIgYj1MKE8pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spTShPKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKU0oTyksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxKKE4sYik7ZWxzZSBicmVhaztiPUwoTyl9fWZ1bmN0aW9uIFcoYSl7VT0hMTtWKGEpO2lmKCFUKWlmKG51bGwhPT1MKE4pKVQ9ITAsZihYKTtlbHNle3ZhciBiPUwoTyk7bnVsbCE9PWImJmcoVyxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBYKGEsYil7VD0hMTtVJiYoVT0hMSxoKCkpO1M9ITA7dmFyIGM9Ujt0cnl7VihiKTtmb3IoUT1MKE4pO251bGwhPT1RJiYoIShRLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhaygpKTspe3ZhciBkPVEuY2FsbGJhY2s7aWYobnVsbCE9PWQpe1EuY2FsbGJhY2s9bnVsbDtSPVEucHJpb3JpdHlMZXZlbDt2YXIgZT1kKFEuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9RLmNhbGxiYWNrPWU6UT09PUwoTikmJk0oTik7VihiKX1lbHNlIE0oTik7UT1MKE4pfWlmKG51bGwhPT1RKXZhciBtPSEwO2Vsc2V7dmFyIG49TChPKTtudWxsIT09biYmZyhXLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtRPW51bGwsUj1jLFM9ITF9fVxuZnVuY3Rpb24gWShhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fXZhciBaPWw7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe1R8fFN8fChUPSEwLGYoWCkpfTtcbmV4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUn07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBMKE4pfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKFIpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPVJ9dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtSPWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1aO2V4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9UjtSPWE7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtSPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXt2YXIgZT1jLmRlbGF5O2U9XCJudW1iZXJcIj09PXR5cGVvZiBlJiYwPGU/ZCtlOmQ7Yz1cIm51bWJlclwiPT09dHlwZW9mIGMudGltZW91dD9jLnRpbWVvdXQ6WShhKX1lbHNlIGM9WShhKSxlPWQ7Yz1lK2M7YT17aWQ6UCsrLGNhbGxiYWNrOmIscHJpb3JpdHlMZXZlbDphLHN0YXJ0VGltZTplLGV4cGlyYXRpb25UaW1lOmMsc29ydEluZGV4Oi0xfTtlPmQ/KGEuc29ydEluZGV4PWUsSihPLGEpLG51bGw9PT1MKE4pJiZhPT09TChPKSYmKFU/aCgpOlU9ITAsZyhXLGUtZCkpKTooYS5zb3J0SW5kZXg9YyxKKE4sYSksVHx8U3x8KFQ9ITAsZihYKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1YoYSk7dmFyIGI9TChOKTtyZXR1cm4gYiE9PVEmJm51bGwhPT1RJiZudWxsIT09YiYmbnVsbCE9PWIuY2FsbGJhY2smJmIuc3RhcnRUaW1lPD1hJiZiLmV4cGlyYXRpb25UaW1lPFEuZXhwaXJhdGlvblRpbWV8fGsoKX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UjtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1SO1I9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Uj1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBoYXNoKHN0cikge1xuICB2YXIgaGFzaCA9IDUzODEsXG4gICAgICBpICAgID0gc3RyLmxlbmd0aDtcblxuICB3aGlsZShpKSB7XG4gICAgaGFzaCA9IChoYXNoICogMzMpIF4gc3RyLmNoYXJDb2RlQXQoLS1pKTtcbiAgfVxuXG4gIC8qIEphdmFTY3JpcHQgZG9lcyBiaXR3aXNlIG9wZXJhdGlvbnMgKGxpa2UgWE9SLCBhYm92ZSkgb24gMzItYml0IHNpZ25lZFxuICAgKiBpbnRlZ2Vycy4gU2luY2Ugd2Ugd2FudCB0aGUgcmVzdWx0cyB0byBiZSBhbHdheXMgcG9zaXRpdmUsIGNvbnZlcnQgdGhlXG4gICAqIHNpZ25lZCBpbnQgdG8gYW4gdW5zaWduZWQgYnkgZG9pbmcgYW4gdW5zaWduZWQgYml0c2hpZnQuICovXG4gIHJldHVybiBoYXNoID4+PiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2g7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiaW1wb3J0IHN0cmluZ0hhc2ggZnJvbSAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0IGFzYXAgZnJvbSAnYXNhcCc7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbi8qIEBmbG93ICovXG4vKiA6OlxudHlwZSBPYmplY3RNYXAgPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbiovXG5cbnZhciBVUFBFUkNBU0VfUkUgPSAvKFtBLVpdKS9nO1xuXG52YXIgVVBQRVJDQVNFX1JFX1RPX0tFQkFCID0gZnVuY3Rpb24gVVBQRVJDQVNFX1JFX1RPX0tFQkFCKG1hdGNoXG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIi1cIi5jb25jYXQobWF0Y2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbnZhciBrZWJhYmlmeVN0eWxlTmFtZSA9IGZ1bmN0aW9uIGtlYmFiaWZ5U3R5bGVOYW1lKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciByZXN1bHQgPSBzdHJpbmcucmVwbGFjZShVUFBFUkNBU0VfUkUsIFVQUEVSQ0FTRV9SRV9UT19LRUJBQik7XG5cbiAgaWYgKHJlc3VsdFswXSA9PT0gJ20nICYmIHJlc3VsdFsxXSA9PT0gJ3MnICYmIHJlc3VsdFsyXSA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIFwiLVwiLmNvbmNhdChyZXN1bHQpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IHRydWUsXG4gIGJvcmRlckltYWdlU2xpY2U6IHRydWUsXG4gIGJvcmRlckltYWdlV2lkdGg6IHRydWUsXG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgYm94T3JkaW5hbEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmbGV4T3JkZXI6IHRydWUsXG4gIGdyaWRSb3c6IHRydWUsXG4gIGdyaWRDb2x1bW46IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBmbG9vZE9wYWNpdHk6IHRydWUsXG4gIHN0b3BPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNoYXJyYXk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU1pdGVybGltaXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuLyoqXG4gKiBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4IHZlbmRvci1zcGVjaWZpYyBwcmVmaXgsIGVnOiBXZWJraXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgc3R5bGUgbmFtZSwgZWc6IHRyYW5zaXRpb25EdXJhdGlvblxuICogQHJldHVybiB7c3RyaW5nfSBzdHlsZSBuYW1lIHByZWZpeGVkIHdpdGggYHByZWZpeGAsIHByb3Blcmx5IGNhbWVsQ2FzZWQsIGVnOlxuICogV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4S2V5KHByZWZpeCwga2V5KSB7XG4gIHJldHVybiBwcmVmaXggKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyaW5nKDEpO1xufVxuLyoqXG4gKiBTdXBwb3J0IHN0eWxlIG5hbWVzIHRoYXQgbWF5IGNvbWUgcGFzc2VkIGluIHByZWZpeGVkIGJ5IGFkZGluZyBwZXJtdXRhdGlvbnNcbiAqIG9mIHZlbmRvciBwcmVmaXhlcy5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cblxudmFyIHByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTsgLy8gVXNpbmcgT2JqZWN0LmtleXMgaGVyZSwgb3IgZWxzZSB0aGUgdmFuaWxsYSBmb3ItaW4gbG9vcCBtYWtlcyBJRTggZ28gaW50byBhblxuLy8gaW5maW5pdGUgbG9vcCwgYmVjYXVzZSBpdCBpdGVyYXRlcyBvdmVyIHRoZSBuZXdseSBhZGRlZCBwcm9wcyB0b28uXG4vLyBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcblxuT2JqZWN0LmtleXMoaXNVbml0bGVzc051bWJlcikuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICBwcmVmaXhlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBpc1VuaXRsZXNzTnVtYmVyW3ByZWZpeEtleShwcmVmaXgsIHByb3ApXSA9IGlzVW5pdGxlc3NOdW1iZXJbcHJvcF07XG4gIH0pO1xufSk7XG52YXIgc3RyaW5naWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICBpZiAodHlwZW9mIHByb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoaXNVbml0bGVzc051bWJlcltrZXldKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByb3A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcm9wICsgXCJweFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJycgKyBwcm9wO1xuICB9XG59O1xudmFyIHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlID0gZnVuY3Rpb24gc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCBwcm9wXG4vKiA6IGFueSAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBpbXBvcnRhbnRpZnkoc3RyaW5naWZ5VmFsdWUoa2V5LCBwcm9wKSlcbiAgKTtcbn07IC8vIFR1cm4gYSBzdHJpbmcgaW50byBhIGhhc2ggc3RyaW5nIG9mIGJhc2UtMzYgdmFsdWVzICh1c2luZyBsZXR0ZXJzIGFuZCBudW1iZXJzKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbnZhciBoYXNoU3RyaW5nID0gZnVuY3Rpb24gaGFzaFN0cmluZyhzdHJpbmdcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiA/c3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBzdHJpbmcgKi9cbiAgICBzdHJpbmdIYXNoKHN0cmluZykudG9TdHJpbmcoMzYpXG4gICk7XG59OyAvLyBIYXNoIGEgamF2YXNjcmlwdCBvYmplY3QgdXNpbmcgSlNPTi5zdHJpbmdpZnkuIFRoaXMgaXMgdmVyeSBmYXN0LCBhYm91dCAzXG4vLyBtaWNyb3NlY29uZHMgb24gbXkgY29tcHV0ZXIgZm9yIGEgc2FtcGxlIG9iamVjdDpcbi8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rlc3QtaGFzaGZudjMyYS1oYXNoLzVcbi8vXG4vLyBOb3RlIHRoYXQgdGhpcyB1c2VzIEpTT04uc3RyaW5naWZ5IHRvIHN0cmluZ2lmeSB0aGUgb2JqZWN0cyBzbyBpbiBvcmRlciBmb3Jcbi8vIHRoaXMgdG8gcHJvZHVjZSBjb25zaXN0ZW50IGhhc2hlcyBicm93c2VycyBuZWVkIHRvIGhhdmUgYSBjb25zaXN0ZW50XG4vLyBvcmRlcmluZyBvZiBvYmplY3RzLiBCZW4gQWxwZXJ0IHNheXMgdGhhdCBGYWNlYm9vayBkZXBlbmRzIG9uIHRoaXMsIHNvIHdlXG4vLyBjYW4gcHJvYmFibHkgZGVwZW5kIG9uIHRoaXMgdG9vLlxuXG52YXIgaGFzaE9iamVjdCA9IGZ1bmN0aW9uIGhhc2hPYmplY3Qob2JqZWN0XG4vKiA6IE9iamVjdE1hcCAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBoYXNoU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpXG4gICk7XG59OyAvLyBHaXZlbiBhIHNpbmdsZSBzdHlsZSB2YWx1ZSBzdHJpbmcgbGlrZSB0aGUgXCJiXCIgZnJvbSBcImE6IGI7XCIsIGFkZHMgIWltcG9ydGFudFxuLy8gdG8gZ2VuZXJhdGUgXCJiICFpbXBvcnRhbnRcIi5cblxudmFyIGltcG9ydGFudGlmeSA9IGZ1bmN0aW9uIGltcG9ydGFudGlmeShzdHJpbmdcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIC8vIEJyYWNrZXQgc3RyaW5nIGNoYXJhY3RlciBhY2Nlc3MgaXMgdmVyeSBmYXN0LCBhbmQgaW4gdGhlIGRlZmF1bHQgY2FzZSB3ZVxuICAgIC8vIG5vcm1hbGx5IGRvbid0IGV4cGVjdCB0aGVyZSB0byBiZSBcIiFpbXBvcnRhbnRcIiBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmdcbiAgICAvLyBzbyB3ZSBjYW4gdXNlIHRoaXMgc2ltcGxlIGNoZWNrIHRvIHRha2UgYW4gb3B0aW1pemVkIHBhdGguIElmIHRoZXJlXG4gICAgLy8gaGFwcGVucyB0byBiZSBhIFwiIVwiIGluIHRoaXMgcG9zaXRpb24sIHdlIGZvbGxvdyB1cCB3aXRoIGEgbW9yZSB0aG9yb3VnaFxuICAgIC8vIGNoZWNrLlxuICAgIHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMTBdID09PSAnIScgJiYgc3RyaW5nLnNsaWNlKC0xMSkgPT09ICcgIWltcG9ydGFudCcgPyBzdHJpbmcgOiBcIlwiLmNvbmNhdChzdHJpbmcsIFwiICFpbXBvcnRhbnRcIilcbiAgKTtcbn07XG5cbi8qIEBmbG93ICovXG52YXIgTUFQX0VYSVNUUyA9IHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnO1xuXG52YXIgT3JkZXJlZEVsZW1lbnRzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgLyogOjpcbiAgZWxlbWVudHM6IHtbc3RyaW5nXTogYW55fTtcbiAga2V5T3JkZXI6IHN0cmluZ1tdO1xuICAqL1xuICBmdW5jdGlvbiBPcmRlcmVkRWxlbWVudHMoKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIHRoaXMua2V5T3JkZXIgPSBbXTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBPcmRlcmVkRWxlbWVudHMucHJvdG90eXBlO1xuXG4gIF9wcm90by5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja1xuICAvKiA6IChzdHJpbmcsIGFueSkgPT4gdm9pZCAqL1xuICApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMua2V5T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vICh2YWx1ZSwga2V5KSB0byBtYXRjaCBNYXAncyBBUElcbiAgICAgIGNhbGxiYWNrKHRoaXMuZWxlbWVudHNbdGhpcy5rZXlPcmRlcltpXV0sIHRoaXMua2V5T3JkZXJbaV0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc2V0ID0gZnVuY3Rpb24gc2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICAsIHZhbHVlXG4gIC8qIDogYW55ICovXG4gICwgc2hvdWxkUmVvcmRlclxuICAvKiA6ID9ib29sZWFuICovXG4gICkge1xuICAgIGlmICghdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9IGVsc2UgaWYgKHNob3VsZFJlb3JkZXIpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5T3JkZXIuaW5kZXhPZihrZXkpO1xuICAgICAgdGhpcy5rZXlPcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5rZXlPcmRlci5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHZhbHVlIGluc3RhbmNlb2YgTWFwIHx8IHZhbHVlIGluc3RhbmNlb2YgT3JkZXJlZEVsZW1lbnRzKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIE1hcCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBuZXN0ZWQgPSB0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkgPyB0aGlzLmVsZW1lbnRzW2tleV0gOiBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIG5lc3RlZC5zZXQoa2V5LCB2YWx1ZSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG5lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xuICAgICAgLy8gV2UgaGF2ZSBmb3VuZCBhIG5lc3RlZCBvYmplY3QsIHNvIHdlIG5lZWQgdG8gcmVjdXJzZSBzbyB0aGF0IGFsbFxuICAgICAgLy8gb2YgdGhlIG5lc3RlZCBvYmplY3RzIGFuZCBNYXBzIGFyZSBtZXJnZWQgcHJvcGVybHkuXG4gICAgICB2YXIgX25lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBfbmVzdGVkLnNldChrZXlzW2ldLCB2YWx1ZVtrZXlzW2ldXSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IF9uZXN0ZWQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChrZXlcbiAgLyogOiBzdHJpbmcgKi9cbiAgKVxuICAvKiA6IGFueSAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHNba2V5XTtcbiAgfTtcblxuICBfcHJvdG8uaGFzID0gZnVuY3Rpb24gaGFzKGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYm9vbGVhbiAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgfTtcblxuICBfcHJvdG8uYWRkU3R5bGVUeXBlID0gZnVuY3Rpb24gYWRkU3R5bGVUeXBlKHN0eWxlVHlwZVxuICAvKiA6IGFueSAqL1xuICApXG4gIC8qIDogdm9pZCAqL1xuICB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHN0eWxlVHlwZSBpbnN0YW5jZW9mIE1hcCB8fCBzdHlsZVR5cGUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIHN0eWxlVHlwZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIF90aGlzLnNldChrZXksIHZhbHVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlVHlwZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnNldChrZXlzW2ldLCBzdHlsZVR5cGVba2V5c1tpXV0sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gT3JkZXJlZEVsZW1lbnRzO1xufSgpO1xuXG5mdW5jdGlvbiB1bndyYXBFeHBvcnRzICh4KSB7XG5cdHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgJ2RlZmF1bHQnKSA/IHguZGVmYXVsdCA6IHg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZuLCBtb2R1bGUpIHtcblx0cmV0dXJuIG1vZHVsZSA9IHsgZXhwb3J0czoge30gfSwgZm4obW9kdWxlLCBtb2R1bGUuZXhwb3J0cyksIG1vZHVsZS5leHBvcnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlIChuKSB7XG5cdHJldHVybiBuICYmIG4uZGVmYXVsdCB8fCBuO1xufVxuXG52YXIgY2FwaXRhbGl6ZVN0cmluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG52YXIgcHJlZml4UHJvcGVydHlfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFByb3BlcnR5O1xuXG5cblxudmFyIF9jYXBpdGFsaXplU3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoY2FwaXRhbGl6ZVN0cmluZ18xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgdmFyIGNhcGl0YWxpemVkUHJvcGVydHkgPSAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZVByb3BlcnR5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChzdHlsZVByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBuZXdTdHlsZVtyZXF1aXJlZFByZWZpeGVzW2pdICsgY2FwaXRhbGl6ZWRQcm9wZXJ0eV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1N0eWxlW3N0eWxlUHJvcGVydHldID0gc3R5bGVbc3R5bGVQcm9wZXJ0eV07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdHlsZTtcbiAgfVxuICByZXR1cm4gc3R5bGU7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhwcmVmaXhQcm9wZXJ0eV8xKTtcblxudmFyIHByZWZpeFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhWYWx1ZTtcbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbHVnaW5zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gcGx1Z2luc1tpXShwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSk7XG5cbiAgICAvLyB3ZSBjYW4gc3RvcCBwcm9jZXNzaW5nIGlmIGEgdmFsdWUgaXMgcmV0dXJuZWRcbiAgICAvLyBhcyBhbGwgcGx1Z2luIGNyaXRlcmlhIGFyZSB1bmlxdWVcbiAgICBpZiAocHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzZWRWYWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFZhbHVlXzEpO1xuXG52YXIgYWRkTmV3VmFsdWVzT25seV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYWRkTmV3VmFsdWVzT25seTtcbmZ1bmN0aW9uIGFkZElmTmV3KGxpc3QsIHZhbHVlKSB7XG4gIGlmIChsaXN0LmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGxpc3QucHVzaCh2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VmFsdWVzT25seShsaXN0LCB2YWx1ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlc1tpXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlcyk7XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cbnZhciBpc09iamVjdF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNPYmplY3RfMSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cblxuXG52YXIgX3ByZWZpeFByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4UHJvcGVydHlfMSk7XG5cblxuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4VmFsdWVfMSk7XG5cblxuXG52YXIgX2FkZE5ld1ZhbHVlc09ubHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChhZGROZXdWYWx1ZXNPbmx5XzEpO1xuXG5cblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzT2JqZWN0XzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVQcmVmaXhlcihfcmVmKSB7XG4gIHZhciBwcmVmaXhNYXAgPSBfcmVmLnByZWZpeE1hcCxcbiAgICAgIHBsdWdpbnMgPSBfcmVmLnBsdWdpbnM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHN0eWxlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgIC8vIGhhbmRsZSBuZXN0ZWQgb2JqZWN0c1xuICAgICAgaWYgKCgwLCBfaXNPYmplY3QyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBwcmVmaXgodmFsdWUpO1xuICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBjb21iaW5lZFZhbHVlID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlW2ldLCBzdHlsZSwgcHJlZml4TWFwKTtcbiAgICAgICAgICAoMCwgX2FkZE5ld1ZhbHVlc09ubHkyLmRlZmF1bHQpKGNvbWJpbmVkVmFsdWUsIHByb2Nlc3NlZFZhbHVlIHx8IHZhbHVlW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChjb21iaW5lZFZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJlZml4TWFwKTtcblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoX3Byb2Nlc3NlZFZhbHVlKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUgPSAoMCwgX3ByZWZpeFByb3BlcnR5Mi5kZWZhdWx0KShwcmVmaXhNYXAsIHByb3BlcnR5LCBzdHlsZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9O1xufVxufSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlciA9IHVud3JhcEV4cG9ydHMoY3JlYXRlUHJlZml4ZXJfMSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFja2dyb3VuZENsaXA7XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBiYWNrZ3JvdW5kQ2xpcChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgPT09ICd0ZXh0Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtdGV4dCcsICd0ZXh0J107XG4gIH1cbn1cbn0pO1xuXG52YXIgYmFja2dyb3VuZENsaXAgPSB1bndyYXBFeHBvcnRzKGJhY2tncm91bmRDbGlwXzEpO1xuXG52YXIgaXNQcmVmaXhlZFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG52YXIgY2FsY18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FsYztcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY2FsYygnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBwcmVmaXggKyAnY2FsYygnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjYWxjID0gdW53cmFwRXhwb3J0cyhjYWxjXzEpO1xuXG52YXIgY3Jvc3NGYWRlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcm9zc0ZhZGU7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9Y3Jvc3MtZmFkZVxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGNyb3NzRmFkZShwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY3Jvc3MtZmFkZSgnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY3Jvc3MtZmFkZVxcKC9nLCBwcmVmaXggKyAnY3Jvc3MtZmFkZSgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjcm9zc0ZhZGUgPSB1bndyYXBFeHBvcnRzKGNyb3NzRmFkZV8xKTtcblxudmFyIGN1cnNvcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3Vyc29yO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IHtcbiAgJ3pvb20taW4nOiB0cnVlLFxuICAnem9vbS1vdXQnOiB0cnVlLFxuICBncmFiOiB0cnVlLFxuICBncmFiYmluZzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gY3Vyc29yKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdjdXJzb3InICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjdXJzb3IgPSB1bndyYXBFeHBvcnRzKGN1cnNvcl8xKTtcblxudmFyIGZpbHRlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsdGVyO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZmlsdGVyLWZ1bmN0aW9uXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gZmlsdGVyKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdmaWx0ZXIoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ZpbHRlclxcKC9nLCBwcmVmaXggKyAnZmlsdGVyKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGZpbHRlciA9IHVud3JhcEV4cG9ydHMoZmlsdGVyXzEpO1xuXG52YXIgZmxleF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleDtcbnZhciB2YWx1ZXMgPSB7XG4gIGZsZXg6IFsnLXdlYmtpdC1ib3gnLCAnLW1vei1ib3gnLCAnLW1zLWZsZXhib3gnLCAnLXdlYmtpdC1mbGV4JywgJ2ZsZXgnXSxcbiAgJ2lubGluZS1mbGV4JzogWyctd2Via2l0LWlubGluZS1ib3gnLCAnLW1vei1pbmxpbmUtYm94JywgJy1tcy1pbmxpbmUtZmxleGJveCcsICctd2Via2l0LWlubGluZS1mbGV4JywgJ2lubGluZS1mbGV4J11cbn07XG5cbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVzW3ZhbHVlXTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4ID0gdW53cmFwRXhwb3J0cyhmbGV4XzEpO1xuXG52YXIgZmxleGJveElFXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94SUU7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnXG59O1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xuICAvLyBGdWxsIGV4cGFuZGVkIHN5bnRheCBpcyBmbGV4LWdyb3cgfCBmbGV4LXNocmluayB8IGZsZXgtYmFzaXMuXG59O3ZhciBmbGV4U2hvcnRoYW5kTWFwcGluZ3MgPSB7XG4gIGF1dG86ICcxIDEgYXV0bycsXG4gIGluaGVyaXQ6ICdpbmhlcml0JyxcbiAgaW5pdGlhbDogJzAgMSBhdXRvJyxcbiAgbm9uZTogJzAgMCBhdXRvJyxcbiAgdW5zZXQ6ICd1bnNldCdcbn07XG52YXIgaXNVbml0bGVzc051bWJlciA9IC9eXFxkKyhcXC5cXGQrKT8kLztcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleCcpIHtcbiAgICAvLyBGb3IgY2VydGFpbiB2YWx1ZXMgd2UgY2FuIGRvIHN0cmFpZ2h0IG1hcHBpbmdzIGJhc2VkIG9uIHRoZSBzcGVjXG4gICAgLy8gZm9yIHRoZSBleHBhbnNpb25zLlxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmxleFNob3J0aGFuZE1hcHBpbmdzLCB2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhTaG9ydGhhbmRNYXBwaW5nc1t2YWx1ZV07XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIEhlcmUgd2UgaGF2ZSBubyBkaXJlY3QgbWFwcGluZywgc28gd2UgZmF2b3IgbG9va2luZyBmb3IgYVxuICAgIC8vIHVuaXRsZXNzIHBvc2l0aXZlIG51bWJlciBhcyB0aGF0IHdpbGwgYmUgdGhlIG1vc3QgY29tbW9uIHVzZS1jYXNlLlxuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyLnRlc3QodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZSArICcgMSAwJSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVGhlIG5leHQgdGhpbmcgd2UgY2FuIGxvb2sgZm9yIGlzIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2YWx1ZXMuXG4gICAgdmFyIGZsZXhWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvXFxzLyk7XG4gICAgLy8gSWYgd2Ugb25seSBoYXZlIGEgc2luZ2xlIHZhbHVlIHRoYXQgd2Fzbid0IGEgcG9zaXRpdmUgdW5pdGxlc3NcbiAgICAvLyBvciBhIHByZS1tYXBwZWQgdmFsdWUsIHRoZW4gd2UgY2FuIGFzc3VtZSBpdCBpcyBhIHVuaXQgdmFsdWUuXG4gICAgc3dpdGNoIChmbGV4VmFsdWVzLmxlbmd0aCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSAnMSAxICcgKyB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSAyOlxuICAgICAgICAvLyBJZiB3ZSBoYXZlIDIgdW5pdHMsIHRoZW4gd2UgZXhwZWN0IHRoYXQgdGhlIGZpcnN0IHdpbGxcbiAgICAgICAgLy8gYWx3YXlzIGJlIGEgdW5pdGxlc3MgbnVtYmVyIGFuZCByZXByZXNlbnRzIGZsZXgtZ3Jvdy5cbiAgICAgICAgLy8gVGhlIHNlY29uZCB1bml0IHdpbGwgcmVwcmVzZW50IGZsZXgtc2hyaW5rIGZvciBhIHVuaXRsZXNzXG4gICAgICAgIC8vIHZhbHVlLCBvciBmbGV4LWJhc2lzIG90aGVyd2lzZS5cbiAgICAgICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdChmbGV4VmFsdWVzWzFdKSkge1xuICAgICAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhWYWx1ZXNbMF0gKyAnICcgKyBmbGV4VmFsdWVzWzFdICsgJyAwJSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgMSAnICsgZmxleFZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG52YXIgZmxleGJveElFID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94SUVfMSk7XG5cbnZhciBmbGV4Ym94T2xkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94T2xkO1xudmFyIGFsdGVybmF0aXZlVmFsdWVzID0ge1xuICAnc3BhY2UtYXJvdW5kJzogJ2p1c3RpZnknLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ3dyYXAtcmV2ZXJzZSc6ICdtdWx0aXBsZScsXG4gIHdyYXA6ICdtdWx0aXBsZSdcbn07XG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJyxcbiAgZmxleEdyb3c6ICdXZWJraXRCb3hGbGV4J1xufTtcblxuZnVuY3Rpb24gZmxleGJveE9sZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUuaW5kZXhPZignY29sdW1uJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ3ZlcnRpY2FsJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ2hvcml6b250YWwnO1xuICAgIH1cbiAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdyZXZlcnNlJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgfVxuICB9XG4gIGlmIChhbHRlcm5hdGl2ZVByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94T2xkID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94T2xkXzEpO1xuXG52YXIgZ3JhZGllbnRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyYWRpZW50O1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvZ2k7XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHZhbHVlcywgZnVuY3Rpb24gKGdyYWQpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArIGdyYWQ7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBncmFkaWVudCA9IHVud3JhcEV4cG9ydHMoZ3JhZGllbnRfMSk7XG5cbnZhciBncmlkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZ3JpZDtcbmZ1bmN0aW9uIGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsdWUpO1xufVxuXG52YXIgYWxpZ25tZW50VmFsdWVzID0gWydjZW50ZXInLCAnZW5kJywgJ3N0YXJ0JywgJ3N0cmV0Y2gnXTtcblxudmFyIGRpc3BsYXlWYWx1ZXMgPSB7XG4gICdpbmxpbmUtZ3JpZCc6IFsnLW1zLWlubGluZS1ncmlkJywgJ2lubGluZS1ncmlkJ10sXG4gIGdyaWQ6IFsnLW1zLWdyaWQnLCAnZ3JpZCddXG59O1xuXG52YXIgcHJvcGVydHlDb252ZXJ0ZXJzID0ge1xuICBhbGlnblNlbGY6IGZ1bmN0aW9uIGFsaWduU2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd0FsaWduID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRDb2x1bW46IGZ1bmN0aW9uIGdyaWRDb2x1bW4odmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcCA9IHZhbHVlLnNwbGl0KCcvJykubWFwKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gK3Bvc2l0aW9uO1xuICAgICAgfSksXG4gICAgICAgICAgX3ZhbHVlJHNwbGl0JG1hcDIgPSBfc2xpY2VkVG9BcnJheShfdmFsdWUkc3BsaXQkbWFwLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXAyWzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXAyWzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtblN0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtbkVuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbkVuZDogZnVuY3Rpb24gZ3JpZENvbHVtbkVuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkQ29sdW1uID0gc3R5bGUubXNHcmlkQ29sdW1uO1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZENvbHVtbikpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtblNwYW4gPSB2YWx1ZSAtIG1zR3JpZENvbHVtbjtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtblN0YXJ0OiBmdW5jdGlvbiBncmlkQ29sdW1uU3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93OiBmdW5jdGlvbiBncmlkUm93KHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChpc1NpbXBsZVBvc2l0aW9uVmFsdWUodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0dyaWRSb3cgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZSRzcGxpdCRtYXAzID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwNCA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAzLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXA0WzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXA0WzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd1N0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd0VuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd0VuZDogZnVuY3Rpb24gZ3JpZFJvd0VuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkUm93ID0gc3R5bGUubXNHcmlkUm93O1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZFJvdykpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd1NwYW4gPSB2YWx1ZSAtIG1zR3JpZFJvdztcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd1N0YXJ0OiBmdW5jdGlvbiBncmlkUm93U3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZENvbHVtbnMgPSB2YWx1ZTtcbiAgfSxcblxuICBncmlkVGVtcGxhdGVSb3dzOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVSb3dzKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZFJvd3MgPSB2YWx1ZTtcbiAgfSxcblxuICBqdXN0aWZ5U2VsZjogZnVuY3Rpb24ganVzdGlmeVNlbGYodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGFsaWdubWVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA+IC0xKSB7XG4gICAgICBzdHlsZS5tc0dyaWRDb2x1bW5BbGlnbiA9IHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZ3JpZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlIGluIGRpc3BsYXlWYWx1ZXMpIHtcbiAgICByZXR1cm4gZGlzcGxheVZhbHVlc1t2YWx1ZV07XG4gIH1cblxuICBpZiAocHJvcGVydHkgaW4gcHJvcGVydHlDb252ZXJ0ZXJzKSB7XG4gICAgdmFyIHByb3BlcnR5Q29udmVydGVyID0gcHJvcGVydHlDb252ZXJ0ZXJzW3Byb3BlcnR5XTtcbiAgICBwcm9wZXJ0eUNvbnZlcnRlcih2YWx1ZSwgc3R5bGUpO1xuICB9XG59XG59KTtcblxudmFyIGdyaWQgPSB1bndyYXBFeHBvcnRzKGdyaWRfMSk7XG5cbnZhciBpbWFnZVNldF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1hZ2VTZXQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1pbWFnZS1zZXRcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBpbWFnZVNldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignaW1hZ2Utc2V0KCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9pbWFnZS1zZXRcXCgvZywgcHJlZml4ICsgJ2ltYWdlLXNldCgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBpbWFnZVNldCA9IHVud3JhcEV4cG9ydHMoaW1hZ2VTZXRfMSk7XG5cbnZhciBsb2dpY2FsXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBsb2dpY2FsO1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIG1hcmdpbkJsb2NrU3RhcnQ6IFsnV2Via2l0TWFyZ2luQmVmb3JlJ10sXG4gIG1hcmdpbkJsb2NrRW5kOiBbJ1dlYmtpdE1hcmdpbkFmdGVyJ10sXG4gIG1hcmdpbklubGluZVN0YXJ0OiBbJ1dlYmtpdE1hcmdpblN0YXJ0JywgJ01vek1hcmdpblN0YXJ0J10sXG4gIG1hcmdpbklubGluZUVuZDogWydXZWJraXRNYXJnaW5FbmQnLCAnTW96TWFyZ2luRW5kJ10sXG4gIHBhZGRpbmdCbG9ja1N0YXJ0OiBbJ1dlYmtpdFBhZGRpbmdCZWZvcmUnXSxcbiAgcGFkZGluZ0Jsb2NrRW5kOiBbJ1dlYmtpdFBhZGRpbmdBZnRlciddLFxuICBwYWRkaW5nSW5saW5lU3RhcnQ6IFsnV2Via2l0UGFkZGluZ1N0YXJ0JywgJ01velBhZGRpbmdTdGFydCddLFxuICBwYWRkaW5nSW5saW5lRW5kOiBbJ1dlYmtpdFBhZGRpbmdFbmQnLCAnTW96UGFkZGluZ0VuZCddLFxuICBib3JkZXJCbG9ja1N0YXJ0OiBbJ1dlYmtpdEJvcmRlckJlZm9yZSddLFxuICBib3JkZXJCbG9ja1N0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVN0eWxlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRXaWR0aDogWydXZWJraXRCb3JkZXJCZWZvcmVXaWR0aCddLFxuICBib3JkZXJCbG9ja0VuZDogWydXZWJraXRCb3JkZXJBZnRlciddLFxuICBib3JkZXJCbG9ja0VuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckFmdGVyQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tFbmRTdHlsZTogWydXZWJraXRCb3JkZXJBZnRlclN0eWxlJ10sXG4gIGJvcmRlckJsb2NrRW5kV2lkdGg6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJXaWR0aCddLFxuICBib3JkZXJJbmxpbmVTdGFydDogWydXZWJraXRCb3JkZXJTdGFydCcsICdNb3pCb3JkZXJTdGFydCddLFxuICBib3JkZXJJbmxpbmVTdGFydENvbG9yOiBbJ1dlYmtpdEJvcmRlclN0YXJ0Q29sb3InLCAnTW96Qm9yZGVyU3RhcnRDb2xvciddLFxuICBib3JkZXJJbmxpbmVTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlclN0YXJ0U3R5bGUnLCAnTW96Qm9yZGVyU3RhcnRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlclN0YXJ0V2lkdGgnLCAnTW96Qm9yZGVyU3RhcnRXaWR0aCddLFxuICBib3JkZXJJbmxpbmVFbmQ6IFsnV2Via2l0Qm9yZGVyRW5kJywgJ01vekJvcmRlckVuZCddLFxuICBib3JkZXJJbmxpbmVFbmRDb2xvcjogWydXZWJraXRCb3JkZXJFbmRDb2xvcicsICdNb3pCb3JkZXJFbmRDb2xvciddLFxuICBib3JkZXJJbmxpbmVFbmRTdHlsZTogWydXZWJraXRCb3JkZXJFbmRTdHlsZScsICdNb3pCb3JkZXJFbmRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVFbmRXaWR0aDogWydXZWJraXRCb3JkZXJFbmRXaWR0aCcsICdNb3pCb3JkZXJFbmRXaWR0aCddXG59O1xuXG5mdW5jdGlvbiBsb2dpY2FsKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICB2YXIgYWx0ZXJuYXRpdmVQcm9wTGlzdCA9IGFsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhbHRlcm5hdGl2ZVByb3BMaXN0Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BMaXN0W2ldXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBsb2dpY2FsID0gdW53cmFwRXhwb3J0cyhsb2dpY2FsXzEpO1xuXG52YXIgcG9zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBvc2l0aW9uO1xuZnVuY3Rpb24gcG9zaXRpb24ocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ3Bvc2l0aW9uJyAmJiB2YWx1ZSA9PT0gJ3N0aWNreScpIHtcbiAgICByZXR1cm4gWyctd2Via2l0LXN0aWNreScsICdzdGlja3knXTtcbiAgfVxufVxufSk7XG5cbnZhciBwb3NpdGlvbiA9IHVud3JhcEV4cG9ydHMocG9zaXRpb25fMSk7XG5cbnZhciBzaXppbmdfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBzaXppbmcgPSB1bndyYXBFeHBvcnRzKHNpemluZ18xKTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gIHJldHVybiAoY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyAnLScgKyBoTmFtZSA6IGhOYW1lKVxufVxuXG52YXIgaHlwaGVuYXRlU3R5bGVOYW1lJDEgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGRlZmF1bHQ6IGh5cGhlbmF0ZVN0eWxlTmFtZVxufSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lID0gZ2V0Q2pzRXhwb3J0RnJvbU5hbWVzcGFjZShoeXBoZW5hdGVTdHlsZU5hbWUkMSk7XG5cbnZhciBoeXBoZW5hdGVQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaHlwaGVuYXRlUHJvcGVydHk7XG5cblxuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cbnZhciB0cmFuc2l0aW9uXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFuc2l0aW9uO1xuXG5cblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGh5cGhlbmF0ZVByb3BlcnR5XzEpO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgdHJhbnNpdGlvblByb3BlcnR5OiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uOiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIE1velRyYW5zaXRpb246IHRydWUsXG4gIE1velRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZVxufTtcblxuXG52YXIgcHJlZml4TWFwcGluZyA9IHtcbiAgV2Via2l0OiAnLXdlYmtpdC0nLFxuICBNb3o6ICctbW96LScsXG4gIG1zOiAnLW1zLSdcbn07XG5cbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICBpZiAoKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICB2YXIgbXVsdGlwbGVWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvLCg/IVteKCldKig/OlxcKFteKCldKlxcKSk/XFwpKS9nKTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbXVsdGlwbGVWYWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgc2luZ2xlVmFsdWUgPSBtdWx0aXBsZVZhbHVlc1tpXTtcbiAgICB2YXIgdmFsdWVzID0gW3NpbmdsZVZhbHVlXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICAgICAgdmFyIGRhc2hDYXNlUHJvcGVydHkgPSAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChzaW5nbGVWYWx1ZS5pbmRleE9mKGRhc2hDYXNlUHJvcGVydHkpID4gLTEgJiYgZGFzaENhc2VQcm9wZXJ0eSAhPT0gJ29yZGVyJykge1xuICAgICAgICB2YXIgcHJlZml4ZXMgPSBwcm9wZXJ0eVByZWZpeE1hcFtwcm9wZXJ0eV07XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBwTGVuID0gcHJlZml4ZXMubGVuZ3RoOyBqIDwgcExlbjsgKytqKSB7XG4gICAgICAgICAgLy8gam9pbiBhbGwgcHJlZml4ZXMgYW5kIGNyZWF0ZSBhIG5ldyB2YWx1ZVxuICAgICAgICAgIHZhbHVlcy51bnNoaWZ0KHNpbmdsZVZhbHVlLnJlcGxhY2UoZGFzaENhc2VQcm9wZXJ0eSwgcHJlZml4TWFwcGluZ1twcmVmaXhlc1tqXV0gKyBkYXNoQ2FzZVByb3BlcnR5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtdWx0aXBsZVZhbHVlc1tpXSA9IHZhbHVlcy5qb2luKCcsJyk7XG4gIH1cblxuICByZXR1cm4gbXVsdGlwbGVWYWx1ZXMuam9pbignLCcpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIC8vIGFsc28gY2hlY2sgZm9yIGFscmVhZHkgcHJlZml4ZWQgdHJhbnNpdGlvbnNcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgcHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICB2YXIgb3V0cHV0VmFsdWUgPSBwcmVmaXhWYWx1ZSh2YWx1ZSwgcHJvcGVydHlQcmVmaXhNYXApO1xuICAgIC8vIGlmIHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHByZWZpeGVkXG4gICAgdmFyIHdlYmtpdE91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8tbW96LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ1dlYmtpdCcpID4gLTEpIHtcbiAgICAgIHJldHVybiB3ZWJraXRPdXRwdXQ7XG4gICAgfVxuXG4gICAgdmFyIG1vek91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8td2Via2l0LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ01veicpID4gLTEpIHtcbiAgICAgIHJldHVybiBtb3pPdXRwdXQ7XG4gICAgfVxuXG4gICAgc3R5bGVbJ1dlYmtpdCcgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSB3ZWJraXRPdXRwdXQ7XG4gICAgc3R5bGVbJ01veicgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBtb3pPdXRwdXQ7XG4gICAgcmV0dXJuIG91dHB1dFZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIHRyYW5zaXRpb24gPSB1bndyYXBFeHBvcnRzKHRyYW5zaXRpb25fMSk7XG5cbnZhciB3ID0gW1wiV2Via2l0XCJdO1xudmFyIG0gPSBbXCJNb3pcIl07XG52YXIgbXMgPSBbXCJtc1wiXTtcbnZhciB3bSA9IFtcIldlYmtpdFwiLCBcIk1velwiXTtcbnZhciB3bXMgPSBbXCJXZWJraXRcIiwgXCJtc1wiXTtcbnZhciB3bW1zID0gW1wiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIl07XG52YXIgc3RhdGljRGF0YSA9IHtcbiAgcGx1Z2luczogW2JhY2tncm91bmRDbGlwLCBjYWxjLCBjcm9zc0ZhZGUsIGN1cnNvciwgZmlsdGVyLCBmbGV4LCBmbGV4Ym94SUUsIGZsZXhib3hPbGQsIGdyYWRpZW50LCBncmlkLCBpbWFnZVNldCwgbG9naWNhbCwgcG9zaXRpb24sIHNpemluZywgdHJhbnNpdGlvbl0sXG4gIHByZWZpeE1hcDoge1xuICAgIFwidHJhbnNmb3JtXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblwiOiB3bXMsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpbllcIjogd21zLFxuICAgIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZVwiOiB3LFxuICAgIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogdyxcbiAgICBcInRyYW5zZm9ybVN0eWxlXCI6IHcsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IHcsXG4gICAgXCJhbmltYXRpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IHcsXG4gICAgXCJhbmltYXRpb25EdXJhdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdyxcbiAgICBcImFuaW1hdGlvbk5hbWVcIjogdyxcbiAgICBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogdyxcbiAgICBcImFwcGVhcmFuY2VcIjogd20sXG4gICAgXCJ1c2VyU2VsZWN0XCI6IHdtbXMsXG4gICAgXCJmb250S2VybmluZ1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogdyxcbiAgICBcInRleHRFbXBoYXNpc1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogdyxcbiAgICBcInRleHRFbXBoYXNpc0NvbG9yXCI6IHcsXG4gICAgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogdyxcbiAgICBcImNsaXBQYXRoXCI6IHcsXG4gICAgXCJtYXNrSW1hZ2VcIjogdyxcbiAgICBcIm1hc2tNb2RlXCI6IHcsXG4gICAgXCJtYXNrUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrUG9zaXRpb25cIjogdyxcbiAgICBcIm1hc2tDbGlwXCI6IHcsXG4gICAgXCJtYXNrT3JpZ2luXCI6IHcsXG4gICAgXCJtYXNrU2l6ZVwiOiB3LFxuICAgIFwibWFza0NvbXBvc2l0ZVwiOiB3LFxuICAgIFwibWFza1wiOiB3LFxuICAgIFwibWFza0JvcmRlclNvdXJjZVwiOiB3LFxuICAgIFwibWFza0JvcmRlck1vZGVcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJTbGljZVwiOiB3LFxuICAgIFwibWFza0JvcmRlcldpZHRoXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyXCI6IHcsXG4gICAgXCJtYXNrVHlwZVwiOiB3LFxuICAgIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uU2tpcFwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uTGluZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogd20sXG4gICAgXCJmaWx0ZXJcIjogdyxcbiAgICBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogd20sXG4gICAgXCJicmVha0FmdGVyXCI6IHdtbXMsXG4gICAgXCJicmVha0JlZm9yZVwiOiB3bW1zLFxuICAgIFwiYnJlYWtJbnNpZGVcIjogd21tcyxcbiAgICBcImNvbHVtbkNvdW50XCI6IHdtLFxuICAgIFwiY29sdW1uRmlsbFwiOiB3bSxcbiAgICBcImNvbHVtbkdhcFwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlQ29sb3JcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlU3R5bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlV2lkdGhcIjogd20sXG4gICAgXCJjb2x1bW5zXCI6IHdtLFxuICAgIFwiY29sdW1uU3BhblwiOiB3bSxcbiAgICBcImNvbHVtbldpZHRoXCI6IHdtLFxuICAgIFwid3JpdGluZ01vZGVcIjogd21zLFxuICAgIFwiZmxleFwiOiB3bXMsXG4gICAgXCJmbGV4QmFzaXNcIjogdyxcbiAgICBcImZsZXhEaXJlY3Rpb25cIjogd21zLFxuICAgIFwiZmxleEdyb3dcIjogdyxcbiAgICBcImZsZXhGbG93XCI6IHdtcyxcbiAgICBcImZsZXhTaHJpbmtcIjogdyxcbiAgICBcImZsZXhXcmFwXCI6IHdtcyxcbiAgICBcImFsaWduQ29udGVudFwiOiB3LFxuICAgIFwiYWxpZ25JdGVtc1wiOiB3LFxuICAgIFwiYWxpZ25TZWxmXCI6IHcsXG4gICAgXCJqdXN0aWZ5Q29udGVudFwiOiB3LFxuICAgIFwib3JkZXJcIjogdyxcbiAgICBcInRyYW5zaXRpb25EZWxheVwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogdyxcbiAgICBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYmFja2Ryb3BGaWx0ZXJcIjogdyxcbiAgICBcInNjcm9sbFNuYXBUeXBlXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNYXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNZXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiB3bXMsXG4gICAgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiB3bXMsXG4gICAgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlTWFyZ2luXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiB3LFxuICAgIFwiaHlwaGVuc1wiOiB3bW1zLFxuICAgIFwiZmxvd0ludG9cIjogd21zLFxuICAgIFwiZmxvd0Zyb21cIjogd21zLFxuICAgIFwicmVnaW9uRnJhZ21lbnRcIjogd21zLFxuICAgIFwidGV4dE9yaWVudGF0aW9uXCI6IHcsXG4gICAgXCJib3hTaXppbmdcIjogbSxcbiAgICBcInRleHRBbGlnbkxhc3RcIjogbSxcbiAgICBcInRhYlNpemVcIjogbSxcbiAgICBcIndyYXBGbG93XCI6IG1zLFxuICAgIFwid3JhcFRocm91Z2hcIjogbXMsXG4gICAgXCJ3cmFwTWFyZ2luXCI6IG1zLFxuICAgIFwidG91Y2hBY3Rpb25cIjogbXMsXG4gICAgXCJ0ZXh0U2l6ZUFkanVzdFwiOiB3bXMsXG4gICAgXCJib3JkZXJJbWFnZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlUmVwZWF0XCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNsaWNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiB3XG4gIH1cbn07XG5cbnZhciBwcmVmaXhBbGwgPSBjcmVhdGVQcmVmaXhlcihzdGF0aWNEYXRhKTtcbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vaW5kZXguanMnO1xudHlwZSBTdHJpbmdIYW5kbGVycyA9IHsgW2lkOnN0cmluZ106IEZ1bmN0aW9uIH07XG50eXBlIFNlbGVjdG9yQ2FsbGJhY2sgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4gc3RyaW5nW107XG5leHBvcnQgdHlwZSBTZWxlY3RvckhhbmRsZXIgPSAoXG4gICAgc2VsZWN0b3I6IHN0cmluZyxcbiAgICBiYXNlU2VsZWN0b3I6IHN0cmluZyxcbiAgICBjYWxsYmFjazogU2VsZWN0b3JDYWxsYmFja1xuKSA9PiBzdHJpbmdbXSB8IHN0cmluZyB8IG51bGw7XG4qL1xuXG4vKipcbiAqIGBzZWxlY3RvckhhbmRsZXJzYCBhcmUgZnVuY3Rpb25zIHdoaWNoIGhhbmRsZSBzcGVjaWFsIHNlbGVjdG9ycyB3aGljaCBhY3RcbiAqIGRpZmZlcmVudGx5IHRoYW4gbm9ybWFsIHN0eWxlIGRlZmluaXRpb25zLiBUaGVzZSBmdW5jdGlvbnMgbG9vayBhdCB0aGVcbiAqIGN1cnJlbnQgc2VsZWN0b3IgYW5kIGNhbiBnZW5lcmF0ZSBDU1MgZm9yIHRoZSBzdHlsZXMgaW4gdGhlaXIgc3VidHJlZSBieVxuICogY2FsbGluZyB0aGUgY2FsbGJhY2sgd2l0aCBhIG5ldyBzZWxlY3Rvci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiBnZW5lcmF0aW5nIHN0eWxlcyB3aXRoIGEgYmFzZSBzZWxlY3RvciBvZiAnLmZvbycgYW5kIHRoZVxuICogZm9sbG93aW5nIHN0eWxlcyBvYmplY3Q6XG4gKlxuICogICB7XG4gKiAgICAgJzpudGgtY2hpbGQoMm4pJzoge1xuICogICAgICAgJzpob3Zlcic6IHtcbiAqICAgICAgICAgY29sb3I6ICdyZWQnXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogd2hlbiB3ZSByZWFjaCB0aGUgJzpob3Zlcicgc3R5bGUsIHdlIHdvdWxkIGNhbGwgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIGxpa2VcbiAqXG4gKiAgIGhhbmRsZXIoJzpob3ZlcicsICcuZm9vOm50aC1jaGlsZCgybiknLCBjYWxsYmFjaylcbiAqXG4gKiBTaW5jZSBvdXIgYHBzZXVkb1NlbGVjdG9yc2AgaGFuZGxlcyAnOmhvdmVyJyBzdHlsZXMsIHRoYXQgaGFuZGxlciB3b3VsZCBjYWxsXG4gKiB0aGUgY2FsbGJhY2sgbGlrZVxuICpcbiAqICAgY2FsbGJhY2soJy5mb286bnRoLWNoaWxkKDJuKTpob3ZlcicpXG4gKlxuICogdG8gZ2VuZXJhdGUgaXRzIHN1YnRyZWUgYHsgY29sb3I6ICdyZWQnIH1gIHN0eWxlcyB3aXRoIGFcbiAqICcuZm9vOm50aC1jaGlsZCgybik6aG92ZXInIHNlbGVjdG9yLiBUaGUgY2FsbGJhY2sgd291bGQgcmV0dXJuIGFuIGFycmF5IG9mIENTU1xuICogcnVsZXMgbGlrZVxuICpcbiAqICAgWycuZm9vOm50aC1jaGlsZCgybik6aG92ZXJ7Y29sb3I6cmVkICFpbXBvcnRhbnQ7fSddXG4gKlxuICogYW5kIHRoZSBoYW5kbGVyIHdvdWxkIHRoZW4gcmV0dXJuIHRoYXQgcmVzdWx0aW5nIENTUy5cbiAqXG4gKiBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgaGFuZGxlcnMgdXNlZCBpbiBhIGNhbGwgdG9cbiAqIGBnZW5lcmF0ZUNTU2AuXG4gKlxuICogQG5hbWUgU2VsZWN0b3JIYW5kbGVyXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogVGhlIGN1cnJlbnRseSBpbnNwZWN0ZWQgc2VsZWN0b3IuICc6aG92ZXInIGluIHRoZVxuICogICAgIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVNlbGVjdG9yOiBUaGUgc2VsZWN0b3Igb2YgdGhlIHBhcmVudCBzdHlsZXMuXG4gKiAgICAgJy5mb286bnRoLWNoaWxkKDJuKScgaW4gdGhlIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXM6IEEgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIGNhbGxlZCB0b1xuICogICAgIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN1YnRyZWUgb2Ygc3R5bGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNlbGVjdG9yLlxuICogICAgIEFjY2VwdHMgYSBuZXcgYmFzZVNlbGVjdG9yIHRvIHVzZSBmb3IgZ2VuZXJhdGluZyB0aG9zZSBzdHlsZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nW10gfCBzdHJpbmcgfCBudWxsfSBUaGUgZ2VuZXJhdGVkIENTUyBmb3IgdGhpcyBzZWxlY3Rvciwgb3JcbiAqICAgICBudWxsIGlmIHdlIGRvbid0IGhhbmRsZSB0aGlzIHNlbGVjdG9yLlxuICovXG5cbnZhciBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuPSBbLy8gSGFuZGxlIHBzZXVkby1zZWxlY3RvcnMsIGxpa2UgOmhvdmVyIGFuZCA6bnRoLWNoaWxkKDNuKVxuZnVuY3Rpb24gcHNldWRvU2VsZWN0b3JzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKGJhc2VTZWxlY3RvciArIHNlbGVjdG9yKTtcbn0sIC8vIEhhbmRsZSBtZWRpYSBxdWVyaWVzIChvciBmb250LWZhY2VzKVxuZnVuY3Rpb24gbWVkaWFRdWVyaWVzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiQFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlcyBub3JtYWxseSwgYW5kIHRoZW4gd3JhcCB0aGVtIGluIHRoZSBtZWRpYSBxdWVyeS5cblxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yKTtcbiAgcmV0dXJuIFtcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChnZW5lcmF0ZWQuam9pbignJyksIFwifVwiKV07XG59XTtcbi8qKlxuICogR2VuZXJhdGUgQ1NTIGZvciBhIHNlbGVjdG9yIGFuZCBzb21lIHN0eWxlcy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1lZGlhIHF1ZXJpZXMgYW5kIHBzZXVkbyBzZWxlY3RvcnMgdGhhdCBjYW4gYmUgdXNlZFxuICogaW4gYXBocm9kaXRlIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IEEgYmFzZSBDU1Mgc2VsZWN0b3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgZ2VuZXJhdGVkXG4gKiAgICAgd2l0aC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVR5cGVzOiBBIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgcmV0dXJuIHR5cGUgb2ZcbiAqICAgICBTdHlsZVNoZWV0LmNyZWF0ZSwgZS5nLiBbc3R5bGVzLnJlZCwgc3R5bGVzLmJsdWVdLlxuICogQHBhcmFtIHtBcnJheS48U2VsZWN0b3JIYW5kbGVyPn0gc2VsZWN0b3JIYW5kbGVyczogQSBsaXN0IG9mIHNlbGVjdG9yXG4gKiAgICAgaGFuZGxlcnMgdG8gdXNlIGZvciBoYW5kbGluZyBzcGVjaWFsIHNlbGVjdG9ycy4gU2VlXG4gKiAgICAgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYC5cbiAqIEBwYXJhbSBzdHJpbmdIYW5kbGVyczogU2VlIGBnZW5lcmF0ZUNTU1J1bGVzZXRgXG4gKiBAcGFyYW0gdXNlSW1wb3J0YW50OiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqXG4gKiBUbyBhY3R1YWxseSBnZW5lcmF0ZSB0aGUgQ1NTIHNwZWNpYWwtY29uc3RydWN0LWxlc3Mgc3R5bGVzIGFyZSBwYXNzZWQgdG9cbiAqIGBnZW5lcmF0ZUNTU1J1bGVzZXRgLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBjYWxsIHRvXG4gKlxuICogICAgIGdlbmVyYXRlQ1NTKFwiLmZvb1wiLCBbe1xuICogICAgICAgY29sb3I6IFwicmVkXCIsXG4gKiAgICAgICBcIkBtZWRpYSBzY3JlZW5cIjoge1xuICogICAgICAgICBoZWlnaHQ6IDIwLFxuICogICAgICAgICBcIjpob3ZlclwiOiB7XG4gKiAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCJcbiAqICAgICAgICAgfVxuICogICAgICAgfSxcbiAqICAgICAgIFwiOmFjdGl2ZVwiOiB7XG4gKiAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG4gKiAgICAgICB9XG4gKiAgICAgfV0sIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzKTtcbiAqXG4gKiB3aXRoIHRoZSBkZWZhdWx0IGBzZWxlY3RvckhhbmRsZXJzYCB3aWxsIG1ha2UgNSBjYWxscyB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGA6XG4gKlxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBjb2xvcjogXCJyZWRcIiB9LCAuLi4pXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvbzphY3RpdmVcIiwgeyBmb250V2VpZ2h0OiBcImJvbGRcIiB9LCAuLi4pXG4gKiAgICAgLy8gVGhlc2UgMiB3aWxsIGJlIHdyYXBwZWQgaW4gQG1lZGlhIHNjcmVlbiB7fVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBoZWlnaHQ6IDIwIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmhvdmVyXCIsIHsgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIgfSwgLi4uKVxuICovXG5cbnZhciBnZW5lcmF0ZUNTUyA9IGZ1bmN0aW9uIGdlbmVyYXRlQ1NTKHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBzdHlsZVR5cGVzXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbilcbi8qIDogc3RyaW5nW10gKi9cbntcbiAgdmFyIG1lcmdlZCA9IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICBtZXJnZWQuYWRkU3R5bGVUeXBlKHN0eWxlVHlwZXNbaV0pO1xuICB9XG5cbiAgdmFyIHBsYWluRGVjbGFyYXRpb25zID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuICB2YXIgZ2VuZXJhdGVkU3R5bGVzID0gW107IC8vIFRPRE8oZW1pbHkpOiBiZW5jaG1hcmsgdGhpcyB0byBzZWUgaWYgYSBwbGFpbiBmb3IgbG9vcCB3b3VsZCBiZSBmYXN0ZXIuXG5cbiAgbWVyZ2VkLmZvckVhY2goZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgLy8gRm9yIGVhY2gga2V5LCBzZWUgaWYgb25lIG9mIHRoZSBzZWxlY3RvciBoYW5kbGVycyB3aWxsIGhhbmRsZSB0aGVzZVxuICAgIC8vIHN0eWxlcy5cbiAgICB2YXIgZm91bmRIYW5kbGVyID0gc2VsZWN0b3JIYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gaGFuZGxlcihrZXksIHNlbGVjdG9yLCBmdW5jdGlvbiAobmV3U2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlQ1NTKG5ld1NlbGVjdG9yLCBbdmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIC8vIElmIHRoZSBoYW5kbGVyIHJldHVybmVkIHNvbWV0aGluZywgYWRkIGl0IHRvIHRoZSBnZW5lcmF0ZWRcbiAgICAgICAgLy8gQ1NTIGFuZCBzdG9wIGxvb2tpbmcgZm9yIGFub3RoZXIgaGFuZGxlci5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgIGdlbmVyYXRlZFN0eWxlcy5wdXNoLmFwcGx5KGdlbmVyYXRlZFN0eWxlcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogU2VsZWN0b3IgaGFuZGxlcnMgc2hvdWxkIHJldHVybiBhbiBhcnJheSBvZiBydWxlcy4nICsgJ1JldHVybmluZyBhIHN0cmluZyBjb250YWluaW5nIG11bHRpcGxlIHJ1bGVzIGlzIGRlcHJlY2F0ZWQuJywgaGFuZGxlcik7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2goXCJAbWVkaWEgYWxsIHtcIi5jb25jYXQocmVzdWx0LCBcIn1cIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7IC8vIElmIG5vbmUgb2YgdGhlIGhhbmRsZXJzIGhhbmRsZWQgaXQsIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBwbGFpblxuICAgIC8vIHN0eWxlIGRlY2xhcmF0aW9ucy5cblxuICAgIGlmICghZm91bmRIYW5kbGVyKSB7XG4gICAgICBwbGFpbkRlY2xhcmF0aW9ucy5zZXQoa2V5LCB2YWwsIHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBnZW5lcmF0ZWRSdWxlc2V0ID0gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yLCBwbGFpbkRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycyk7XG5cbiAgaWYgKGdlbmVyYXRlZFJ1bGVzZXQpIHtcbiAgICBnZW5lcmF0ZWRTdHlsZXMudW5zaGlmdChnZW5lcmF0ZWRSdWxlc2V0KTtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZWRTdHlsZXM7XG59O1xuLyoqXG4gKiBIZWxwZXIgbWV0aG9kIG9mIGdlbmVyYXRlQ1NTUnVsZXNldCB0byBmYWNpbGl0YXRlIGN1c3RvbSBoYW5kbGluZyBvZiBjZXJ0YWluXG4gKiBDU1MgcHJvcGVydGllcy4gVXNlZCBmb3IgZS5nLiBmb250IGZhbWlsaWVzLlxuICpcbiAqIFNlZSBnZW5lcmF0ZUNTU1J1bGVzZXQgZm9yIHVzYWdlIGFuZCBkb2N1bWVudGF0aW9uIG9mIHBhcmFtYXRlciB0eXBlcy5cbiAqL1xuXG52YXIgcnVuU3RyaW5nSGFuZGxlcnMgPSBmdW5jdGlvbiBydW5TdHJpbmdIYW5kbGVycyhkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogdm9pZCAqL1xue1xuICBpZiAoIXN0cmluZ0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0cmluZ0hhbmRsZXJLZXlzID0gT2JqZWN0LmtleXMoc3RyaW5nSGFuZGxlcnMpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nSGFuZGxlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gc3RyaW5nSGFuZGxlcktleXNbaV07XG5cbiAgICBpZiAoZGVjbGFyYXRpb25zLmhhcyhrZXkpKSB7XG4gICAgICAvLyBBIGRlY2xhcmF0aW9uIGV4aXN0cyBmb3IgdGhpcyBwYXJ0aWN1bGFyIHN0cmluZyBoYW5kbGVyLCBzbyB3ZVxuICAgICAgLy8gbmVlZCB0byBsZXQgdGhlIHN0cmluZyBoYW5kbGVyIGludGVycHJldCB0aGUgZGVjbGFyYXRpb24gZmlyc3RcbiAgICAgIC8vIGJlZm9yZSBwcm9jZWVkaW5nLlxuICAgICAgLy9cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiBQYXNzIGluIGEgY2FsbGJhY2sgd2hpY2ggZ2VuZXJhdGVzIENTUywgc2ltaWxhciB0b1xuICAgICAgLy8gaG93IG91ciBzZWxlY3RvciBoYW5kbGVycyB3b3JrLCBpbnN0ZWFkIG9mIHBhc3NpbmcgaW5cbiAgICAgIC8vIGBzZWxlY3RvckhhbmRsZXJzYCBhbmQgaGF2ZSB0aGVtIG1ha2UgY2FsbHMgdG8gYGdlbmVyYXRlQ1NTYFxuICAgICAgLy8gdGhlbXNlbHZlcy4gUmlnaHQgbm93LCB0aGlzIGlzIGltcHJhY3RpY2FsIGJlY2F1c2Ugb3VyIHN0cmluZ1xuICAgICAgLy8gaGFuZGxlcnMgYXJlIHZlcnkgc3BlY2lhbGl6ZWQgYW5kIGRvIGNvbXBsZXggdGhpbmdzLlxuICAgICAgZGVjbGFyYXRpb25zLnNldChrZXksIHN0cmluZ0hhbmRsZXJzW2tleV0oZGVjbGFyYXRpb25zLmdldChrZXkpLCBzZWxlY3RvckhhbmRsZXJzKSwgLy8gUHJlc2VydmUgb3JkZXIgaGVyZSwgc2luY2Ugd2UgYXJlIHJlYWxseSByZXBsYWNpbmcgYW5cbiAgICAgIC8vIHVucHJvY2Vzc2VkIHN0eWxlIHdpdGggYSBwcm9jZXNzZWQgc3R5bGUsIG5vdCBvdmVycmlkaW5nIGFuXG4gICAgICAvLyBlYXJsaWVyIHN0eWxlXG4gICAgICBmYWxzZSk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdHJhbnNmb3JtUnVsZSA9IGZ1bmN0aW9uIHRyYW5zZm9ybVJ1bGUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCB2YWx1ZVxuLyogOiBzdHJpbmcgKi9cbiwgdHJhbnNmb3JtVmFsdWVcbi8qIDogZnVuY3Rpb24gKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgXCJcIi5jb25jYXQoa2ViYWJpZnlTdHlsZU5hbWUoa2V5KSwgXCI6XCIpLmNvbmNhdCh0cmFuc2Zvcm1WYWx1ZShrZXksIHZhbHVlKSwgXCI7XCIpXG4gICk7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyKGFjYywgdmFsKSB7XG4gIGFjY1t2YWxdID0gdHJ1ZTtcbiAgcmV0dXJuIGFjYztcbn07XG4vKipcbiAqIEdlbmVyYXRlIGEgQ1NTIHJ1bGVzZXQgd2l0aCB0aGUgc2VsZWN0b3IgYW5kIGNvbnRhaW5pbmcgdGhlIGRlY2xhcmF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgZ2l2ZW4gZGVjbGFyYXRpb25zIGRvbid0IGNvbnRhaW4gYW55IHNwZWNpYWxcbiAqIGNoaWxkcmVuIChzdWNoIGFzIG1lZGlhIHF1ZXJpZXMsIHBzZXVkby1zZWxlY3RvcnMsIG9yIGRlc2NlbmRhbnQgc3R5bGVzKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBtZXRob2QgZG9lcyBub3QgZGVhbCB3aXRoIG5lc3RpbmcgdXNlZCBmb3IgZS5nLlxuICogcHN1ZWRvLXNlbGVjdG9ycyBvciBtZWRpYSBxdWVyaWVzLiBUaGF0IHJlc3BvbnNpYmlsaXR5IGlzIGxlZnQgdG8gIHRoZVxuICogYGdlbmVyYXRlQ1NTYCBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IHRoZSBzZWxlY3RvciBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVzZXRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWNsYXJhdGlvbnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1MgcHJvcGVydHkgbmFtZSB0byBDU1NcbiAqICAgICBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIGZ1bmN0aW9uPn0gc3RyaW5nSGFuZGxlcnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1NcbiAqICAgICBwcm9wZXJ0eSBuYW1lIHRvIGEgZnVuY3Rpb24gd2hpY2ggd2lsbCBtYXAgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSB2YWx1ZVxuICogICAgIHRoYXQgaXMgb3V0cHV0LlxuICogQHBhcmFtIHtib29sfSB1c2VJbXBvcnRhbnQ6IEEgYm9vbGVhbiBzYXlpbmcgd2hldGhlciB0byBhcHBlbmQgXCIhaW1wb3J0YW50XCJcbiAqICAgICB0byBlYWNoIG9mIHRoZSBDU1MgZGVjbGFyYXRpb25zLlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgcmF3IENTUy5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWQgIWltcG9ydGFudDt9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge30sIGZhbHNlKVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogcmVkfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0sIHtjb2xvcjogYyA9PiBjLnRvVXBwZXJDYXNlfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IFJFRH1cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWg6aG92ZXJcIiwgeyBjb2xvcjogXCJyZWRcIiB9KVxuICogICAgLT4gXCIuYmxhaDpob3Zlcntjb2xvcjogcmVkfVwiXG4gKi9cblxuXG52YXIgZ2VuZXJhdGVDU1NSdWxlc2V0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIC8vIE11dGF0ZXMgZGVjbGFyYXRpb25zXG4gIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICB2YXIgb3JpZ2luYWxFbGVtZW50cyA9IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucy5lbGVtZW50cykucmVkdWNlKGFycmF5VG9PYmplY3RLZXlzUmVkdWNlciwgT2JqZWN0LmNyZWF0ZShudWxsKSk7IC8vIE5PVEUoZW1pbHkpOiBUaGlzIG11dGF0ZXMgaGFuZGxlZERlY2xhcmF0aW9ucy5lbGVtZW50cy5cblxuICB2YXIgcHJlZml4ZWRFbGVtZW50cyA9IHByZWZpeEFsbChkZWNsYXJhdGlvbnMuZWxlbWVudHMpO1xuICB2YXIgZWxlbWVudE5hbWVzID0gT2JqZWN0LmtleXMocHJlZml4ZWRFbGVtZW50cyk7XG5cbiAgaWYgKGVsZW1lbnROYW1lcy5sZW5ndGggIT09IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGgpIHtcbiAgICAvLyBUaGVyZSBhcmUgc29tZSBwcmVmaXhlZCB2YWx1ZXMsIHNvIHdlIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gc29ydFxuICAgIC8vIHRoZW0uXG4gICAgLy9cbiAgICAvLyBMb29wIHRocm91Z2ggcHJlZml4ZWRFbGVtZW50cywgbG9va2luZyBmb3IgYW55dGhpbmcgdGhhdCBpcyBub3QgaW5cbiAgICAvLyBzb3J0T3JkZXIsIHdoaWNoIG1lYW5zIGl0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIFRoaXMgbWVhbnMgdGhhdCB3ZVxuICAgIC8vIG5lZWQgdG8gZmlndXJlIG91dCB3aGVyZSBpdCBzaG91bGQgYXBwZWFyIGluIHRoZSBzb3J0T3JkZXIuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50c1tlbGVtZW50TmFtZXNbaV1dKSB7XG4gICAgICAgIC8vIFRoaXMgZWxlbWVudCBpcyBub3QgaW4gdGhlIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgaXMgYSBwcmVmaXhlZFxuICAgICAgICAvLyB2YWx1ZSB0aGF0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIExldCdzIHRyeSB0byBmaWd1cmUgb3V0IHdoZXJlIGl0XG4gICAgICAgIC8vIGdvZXMuXG4gICAgICAgIHZhciBvcmlnaW5hbFN0eWxlID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChlbGVtZW50TmFtZXNbaV1bMF0gPT09ICdXJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBXZWJraXQtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJXZWJraXRUcmFuc2l0aW9uXCIuIExldCdzXG4gICAgICAgICAgLy8gZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bNl0udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg3KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZXNbaV1bMV0gPT09ICdvJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBNb3otcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNb3pUcmFuc2l0aW9uXCIuIFdlIGNoZWNrXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBjaGFyYWN0ZXIgdG8gYXZvaWQgY29sbGlkaW5nIHdpdGggTXMtcHJlZml4ZWRcbiAgICAgICAgICAvLyBzdHlsZXMuIExldCdzIGZpbmQgaXRzIG9yaWdpbmFsIHN0eWxlJ3Mgc29ydCBvcmRlci5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzNdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoNCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ3MnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1zLXByZWZpeGVkIHN0eWxlLCBsaWtlIFwiTXNUcmFuc2l0aW9uXCIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVsyXS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9yaWdpbmFsU3R5bGUgJiYgb3JpZ2luYWxFbGVtZW50c1tvcmlnaW5hbFN0eWxlXSkge1xuICAgICAgICAgIHZhciBvcmlnaW5hbEluZGV4ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmluZGV4T2Yob3JpZ2luYWxTdHlsZSk7XG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnNwbGljZShvcmlnaW5hbEluZGV4LCAwLCBlbGVtZW50TmFtZXNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGtub3cgd2hhdCB0aGUgb3JpZ2luYWwgc3R5bGUgd2FzLCBzbyBzb3J0IGl0IHRvXG4gICAgICAgICAgLy8gdG9wLiBUaGlzIGNhbiBoYXBwZW4gZm9yIHN0eWxlcyB0aGF0IGFyZSBhZGRlZCB0aGF0IGRvbid0XG4gICAgICAgICAgLy8gaGF2ZSB0aGUgc2FtZSBiYXNlIG5hbWUgYXMgdGhlIG9yaWdpbmFsIHN0eWxlLlxuICAgICAgICAgIGRlY2xhcmF0aW9ucy5rZXlPcmRlci51bnNoaWZ0KGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgdHJhbnNmb3JtVmFsdWUgPSB1c2VJbXBvcnRhbnQgPT09IGZhbHNlID8gc3RyaW5naWZ5VmFsdWUgOiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZTtcbiAgdmFyIHJ1bGVzID0gW107XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyW19pXTtcbiAgICB2YXIgdmFsdWUgPSBwcmVmaXhlZEVsZW1lbnRzW2tleV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIC8vIGlubGluZS1zdHlsZS1wcmVmaXhlciByZXR1cm5zIGFuIGFycmF5IHdoZW4gdGhlcmUgc2hvdWxkIGJlXG4gICAgICAvLyBtdWx0aXBsZSBydWxlcyBmb3IgdGhlIHNhbWUga2V5LiBIZXJlIHdlIGZsYXR0ZW4gdG8gbXVsdGlwbGVcbiAgICAgIC8vIHBhaXJzIHdpdGggdGhlIHNhbWUga2V5LlxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZVtqXSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcnVsZXMucHVzaCh0cmFuc2Zvcm1SdWxlKGtleSwgdmFsdWUsIHRyYW5zZm9ybVZhbHVlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJ1bGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChydWxlcy5qb2luKFwiXCIpLCBcIn1cIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiwgU2hlZXREZWZpbml0aW9ucyB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHR5cGUgeyBNYXliZVNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuKi9cbi8vIFRoZSBjdXJyZW50IDxzdHlsZT4gdGFnIHdlIGFyZSBpbnNlcnRpbmcgaW50bywgb3IgbnVsbCBpZiB3ZSBoYXZlbid0XG4vLyBpbnNlcnRlZCBhbnl0aGluZyB5ZXQuIFdlIGNvdWxkIGZpbmQgdGhpcyBlYWNoIHRpbWUgdXNpbmdcbi8vIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVcIl0pYCwgYnV0IGhvbGRpbmcgb250byBpdCBpc1xuLy8gZmFzdGVyLlxuXG52YXIgc3R5bGVUYWdcbi8qIDogP0hUTUxTdHlsZUVsZW1lbnQgKi9cbj0gbnVsbDsgLy8gSW5qZWN0IGEgc2V0IG9mIHJ1bGVzIGludG8gYSA8c3R5bGU+IHRhZyBpbiB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuIFRoaXNcbi8vIHdpbGwgYXV0b21hdGljYWxseSBjcmVhdGUgYSBzdHlsZSB0YWcgYW5kIHRoZW4gY29udGludWUgdG8gdXNlIGl0IGZvclxuLy8gbXVsdGlwbGUgaW5qZWN0aW9ucy4gSXQgd2lsbCBhbHNvIHVzZSBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgXG4vLyB0YWcgb24gaXQgaWYgdGhhdCBleGlzdHMgaW4gdGhlIERPTS4gVGhpcyBjb3VsZCBiZSB1c2VkIGZvciBlLmcuIHJldXNpbmcgdGhlXG4vLyBzYW1lIHN0eWxlIHRhZyB0aGF0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBpbnNlcnRzLlxuXG52YXIgaW5qZWN0U3R5bGVUYWcgPSBmdW5jdGlvbiBpbmplY3RTdHlsZVRhZyhjc3NSdWxlc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYSBzdHlsZSB0YWcgd2l0aCB0aGUgYGRhdGEtYXBocm9kaXRlYCBhdHRyaWJ1dGUgZmlyc3QuXG4gICAgc3R5bGVUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVdXCIpXG4gICAgLyogOiBhbnkgKi9cbiAgICA7IC8vIElmIHRoYXQgZG9lc24ndCB3b3JrLCBnZW5lcmF0ZSBhIG5ldyBzdHlsZSB0YWcuXG5cbiAgICBpZiAoc3R5bGVUYWcgPT0gbnVsbCkge1xuICAgICAgLy8gVGFrZW4gZnJvbVxuICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MjQ2OTYvaG93LXRvLWNyZWF0ZS1hLXN0eWxlLXRhZy13aXRoLWphdmFzY3JpcHRcbiAgICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdO1xuICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVUYWcudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFwaHJvZGl0ZVwiLCBcIlwiKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpO1xuICAgIH1cbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgc2hlZXQgPSBzdHlsZVRhZy5zdHlsZVNoZWV0IHx8IHN0eWxlVGFnLnNoZWV0XG4gIC8qIDogYW55ICovXG4gIDtcblxuICBpZiAoc2hlZXQuaW5zZXJ0UnVsZSkge1xuICAgIHZhciBudW1SdWxlcyA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcbiAgICBjc3NSdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIG51bVJ1bGVzKTtcbiAgICAgICAgbnVtUnVsZXMgKz0gMTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBUaGUgc2VsZWN0b3IgZm9yIHRoaXMgcnVsZSB3YXNuJ3QgY29tcGF0aWJsZSB3aXRoIHRoZSBicm93c2VyXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gKHN0eWxlVGFnLmlubmVyVGV4dCB8fCAnJykgKyBjc3NSdWxlcy5qb2luKCcnKTtcbiAgfVxufTsgLy8gQ3VzdG9tIGhhbmRsZXJzIGZvciBzdHJpbmdpZnlpbmcgQ1NTIHZhbHVlcyB0aGF0IGhhdmUgc2lkZSBlZmZlY3RzXG4vLyAoc3VjaCBhcyBmb250RmFtaWx5LCB3aGljaCBjYW4gY2F1c2UgQGZvbnQtZmFjZSBydWxlcyB0byBiZSBpbmplY3RlZClcblxuXG52YXIgc3RyaW5nSGFuZGxlcnMgPSB7XG4gIC8vIFdpdGggZm9udEZhbWlseSB3ZSBsb29rIGZvciBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCBpbiBhbmQgaW50ZXJwcmV0XG4gIC8vIHRoZW0gYXMgQGZvbnQtZmFjZSBydWxlcyB0aGF0IHdlIG5lZWQgdG8gaW5qZWN0LiBUaGUgdmFsdWUgb2YgZm9udEZhbWlseVxuICAvLyBjYW4gZWl0aGVyIGJlIGEgc3RyaW5nIChhcyBub3JtYWwpLCBhbiBvYmplY3QgKGEgc2luZ2xlIGZvbnQgZmFjZSksIG9yXG4gIC8vIGFuIGFycmF5IG9mIG9iamVjdHMgYW5kIHN0cmluZ3MuXG4gIGZvbnRGYW1pbHk6IGZ1bmN0aW9uIGZvbnRGYW1pbHkodmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgdmFyIG5hbWVNYXAgPSB7fTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIG5hbWVNYXBbZm9udEZhbWlseSh2KV0gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMobmFtZU1hcCkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGluamVjdFN0eWxlT25jZSh2YWwuc3JjLCBcIkBmb250LWZhY2VcIiwgW3ZhbF0sIGZhbHNlKTtcbiAgICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodmFsLmZvbnRGYW1pbHksIFwiXFxcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH0sXG4gIC8vIFdpdGggYW5pbWF0aW9uTmFtZSB3ZSBsb29rIGZvciBhbiBvYmplY3QgdGhhdCBjb250YWlucyBrZXlmcmFtZXMgYW5kXG4gIC8vIGluamVjdCB0aGVtIGFzIGFuIGBAa2V5ZnJhbWVzYCBibG9jaywgcmV0dXJuaW5nIGEgdW5pcXVlbHkgZ2VuZXJhdGVkXG4gIC8vIG5hbWUuIFRoZSBrZXlmcmFtZXMgb2JqZWN0IHNob3VsZCBsb29rIGxpa2VcbiAgLy8gIGFuaW1hdGlvbk5hbWU6IHtcbiAgLy8gICAgZnJvbToge1xuICAvLyAgICAgIGxlZnQ6IDAsXG4gIC8vICAgICAgdG9wOiAwLFxuICAvLyAgICB9LFxuICAvLyAgICAnNTAlJzoge1xuICAvLyAgICAgIGxlZnQ6IDE1LFxuICAvLyAgICAgIHRvcDogNSxcbiAgLy8gICAgfSxcbiAgLy8gICAgdG86IHtcbiAgLy8gICAgICBsZWZ0OiAyMCxcbiAgLy8gICAgICB0b3A6IDIwLFxuICAvLyAgICB9XG4gIC8vICB9XG4gIC8vIFRPRE8oZW1pbHkpOiBgc3RyaW5nSGFuZGxlcnNgIGRvZXNuJ3QgbGV0IHVzIHJlbmFtZSB0aGUga2V5LCBzbyBJIGhhdmVcbiAgLy8gdG8gdXNlIGBhbmltYXRpb25OYW1lYCBoZXJlLiBJbXByb3ZlIHRoYXQgc28gd2UgY2FuIGNhbGwgdGhpc1xuICAvLyBgYW5pbWF0aW9uYCBpbnN0ZWFkIG9mIGBhbmltYXRpb25OYW1lYC5cbiAgYW5pbWF0aW9uTmFtZTogZnVuY3Rpb24gYW5pbWF0aW9uTmFtZSh2YWwsIHNlbGVjdG9ySGFuZGxlcnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gdmFsLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTmFtZSh2LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWwpID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJhc2VkIG9uIHRoZSBoYXNoIG9mIHRoZSBvYmplY3QuIFdlIGNhbid0XG4gICAgICAvLyBqdXN0IHVzZSB0aGUgaGFzaCBiZWNhdXNlIHRoZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggYSBudW1iZXIuXG4gICAgICAvLyBUT0RPKGVtaWx5KTogdGhpcyBwcm9iYWJseSBtYWtlcyBkZWJ1Z2dpbmcgaGFyZCwgYWxsb3cgYSBjdXN0b21cbiAgICAgIC8vIG5hbWU/XG4gICAgICB2YXIgbmFtZSA9IFwia2V5ZnJhbWVfXCIuY29uY2F0KGhhc2hPYmplY3QodmFsKSk7IC8vIFNpbmNlIGtleWZyYW1lcyBuZWVkIDMgbGF5ZXJzIG9mIG5lc3RpbmcsIHdlIHVzZSBgZ2VuZXJhdGVDU1NgIHRvXG4gICAgICAvLyBidWlsZCB0aGUgaW5uZXIgbGF5ZXJzIGFuZCB3cmFwIGl0IGluIGBAa2V5ZnJhbWVzYCBvdXJzZWx2ZXMuXG5cbiAgICAgIHZhciBmaW5hbFZhbCA9IFwiQGtleWZyYW1lcyBcIi5jb25jYXQobmFtZSwgXCJ7XCIpOyAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gZmluZCBhIHdheSB3aGVyZSBjaGVja2luZyBmb3IgT3JkZXJlZEVsZW1lbnRzXG4gICAgICAvLyBoZXJlIGlzIG5vdCBuZWNlc3NhcnkuIEFsdGVybmF0aXZlbHksIHBlcmhhcHMgd2Ugc2hvdWxkIGhhdmUgYVxuICAgICAgLy8gdXRpbGl0eSBtZXRob2QgdGhhdCBjYW4gaXRlcmF0ZSBvdmVyIGVpdGhlciBhIHBsYWluIG9iamVjdCwgYW5cbiAgICAgIC8vIGluc3RhbmNlIG9mIE9yZGVyZWRFbGVtZW50cywgb3IgYSBNYXAsIGFuZCB0aGVuIHVzZSB0aGF0IGhlcmUgYW5kXG4gICAgICAvLyBlbHNld2hlcmUuXG5cbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHZhbFZhbCwgdmFsS2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1ModmFsS2V5LCBbdmFsVmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyh2YWwpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGZpbmFsVmFsICs9IGdlbmVyYXRlQ1NTKGtleSwgW3ZhbFtrZXldXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZpbmFsVmFsICs9ICd9JztcbiAgICAgIGluamVjdEdlbmVyYXRlZENTU09uY2UobmFtZSwgW2ZpbmFsVmFsXSk7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn07IC8vIFRoaXMgaXMgYSBtYXAgZnJvbSBBcGhyb2RpdGUncyBnZW5lcmF0ZWQgY2xhc3MgbmFtZXMgdG8gYHRydWVgIChhY3RpbmcgYXMgYVxuLy8gc2V0IG9mIGNsYXNzIG5hbWVzKVxuXG52YXIgYWxyZWFkeUluamVjdGVkID0ge307IC8vIFRoaXMgaXMgdGhlIGJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cblxudmFyIGluamVjdGlvbkJ1ZmZlclxuLyogOiBzdHJpbmdbXSAqL1xuPSBbXTsgLy8gQSBmbGFnIHRvIHRlbGwgaWYgd2UgYXJlIGFscmVhZHkgYnVmZmVyaW5nIHN0eWxlcy4gVGhpcyBjb3VsZCBoYXBwZW4gZWl0aGVyXG4vLyBiZWNhdXNlIHdlIHNjaGVkdWxlZCBhIGZsdXNoIGNhbGwgYWxyZWFkeSwgc28gbmV3bHkgYWRkZWQgc3R5bGVzIHdpbGxcbi8vIGFscmVhZHkgYmUgZmx1c2hlZCwgb3IgYmVjYXVzZSB3ZSBhcmUgc3RhdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlci5cblxudmFyIGlzQnVmZmVyaW5nID0gZmFsc2U7XG5cbnZhciBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlID0gZnVuY3Rpb24gaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShrZXksIGdlbmVyYXRlZENTUykge1xuICB2YXIgX2luamVjdGlvbkJ1ZmZlcjtcblxuICBpZiAoYWxyZWFkeUluamVjdGVkW2tleV0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWlzQnVmZmVyaW5nKSB7XG4gICAgLy8gV2Ugc2hvdWxkIG5ldmVyIGJlIGF1dG9tYXRpY2FsbHkgYnVmZmVyaW5nIG9uIHRoZSBzZXJ2ZXIgKG9yIGFueVxuICAgIC8vIHBsYWNlIHdpdGhvdXQgYSBkb2N1bWVudCksIHNvIGd1YXJkIGFnYWluc3QgdGhhdC5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYXV0b21hdGljYWxseSBidWZmZXIgd2l0aG91dCBhIGRvY3VtZW50XCIpO1xuICAgIH0gLy8gSWYgd2UncmUgbm90IGFscmVhZHkgYnVmZmVyaW5nLCBzY2hlZHVsZSBhIGNhbGwgdG8gZmx1c2ggdGhlXG4gICAgLy8gY3VycmVudCBzdHlsZXMuXG5cblxuICAgIGlzQnVmZmVyaW5nID0gdHJ1ZTtcbiAgICBhc2FwKGZsdXNoVG9TdHlsZVRhZyk7XG4gIH1cblxuICAoX2luamVjdGlvbkJ1ZmZlciA9IGluamVjdGlvbkJ1ZmZlcikucHVzaC5hcHBseShfaW5qZWN0aW9uQnVmZmVyLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2VuZXJhdGVkQ1NTKSk7XG5cbiAgYWxyZWFkeUluamVjdGVkW2tleV0gPSB0cnVlO1xufTtcblxudmFyIGluamVjdFN0eWxlT25jZSA9IGZ1bmN0aW9uIGluamVjdFN0eWxlT25jZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWZpbml0aW9uc1xuLyogOiBTaGVldERlZmluaXRpb25bXSAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKSB7XG4gIHZhciBzZWxlY3RvckhhbmRsZXJzXG4gIC8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiAgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IFtdO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZUNTUyhzZWxlY3RvciwgZGVmaW5pdGlvbnMsIHNlbGVjdG9ySGFuZGxlcnMsIHN0cmluZ0hhbmRsZXJzLCB1c2VJbXBvcnRhbnQpO1xuICBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkKTtcbn07XG52YXIgcmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIGFscmVhZHlJbmplY3RlZCA9IHt9O1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICBzdHlsZVRhZyA9IG51bGw7XG59O1xudmFyIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IGZ1bmN0aW9uIHJlc2V0SW5qZWN0ZWRTdHlsZShrZXlcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgZGVsZXRlIGFscmVhZHlJbmplY3RlZFtrZXldO1xufTtcbnZhciBnZXRCdWZmZXJlZFN0eWxlcyA9IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzKCkge1xuICByZXR1cm4gaW5qZWN0aW9uQnVmZmVyO1xufTtcbnZhciBzdGFydEJ1ZmZlcmluZyA9IGZ1bmN0aW9uIHN0YXJ0QnVmZmVyaW5nKCkge1xuICBpZiAoaXNCdWZmZXJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYnVmZmVyIHdoaWxlIGFscmVhZHkgYnVmZmVyaW5nXCIpO1xuICB9XG5cbiAgaXNCdWZmZXJpbmcgPSB0cnVlO1xufTtcblxudmFyIGZsdXNoVG9BcnJheSA9IGZ1bmN0aW9uIGZsdXNoVG9BcnJheSgpIHtcbiAgaXNCdWZmZXJpbmcgPSBmYWxzZTtcbiAgdmFyIHJldCA9IGluamVjdGlvbkJ1ZmZlcjtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIHJldHVybiByZXQ7XG59O1xuXG52YXIgZmx1c2hUb1N0cmluZyA9IGZ1bmN0aW9uIGZsdXNoVG9TdHJpbmcoKSB7XG4gIHJldHVybiBmbHVzaFRvQXJyYXkoKS5qb2luKCcnKTtcbn07XG52YXIgZmx1c2hUb1N0eWxlVGFnID0gZnVuY3Rpb24gZmx1c2hUb1N0eWxlVGFnKCkge1xuICB2YXIgY3NzUnVsZXMgPSBmbHVzaFRvQXJyYXkoKTtcblxuICBpZiAoY3NzUnVsZXMubGVuZ3RoID4gMCkge1xuICAgIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzKTtcbiAgfVxufTtcbnZhciBnZXRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICByZXR1cm4gT2JqZWN0LmtleXMoYWxyZWFkeUluamVjdGVkKTtcbn07XG52YXIgYWRkUmVuZGVyZWRDbGFzc05hbWVzID0gZnVuY3Rpb24gYWRkUmVuZGVyZWRDbGFzc05hbWVzKGNsYXNzTmFtZXNcbi8qIDogc3RyaW5nW10gKi9cbikge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGFscmVhZHlJbmplY3RlZFtjbGFzc05hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgaXNWYWxpZFN0eWxlRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIGlzVmFsaWRTdHlsZURlZmluaXRpb24oZGVmXG4vKiA6IE9iamVjdCAqL1xuKSB7XG4gIHJldHVybiBcIl9kZWZpbml0aW9uXCIgaW4gZGVmICYmIFwiX25hbWVcIiBpbiBkZWYgJiYgXCJfbGVuXCIgaW4gZGVmO1xufTtcblxudmFyIHByb2Nlc3NTdHlsZURlZmluaXRpb25zID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9uc1xuLyogOiBhbnlbXSAqL1xuLCBjbGFzc05hbWVCaXRzXG4vKiA6IHN0cmluZ1tdICovXG4sIGRlZmluaXRpb25CaXRzXG4vKiA6IE9iamVjdFtdICovXG4sIGxlbmd0aFxuLyogOiBudW1iZXIgKi9cbilcbi8qIDogbnVtYmVyICovXG57XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVEZWZpbml0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIEZpbHRlciBvdXQgZmFsc3kgdmFsdWVzIGZyb20gdGhlIGlucHV0LCB0byBhbGxvdyBmb3JcbiAgICAvLyBgY3NzKGEsIHRlc3QgJiYgYylgXG4gICAgaWYgKHN0eWxlRGVmaW5pdGlvbnNbaV0pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIC8vIFdlJ3ZlIGVuY291bnRlcmVkIGFuIGFycmF5LCBzbyBsZXQncyByZWN1cnNlXG4gICAgICAgIGxlbmd0aCArPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zW2ldLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihzdHlsZURlZmluaXRpb25zW2ldKSkge1xuICAgICAgICBjbGFzc05hbWVCaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fbmFtZSk7XG4gICAgICAgIGRlZmluaXRpb25CaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fZGVmaW5pdGlvbik7XG4gICAgICAgIGxlbmd0aCArPSBzdHlsZURlZmluaXRpb25zW2ldLl9sZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFN0eWxlIERlZmluaXRpb246IFN0eWxlcyBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyB0aGUgU3R5bGVTaGVldC5jcmVhdGUgbWV0aG9kLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGVuZ3RoO1xufTtcbi8qKlxuICogSW5qZWN0IHN0eWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhc3NlZCBzdHlsZSBkZWZpbml0aW9uIG9iamVjdHMsIGFuZCByZXR1cm5cbiAqIGFuIGFzc29jaWF0ZWQgQ1NTIGNsYXNzIG5hbWUuXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VJbXBvcnRhbnQgSWYgdHJ1ZSwgd2lsbCBhcHBlbmQgIWltcG9ydGFudCB0byBnZW5lcmF0ZWRcbiAqICAgICBDU1Mgb3V0cHV0LiBlLmcuIHtjb2xvcjogcmVkfSAtPiBcImNvbG9yOiByZWQgIWltcG9ydGFudFwiLlxuICogQHBhcmFtIHsoT2JqZWN0fE9iamVjdFtdKVtdfSBzdHlsZURlZmluaXRpb25zIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgb3JcbiAqICAgICBhcmJpdHJhcmlseSBuZXN0ZWQgYXJyYXlzIG9mIHRoZW0sIGFzIHJldHVybmVkIGFzIHByb3BlcnRpZXMgb2YgdGhlXG4gKiAgICAgcmV0dXJuIHZhbHVlIG9mIFN0eWxlU2hlZXQuY3JlYXRlKCkuXG4gKi9cblxuXG52YXIgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHN0eWxlRGVmaW5pdGlvbnNcbi8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuLCBzZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICB2YXIgY2xhc3NOYW1lQml0cyA9IFtdO1xuICB2YXIgZGVmaW5pdGlvbkJpdHMgPSBbXTsgLy8gTXV0YXRlcyBjbGFzc05hbWVCaXRzIGFuZCBkZWZpbml0aW9uQml0cyBhbmQgcmV0dXJucyBhIGxlbmd0aCB3aGljaCB3ZVxuICAvLyB3aWxsIGFwcGVuZCB0byB0aGUgaGFzaCB0byBkZWNyZWFzZSB0aGUgY2hhbmNlIG9mIGhhc2ggY29sbGlzaW9ucy5cblxuICB2YXIgbGVuZ3RoID0gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9ucywgY2xhc3NOYW1lQml0cywgZGVmaW5pdGlvbkJpdHMsIDApOyAvLyBCcmVhayBpZiB0aGVyZSBhcmVuJ3QgYW55IHZhbGlkIHN0eWxlcy5cblxuICBpZiAoY2xhc3NOYW1lQml0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMSA/IFwiX1wiLmNvbmNhdChjbGFzc05hbWVCaXRzWzBdKSA6IFwiX1wiLmNvbmNhdChoYXNoU3RyaW5nKGNsYXNzTmFtZUJpdHMuam9pbigpKSkuY29uY2F0KChsZW5ndGggJSAzNikudG9TdHJpbmcoMzYpKTtcbiAgfSBlbHNlIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmpvaW4oXCItb19PLVwiKTtcbiAgfVxuXG4gIGluamVjdFN0eWxlT25jZShjbGFzc05hbWUsIFwiLlwiLmNvbmNhdChjbGFzc05hbWUpLCBkZWZpbml0aW9uQml0cywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHR5cGUgU2hlZXREZWZpbml0aW9uID0geyBbaWQ6c3RyaW5nXTogYW55IH07XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb25zID0gU2hlZXREZWZpbml0aW9uIHwgU2hlZXREZWZpbml0aW9uW107XG50eXBlIFJlbmRlckZ1bmN0aW9uID0gKCkgPT4gc3RyaW5nO1xudHlwZSBFeHRlbnNpb24gPSB7XG4gICAgc2VsZWN0b3JIYW5kbGVyOiBTZWxlY3RvckhhbmRsZXJcbn07XG5leHBvcnQgdHlwZSBNYXliZVNoZWV0RGVmaW5pdGlvbiA9IFNoZWV0RGVmaW5pdGlvbiB8IGZhbHNlIHwgbnVsbCB8IHZvaWRcbiovXG5cbnZhciB1bm1pbmlmaWVkSGFzaEZuID0gZnVuY3Rpb24gdW5taW5pZmllZEhhc2hGbihzdHJcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gXCJcIi5jb25jYXQoa2V5LCBcIl9cIikuY29uY2F0KGhhc2hTdHJpbmcoc3RyKSk7XG59OyAvLyBTdHlsZVNoZWV0LmNyZWF0ZSBpcyBpbiBhIGhvdCBwYXRoIHNvIHdlIHdhbnQgdG8ga2VlcCBhcyBtdWNoIGxvZ2ljIG91dCBvZiBpdFxuLy8gYXMgcG9zc2libGUuIFNvLCB3ZSBmaWd1cmUgb3V0IHdoaWNoIGhhc2ggZnVuY3Rpb24gdG8gdXNlIG9uY2UsIGFuZCBvbmx5XG4vLyBzd2l0Y2ggaXQgb3V0IHZpYSBtaW5pZnkoKSBhcyBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyBpcyBpbiBhbiBleHBvcnRlZCBmdW5jdGlvbiB0byBtYWtlIGl0IGVhc2llciB0byB0ZXN0LlxuXG5cbnZhciBpbml0aWFsSGFzaEZuID0gZnVuY3Rpb24gaW5pdGlhbEhhc2hGbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBoYXNoU3RyaW5nIDogdW5taW5pZmllZEhhc2hGbjtcbn07XG52YXIgaGFzaEZuID0gaW5pdGlhbEhhc2hGbigpO1xudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNoZWV0RGVmaW5pdGlvblxuICAvKiA6IFNoZWV0RGVmaW5pdGlvbiAqL1xuICApXG4gIC8qIDogT2JqZWN0ICovXG4gIHtcbiAgICB2YXIgbWFwcGVkU2hlZXREZWZpbml0aW9uID0ge307XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzaGVldERlZmluaXRpb24pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIHZhciB2YWwgPSBzaGVldERlZmluaXRpb25ba2V5XTtcbiAgICAgIHZhciBzdHJpbmdWYWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgICAgbWFwcGVkU2hlZXREZWZpbml0aW9uW2tleV0gPSB7XG4gICAgICAgIF9sZW46IHN0cmluZ1ZhbC5sZW5ndGgsXG4gICAgICAgIF9uYW1lOiBoYXNoRm4oc3RyaW5nVmFsLCBrZXkpLFxuICAgICAgICBfZGVmaW5pdGlvbjogdmFsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtYXBwZWRTaGVldERlZmluaXRpb247XG4gIH0sXG4gIHJlaHlkcmF0ZTogZnVuY3Rpb24gcmVoeWRyYXRlKCkge1xuICAgIHZhciByZW5kZXJlZENsYXNzTmFtZXNcbiAgICAvKiA6IHN0cmluZ1tdICovXG4gICAgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIGFkZFJlbmRlcmVkQ2xhc3NOYW1lcyhyZW5kZXJlZENsYXNzTmFtZXMpO1xuICB9XG59O1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHVzaW5nIEFwaHJvZGl0ZSBzZXJ2ZXItc2lkZS5cbiAqXG4gKiBUaGlzIGNhbiBiZSBtaW5pZmllZCBvdXQgaW4gY2xpZW50LW9ubHkgYnVuZGxlcyBieSByZXBsYWNpbmcgYHR5cGVvZiB3aW5kb3dgXG4gKiB3aXRoIGBcIm9iamVjdFwiYCwgZS5nLiB2aWEgV2VicGFjaydzIERlZmluZVBsdWdpbjpcbiAqXG4gKiAgIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gKiAgICAgXCJ0eXBlb2Ygd2luZG93XCI6IEpTT04uc3RyaW5naWZ5KFwib2JqZWN0XCIpXG4gKiAgIH0pXG4gKi9cblxudmFyIFN0eWxlU2hlZXRTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IG51bGwgOiB7XG4gIHJlbmRlclN0YXRpYzogZnVuY3Rpb24gcmVuZGVyU3RhdGljKHJlbmRlckZ1bmNcbiAgLyogOiBSZW5kZXJGdW5jdGlvbiAqL1xuICApIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gICAgdmFyIGh0bWwgPSByZW5kZXJGdW5jKCk7XG4gICAgdmFyIGNzc0NvbnRlbnQgPSBmbHVzaFRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGh0bWw6IGh0bWwsXG4gICAgICBjc3M6IHtcbiAgICAgICAgY29udGVudDogY3NzQ29udGVudCxcbiAgICAgICAgcmVuZGVyZWRDbGFzc05hbWVzOiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIGluIHRlc3RzLlxuICpcbiAqIE5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gbnVsbCA6IHtcbiAgLyoqXG4gICogUHJldmVudCBzdHlsZXMgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBET00uXG4gICpcbiAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSdkIGxpa2UgdG8gdGVzdCByZW5kZXJpbmcgVUlcbiAgKiBjb21wb25lbnRzIHdoaWNoIHVzZSBBcGhyb2RpdGUgd2l0aG91dCBhbnkgb2YgdGhlIHNpZGUtZWZmZWN0cyBvZlxuICAqIEFwaHJvZGl0ZSBoYXBwZW5pbmcuIFBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHRlc3RpbmcgdGhlIG91dHB1dCBvZlxuICAqIGNvbXBvbmVudHMgd2hlbiB5b3UgaGF2ZSBubyBET00sIGUuZy4gdGVzdGluZyBpbiBOb2RlIHdpdGhvdXQgYSBmYWtlIERPTS5cbiAgKlxuICAqIFNob3VsZCBiZSBwYWlyZWQgd2l0aCBhIHN1YnNlcXVlbnQgY2FsbCB0b1xuICAqIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24uXG4gICovXG4gIHN1cHByZXNzU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIHN1cHByZXNzU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgICBzdGFydEJ1ZmZlcmluZygpO1xuICB9LFxuXG4gIC8qKlxuICAqIE9wcG9zaXRlIG1ldGhvZCBvZiBwcmV2ZW50U3R5bGVJbmplY3QuXG4gICovXG4gIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgfSxcblxuICAvKipcbiAgKiBSZXR1cm5zIGEgc3RyaW5nIG9mIGJ1ZmZlcmVkIHN0eWxlcyB3aGljaCBoYXZlIG5vdCBiZWVuIGZsdXNoZWRcbiAgKlxuICAqIEByZXR1cm5zIHtzdHJpbmd9ICBCdWZmZXIgb2Ygc3R5bGVzIHdoaWNoIGhhdmUgbm90IHlldCBiZWVuIGZsdXNoZWQuXG4gICovXG4gIGdldEJ1ZmZlcmVkU3R5bGVzOiBmdW5jdGlvbiBnZXRCdWZmZXJlZFN0eWxlcyQxKCkge1xuICAgIHJldHVybiBnZXRCdWZmZXJlZFN0eWxlcygpO1xuICB9XG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgQXBocm9kaXRlIEFQSSBleHBvcnRzLCB3aXRoIGdpdmVuIGBzZWxlY3RvckhhbmRsZXJzYCBhbmRcbiAqIGB1c2VJbXBvcnRhbnRgIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnM7XG4gIHJldHVybiB7XG4gICAgU3R5bGVTaGVldDogX29iamVjdFNwcmVhZCh7fSwgU3R5bGVTaGVldCwge1xuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGEgdmVyc2lvbiBvZiB0aGUgZXhwb3J0cyBvZiBBcGhyb2RpdGUgKGkuZS4gYW4gb2JqZWN0XG4gICAgICAgKiB3aXRoIGBjc3NgIGFuZCBgU3R5bGVTaGVldGAgcHJvcGVydGllcykgd2hpY2ggaGF2ZSBzb21lXG4gICAgICAgKiBleHRlbnNpb25zIGluY2x1ZGVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGV4dGVuc2lvbnM6IEFuIGFycmF5IG9mIGV4dGVuc2lvbnMgdG9cbiAgICAgICAqICAgICBhZGQgdG8gdGhpcyBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuIEVhY2ggb2JqZWN0IHNob3VsZCBoYXZlIGFcbiAgICAgICAqICAgICBzaW5nbGUgcHJvcGVydHkgb24gaXQsIGRlZmluaW5nIHdoaWNoIGtpbmQgb2YgZXh0ZW5zaW9uIHRvXG4gICAgICAgKiAgICAgYWRkLlxuICAgICAgICogQHBhcmFtIHtTZWxlY3RvckhhbmRsZXJ9IFtleHRlbnNpb25zW10uc2VsZWN0b3JIYW5kbGVyXTogQVxuICAgICAgICogICAgIHNlbGVjdG9yIGhhbmRsZXIgZXh0ZW5zaW9uLiBTZWUgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYCBpblxuICAgICAgICogICAgIGdlbmVyYXRlLmpzLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBleHBvcnRzIG9mIHRoZSBuZXdcbiAgICAgICAqICAgICBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuXG4gICAgICAgKi9cbiAgICAgIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGV4dGVuc2lvbnNcbiAgICAgIC8qIDogRXh0ZW5zaW9uW10gKi9cbiAgICAgICkge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyA9IGV4dGVuc2lvbnMgLy8gUHVsbCBvdXQgZXh0ZW5zaW9ucyB3aXRoIGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5XG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGV4dGVuc2lvbikge1xuICAgICAgICAgIHJldHVybiBleHRlbnNpb24uc2VsZWN0b3JIYW5kbGVyO1xuICAgICAgICB9KSAvLyBSZW1vdmUgbnVsbHMgKGkuZS4gZXh0ZW5zaW9ucyB3aXRob3V0IGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5KS5cbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycy5jb25jYXQoZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycykpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFN0eWxlU2hlZXRTZXJ2ZXI6IFN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlsczogU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBtaW5pZnk6IGZ1bmN0aW9uIG1pbmlmeShzaG91bGRNaW5pZnlcbiAgICAvKiA6IGJvb2xlYW4gKi9cbiAgICApIHtcbiAgICAgIGhhc2hGbiA9IHNob3VsZE1pbmlmeSA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xuICAgIH0sXG4gICAgY3NzOiBmdW5jdGlvbiBjc3MoKVxuICAgIC8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHlsZURlZmluaXRpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBzdHlsZURlZmluaXRpb25zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudCwgc3R5bGVEZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycyk7XG4gICAgfSxcbiAgICBmbHVzaFRvU3R5bGVUYWc6IGZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWU6IGluamVjdEFuZEdldENsYXNzTmFtZSxcbiAgICBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyczogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZTogcmVzZXRJbmplY3RlZFN0eWxlXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VFeHBvcnRzIGFzIGEgfTtcbiIsImltcG9ydCB7IGEgYXMgbWFrZUV4cG9ydHMgfSBmcm9tICcuL2NodW5rLWZlYmNlNDZiLmpzJztcbmltcG9ydCAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0ICdhc2FwJztcblxudmFyIHVzZUltcG9ydGFudCA9IHRydWU7IC8vIEFkZCAhaW1wb3J0YW50IHRvIGFsbCBzdHlsZSBkZWZpbml0aW9uc1xuXG52YXIgQXBocm9kaXRlID0gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50KTtcbnZhciBTdHlsZVNoZWV0ID0gQXBocm9kaXRlLlN0eWxlU2hlZXQsXG4gICAgU3R5bGVTaGVldFNlcnZlciA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0U2VydmVyLFxuICAgIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBBcGhyb2RpdGUuU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBjc3MgPSBBcGhyb2RpdGUuY3NzLFxuICAgIG1pbmlmeSA9IEFwaHJvZGl0ZS5taW5pZnksXG4gICAgZmx1c2hUb1N0eWxlVGFnID0gQXBocm9kaXRlLmZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBBcGhyb2RpdGUuaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzID0gQXBocm9kaXRlLmRlZmF1bHRTZWxlY3RvckhhbmRsZXJzLFxuICAgIHJlc2V0ID0gQXBocm9kaXRlLnJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IEFwaHJvZGl0ZS5yZXNldEluamVjdGVkU3R5bGU7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlU2hlZXRTZXJ2ZXIsIFN0eWxlU2hlZXRUZXN0VXRpbHMsIGNzcywgbWluaWZ5LCBmbHVzaFRvU3R5bGVUYWcsIGluamVjdEFuZEdldENsYXNzTmFtZSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsIHJlc2V0LCByZXNldEluamVjdGVkU3R5bGUgfTtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gXCJhcGhyb2RpdGVcIjtcblxuY29uc3QgTm90aWZpY2F0aW9uSXRlbSA9IFJlYWN0Lm1lbW8oZnVuY3Rpb24gTm90aWZpY2F0aW9uSXRlbSh7XG4gIHR5cGUsXG4gIHZhbHVlLFxuICBodG1sLFxuICBtYXJrQXNSZWFkLFxuICBpZCxcbn0pIHtcbiAgbGV0IGxpc3RJdGVtO1xuXG4gIGxldCB0eXBlU3R5bGUgPSBjc3ModHlwZSA9PT0gXCJ1cmdlbnRcIiA/IHN0eWxlcy51cmdlbnQgOiBzdHlsZXMuZGVmYXVsdCk7XG5cbiAgaWYgKHZhbHVlKSB7XG4gICAgbGlzdEl0ZW0gPSAoXG4gICAgICA8bGlcbiAgICAgICAgY2xhc3NOYW1lPXt0eXBlU3R5bGV9XG4gICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IG1hcmtBc1JlYWQoaWQpfVxuICAgICAgPlxuICAgICAgICB7dmFsdWV9XG4gICAgICA8L2xpPlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgbGlzdEl0ZW0gPSAoXG4gICAgICA8bGlcbiAgICAgICAgY2xhc3NOYW1lPXt0eXBlU3R5bGV9XG4gICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XG4gICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXtodG1sfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBtYXJrQXNSZWFkKGlkKX1cbiAgICAgID48L2xpPlxuICAgICk7XG4gIH1cblxuICByZXR1cm4gbGlzdEl0ZW07XG59KTtcblxuTm90aWZpY2F0aW9uSXRlbS5kZWZhdWx0UHJvcHMgPSB7XG4gIHR5cGU6IFwiZGVmYXVsdFwiLFxuICB2YWx1ZTogXCJcIixcbiAgaHRtbDoge30sXG4gIG1hcmtBc1JlYWQ6ICgpID0+IHt9LFxuICBpZDogTmFOLFxufTtcblxuTm90aWZpY2F0aW9uSXRlbS5wcm9wVHlwZXMgPSB7XG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIF9faHRtbDogUHJvcFR5cGVzLnN0cmluZyxcbiAgfSksXG4gIG1hcmtBc1JlYWQ6IFByb3BUeXBlcy5mdW5jLFxuICBpZDogUHJvcFR5cGVzLm51bWJlcixcbn07XG5cbmNvbnN0IHNjcmVlblNpemUgPSB7XG4gIHNtYWxsOiBcIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDkwMHB4KVwiLFxufTtcblxuY29uc3QgbGlzdEl0ZW1TbWFsbCA9IHtcbiAgbGlzdFN0eWxlOiBcIm5vbmVcIixcbiAgYm9yZGVyQm90dG9tOiBcIjFweCBzb2xpZCBibGFja1wiLFxuICBwYWRkaW5nOiBcIjEwcHggOHB4XCIsXG4gIGZvbnRTaXplOiBcIjIwcHhcIixcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgZGVmYXVsdDoge1xuICAgIGNvbG9yOiBcImJsdWVcIixcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IGxpc3RJdGVtU21hbGwsXG4gIH0sXG5cbiAgdXJnZW50OiB7XG4gICAgY29sb3I6IFwicmVkXCIsXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiBsaXN0SXRlbVNtYWxsLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkl0ZW07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XG4gIGlkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGh0bWw6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB9KSxcbiAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtU2hhcGU7XG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZDM1OGJiMzVkYzAxMTY5NWI4NGNlNjdmOTIxNGMyYmYucG5nXCI7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW0gZnJvbSBcIi4vTm90aWZpY2F0aW9uSXRlbVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSBmcm9tIFwiLi9Ob3RpZmljYXRpb25JdGVtU2hhcGVcIjtcbmltcG9ydCBjbG9zZUljb24gZnJvbSBcIi4uL2Fzc2V0cy9jbG9zZS1pY29uLnBuZ1wiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuXG5jbGFzcyBOb3RpZmljYXRpb25zIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5tYXJrQXNSZWFkID0gdGhpcy5tYXJrQXNSZWFkLmJpbmQodGhpcyk7XG4gIH1cblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIG5leHRQcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPiB0aGlzLnByb3BzLmxpc3ROb3RpZmljYXRpb25zLmxlbmd0aFxuICAgICk7XG4gIH1cblxuICBtYXJrQXNSZWFkKGlkKSB7XG4gICAgY29uc29sZS5sb2coYE5vdGlmaWNhdGlvbiAke2lkfSBoYXMgYmVlbiBtYXJrZWQgYXMgcmVhZGApO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgZGlzcGxheURyYXdlciwgbGlzdE5vdGlmaWNhdGlvbnMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBjb25zdCBtZW51UFN0eWxlID0gY3NzKFxuICAgICAgZGlzcGxheURyYXdlciA/IHN0eWxlcy5tZW51SXRlbVBOb1Nob3cgOiBzdHlsZXMubWVudUl0ZW1QU2hvd1xuICAgICk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubWVudUl0ZW0pfSBpZD1cIm1lbnVJdGVtXCI+XG4gICAgICAgICAgPHAgY2xhc3NOYW1lPXttZW51UFN0eWxlfT5Zb3VyIG5vdGlmaWNhdGlvbnM8L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7ZGlzcGxheURyYXdlciAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubm90aWZpY2F0aW9ucyl9IGlkPVwiTm90aWZpY2F0aW9uc1wiPlxuICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDIwLFxuICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiY2xvc2VcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgc3JjPXtjbG9zZUljb259XG4gICAgICAgICAgICAgICAgYWx0PVwiY2xvc2UtaWNvblwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLm5vdGlmaWNhdGlvbnNCdXR0b25JbWFnZSl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ub3RpZmljYXRpb25zUCl9PlxuICAgICAgICAgICAgICBIZXJlIGlzIHRoZSBsaXN0IG9mIG5vdGlmaWNhdGlvbnNcbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9e2NzcyhzdHlsZXMubm90aWZpY2F0aW9uc1VMKX0+XG4gICAgICAgICAgICAgIHtsaXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPT09IDAgJiYgKFxuICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtIHZhbHVlPVwiTm8gbmV3IG5vdGlmaWNhdGlvbiBmb3Igbm93XCIgLz5cbiAgICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgICB7bGlzdE5vdGlmaWNhdGlvbnMubWFwKChub3RpZmljYXRpb24pID0+IChcbiAgICAgICAgICAgICAgICA8Tm90aWZpY2F0aW9uSXRlbVxuICAgICAgICAgICAgICAgICAga2V5PXtub3RpZmljYXRpb24uaWR9XG4gICAgICAgICAgICAgICAgICBpZD17bm90aWZpY2F0aW9uLmlkfVxuICAgICAgICAgICAgICAgICAgdHlwZT17bm90aWZpY2F0aW9uLnR5cGV9XG4gICAgICAgICAgICAgICAgICB2YWx1ZT17bm90aWZpY2F0aW9uLnZhbHVlfVxuICAgICAgICAgICAgICAgICAgaHRtbD17bm90aWZpY2F0aW9uLmh0bWx9XG4gICAgICAgICAgICAgICAgICBtYXJrQXNSZWFkPXt0aGlzLm1hcmtBc1JlYWR9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApfVxuICAgICAgPC8+XG4gICAgKTtcbiAgfVxufVxuXG5Ob3RpZmljYXRpb25zLmRlZmF1bHRQcm9wcyA9IHtcbiAgZGlzcGxheURyYXdlcjogZmFsc2UsXG4gIGxpc3ROb3RpZmljYXRpb25zOiBbXSxcbn07XG5cbk5vdGlmaWNhdGlvbnMucHJvcFR5cGVzID0ge1xuICBkaXNwbGF5RHJhd2VyOiBQcm9wVHlwZXMuYm9vbCxcbiAgbGlzdE5vdGlmaWNhdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSksXG59O1xuXG5jb25zdCBjc3NWYXJzID0ge1xuICBtYWluQ29sb3I6IFwiI2UwMWQzZlwiLFxufTtcblxuY29uc3Qgc2NyZWVuU2l6ZSA9IHtcbiAgc21hbGw6IFwiQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpXCIsXG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIG1lbnVJdGVtOiB7XG4gICAgdGV4dEFsaWduOiBcInJpZ2h0XCIsXG4gIH0sXG5cbiAgbWVudUl0ZW1QTm9TaG93OiB7XG4gICAgbWFyZ2luUmlnaHQ6IFwiOHB4XCIsXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiB7XG4gICAgICBkaXNwbGF5OiBcIm5vbmVcIixcbiAgICB9LFxuICB9LFxuXG4gIG1lbnVJdGVtUFNob3c6IHtcbiAgICBtYXJnaW5SaWdodDogXCI4cHhcIixcbiAgfSxcblxuICBub3RpZmljYXRpb25zOiB7XG4gICAgZmxvYXQ6IFwicmlnaHRcIixcbiAgICBib3JkZXI6IGAzcHggZGFzaGVkICR7Y3NzVmFycy5tYWluQ29sb3J9YCxcbiAgICBwYWRkaW5nOiBcIjEwcHhcIixcbiAgICBtYXJnaW5Cb3R0b206IFwiMjBweFwiLFxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xuICAgICAgZmxvYXQ6IFwibm9uZVwiLFxuICAgICAgYm9yZGVyOiBcIm5vbmVcIixcbiAgICAgIGxpc3RTdHlsZTogXCJub25lXCIsXG4gICAgICBwYWRkaW5nOiAwLFxuICAgICAgZm9udFNpemU6IFwiMjBweFwiLFxuICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgIGJhY2tncm91bmQ6IFwid2hpdGVcIixcbiAgICAgIGhlaWdodDogXCIxMTB2aFwiLFxuICAgICAgd2lkdGg6IFwiMTAwdndcIixcbiAgICB9LFxuICB9LFxuXG4gIG5vdGlmaWNhdGlvbnNCdXR0b25JbWFnZToge1xuICAgIHdpZHRoOiBcIjEwcHhcIixcbiAgfSxcblxuICBub3RpZmljYXRpb25zUDoge1xuICAgIG1hcmdpbjogMCxcbiAgICBtYXJnaW5Ub3A6IFwiMTVweFwiLFxuICB9LFxuXG4gIG5vdGlmaWNhdGlvbnNVTDoge1xuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xuICAgICAgcGFkZGluZzogMCxcbiAgICB9LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbnM7XG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMjRiYWI1ZDYzM2UzNmNhOGQxN2VkYzYzMTY0Y2Y5MzQuanBnXCI7IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IGhvbGJlcnRvbl9sb2dvIGZyb20gXCIuLi9hc3NldHMvaG9sYmVydG9uX2xvZ28uanBnXCI7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tIFwiYXBocm9kaXRlXCI7XG5cbmZ1bmN0aW9uIEhlYWRlcigpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXIpfT5cbiAgICAgIDxpbWcgc3JjPXtob2xiZXJ0b25fbG9nb30gY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmhlYWRlckltZyl9IC8+XG4gICAgICA8aDE+U2Nob29sIGRhc2hib2FyZDwvaDE+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmNvbnN0IGNzc1ZhcnMgPSB7XG4gIG1haW5Db2xvcjogXCIjZTAxZDNmXCIsXG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGhlYWRlcjoge1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgY29sb3I6IGNzc1ZhcnMubWFpbkNvbG9yLFxuICAgIGZvbnRTaXplOiBcIjIwcHhcIixcbiAgfSxcblxuICBoZWFkZXJJbWc6IHtcbiAgICB3aWR0aDogXCIyMDBweFwiLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gXCJhcGhyb2RpdGVcIjtcblxuY2xhc3MgQm9keVNlY3Rpb24gZXh0ZW5kcyBDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoaWxkcmVuLCB0aXRsZSB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYm9keVNlY3Rpb24pfT5cbiAgICAgICAgPGgyIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ib2R5U2VjdGlvbkgyKX0+e3RpdGxlfTwvaDI+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuQm9keVNlY3Rpb24uZGVmYXVsdFByb3BzID0ge1xuICB0aXRsZTogXCJcIixcbn07XG5cbkJvZHlTZWN0aW9uLnByb3BUeXBlcyA9IHtcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5jb25zdCBzY3JlZW5TaXplID0ge1xuICBzbWFsbDogXCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweClcIixcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgYm9keVNlY3Rpb246IHtcbiAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICBmbGV4V3JhcDogXCJ3cmFwXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xuICAgICAgYm94U2l6aW5nOiBcImJvcmRlci1ib3hcIixcbiAgICAgIHBhZGRpbmdMZWZ0OiBcIjUwcHhcIixcbiAgICAgIHBhZGRpbmdSaWdodDogXCI1MHB4XCIsXG4gICAgICBwYWRkaW5nQm90dG9tOiBcIjIwcHhcIixcbiAgICB9LFxuICB9LFxuXG4gIGJvZHlTZWN0aW9uSDI6IHtcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb247IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gXCIuL0JvZHlTZWN0aW9uXCI7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tIFwiYXBocm9kaXRlXCI7XG5cbmNsYXNzIEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ib2R5U2VjdGlvbldpdGhNYXJnaW4pfT5cbiAgICAgICAgPEJvZHlTZWN0aW9uIHsuLi50aGlzLnByb3BzfSAvPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uZGVmYXVsdFByb3BzID0ge1xuICB0aXRsZTogXCJcIixcbn07XG5cbkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5wcm9wVHlwZXMgPSB7XG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBib2R5U2VjdGlvbldpdGhNYXJnaW46IHtcbiAgICBtYXJnaW5Cb3R0b206IFwiNDBweFwiLFxuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b207IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSBcImFwaHJvZGl0ZVwiO1xuXG5mdW5jdGlvbiBMb2dpbigpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dpbil9PlxuICAgICAgPHA+TG9naW4gdG8gYWNjZXNzIHRoZSBmdWxsIGRhc2hib2FyZDwvcD5cbiAgICAgIDxsYWJlbCBodG1sRm9yPVwiZW1haWxcIj5FbWFpbDo8L2xhYmVsPlxuICAgICAgPGlucHV0IHR5cGU9XCJlbWFpbFwiIGlkPVwiZW1haWxcIiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubG9naW5JbnB1dCl9IC8+XG4gICAgICA8bGFiZWwgaHRtbEZvcj1cInBhc3N3b3JkXCI+UGFzc3dvcmQ6PC9sYWJlbD5cbiAgICAgIDxpbnB1dCB0eXBlPVwicGFzc3dvcmRcIiBpZD1cInBhc3N3b3JkXCIgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmxvZ2luSW5wdXQpfSAvPlxuICAgICAgPGJ1dHRvbj5PSzwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5jb25zdCBzY3JlZW5TaXplID0ge1xuICBzbWFsbDogXCJAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweClcIixcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgbG9naW46IHtcbiAgICBtYXJnaW46IFwiNTBweFwiLFxuICAgIGZsZXhHcm93OiAxLFxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xuICAgICAgbWFyZ2luVG9wOiBcIjEwcHhcIixcbiAgICAgIG1hcmdpbkxlZnQ6IDAsXG4gICAgICBtYXJnaW5SaWdodDogMCxcbiAgICAgIG1hcmdpbkJvdHRvbTogMCxcbiAgICB9LFxuICB9LFxuXG4gIGxvZ2luSW5wdXQ6IHtcbiAgICBtYXJnaW5MZWZ0OiBcIjEwcHhcIixcbiAgICBtYXJnaW5SaWdodDogXCIyMHB4XCIsXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiB7XG4gICAgICBkaXNwbGF5OiBcImJsb2NrXCIsXG4gICAgICBtYXJnaW5MZWZ0OiAwLFxuICAgICAgbWFyZ2luVG9wOiBcIjEwcHhcIixcbiAgICAgIG1hcmdpbkJvdHRvbTogXCIxMHB4XCIsXG4gICAgfSxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcbiIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gXCJhcGhyb2RpdGVcIjtcblxuY29uc3Qgcm93U3R5bGVzID0geyBiYWNrZ3JvdW5kQ29sb3I6IFwiI2Y1ZjVmNWFiXCIgfTtcbmNvbnN0IGhlYWRlclJvd1N0eWxlcyA9IHsgYmFja2dyb3VuZENvbG9yOiBcIiNkZWI1YjU0NVwiIH07XG5cbmZ1bmN0aW9uIENvdXJzZUxpc3RSb3coeyBpc0hlYWRlciwgdGV4dEZpcnN0Q2VsbCwgdGV4dFNlY29uZENlbGwgfSkge1xuICBsZXQgZWxlbWVudDtcblxuICBjb25zdCB0YWJsZUl0ZW1TdHlsZSA9IGNzcyhcbiAgICBpc0hlYWRlciA/IHN0eWxlcy5Db3Vyc2VMaXN0VGggOiBzdHlsZXMuQ291cnNlTGlzdFRkXG4gICk7XG5cbiAgaWYgKGlzSGVhZGVyID09PSB0cnVlKSB7XG4gICAgLy9cbiAgICBpZiAodGV4dFNlY29uZENlbGwgPT09IG51bGwpIHtcbiAgICAgIGVsZW1lbnQgPSAoXG4gICAgICAgIDx0aCBjb2xTcGFuPVwiMlwiIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5Db3Vyc2VMaXN0VGhTcGFuMil9PlxuICAgICAgICAgIHt0ZXh0Rmlyc3RDZWxsfVxuICAgICAgICA8L3RoPlxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWxlbWVudCA9IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8dGggY2xhc3NOYW1lPXt0YWJsZUl0ZW1TdHlsZX0+e3RleHRGaXJzdENlbGx9PC90aD5cbiAgICAgICAgICA8dGggY2xhc3NOYW1lPXt0YWJsZUl0ZW1TdHlsZX0+e3RleHRTZWNvbmRDZWxsfTwvdGg+XG4gICAgICAgIDwvPlxuICAgICAgKTtcbiAgICB9XG4gICAgLy9cbiAgfSBlbHNlIGlmIChpc0hlYWRlciA9PT0gZmFsc2UpIHtcbiAgICBlbGVtZW50ID0gKFxuICAgICAgPD5cbiAgICAgICAgPHRkIGNsYXNzTmFtZT17dGFibGVJdGVtU3R5bGV9Pnt0ZXh0Rmlyc3RDZWxsfTwvdGQ+XG4gICAgICAgIDx0ZCBjbGFzc05hbWU9e3RhYmxlSXRlbVN0eWxlfT57dGV4dFNlY29uZENlbGx9PC90ZD5cbiAgICAgIDwvPlxuICAgICk7XG4gIH1cblxuICBsZXQgaXNIZWFkZXJTdHlsZTtcblxuICBpZiAoaXNIZWFkZXIpIGlzSGVhZGVyU3R5bGUgPSBoZWFkZXJSb3dTdHlsZXM7XG4gIGVsc2UgaXNIZWFkZXJTdHlsZSA9IHJvd1N0eWxlcztcblxuICByZXR1cm4gPHRyIHN0eWxlPXtpc0hlYWRlclN0eWxlfT57ZWxlbWVudH08L3RyPjtcbn1cblxuQ291cnNlTGlzdFJvdy5kZWZhdWx0UHJvcHMgPSB7XG4gIGlzSGVhZGVyOiBmYWxzZSxcbiAgdGV4dFNlY29uZENlbGw6IG51bGwsXG59O1xuXG5Db3Vyc2VMaXN0Um93LnByb3BUeXBlcyA9IHtcbiAgaXNIZWFkZXI6IFByb3BUeXBlcy5ib29sLFxuICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIHRleHRTZWNvbmRDZWxsOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSksXG59O1xuXG5jb25zdCBjc3NWYXJzID0ge1xuICBib3JkZXJUYWJsZUNvbG9yOiBcInJnYigxNzAsIDE3MCwgMTcwKTtcIixcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgQ291cnNlTGlzdFRoOiB7XG4gICAgYm9yZGVyVG9wOiBgMXB4IHNvbGlkICR7Y3NzVmFycy5ib3JkZXJUYWJsZUNvbG9yfWAsXG4gICAgYm9yZGVyQm90dG9tOiBgMXB4IHNvbGlkICR7Y3NzVmFycy5ib3JkZXJUYWJsZUNvbG9yfWAsXG4gICAgdGV4dEFsaWduOiBcImxlZnRcIixcbiAgICBmb250U2l6ZTogXCIxOHB4XCIsXG4gIH0sXG5cbiAgQ291cnNlTGlzdFRoU3BhbjI6IHtcbiAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gIH0sXG5cbiAgQ291cnNlTGlzdFRkOiB7XG4gICAgdGV4dEFsaWduOiBcImxlZnRcIixcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VMaXN0Um93O1xuIiwiaW1wb3J0IHByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5jb25zdCBDb3Vyc2VTaGFwZSA9IHByb3BUeXBlcy5zaGFwZSh7XG4gIGlkOiBwcm9wVHlwZXMubnVtYmVyLFxuICBuYW1lOiBwcm9wVHlwZXMuc3RyaW5nLFxuICBjcmVkaXQ6IHByb3BUeXBlcy5udW1iZXIsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgQ291cnNlU2hhcGU7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQ291cnNlTGlzdFJvdyBmcm9tIFwiLi9Db3Vyc2VMaXN0Um93XCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgQ291cnNlU2hhcGUgZnJvbSBcIi4vQ291cnNlU2hhcGVcIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gXCJhcGhyb2RpdGVcIjtcblxuZnVuY3Rpb24gQ291cnNlTGlzdCh7IGxpc3RDb3Vyc2VzIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8dGFibGUgaWQ9XCJDb3Vyc2VMaXN0XCIgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmxpc3QpfT5cbiAgICAgIDx0aGVhZD5cbiAgICAgICAgPENvdXJzZUxpc3RSb3cgdGV4dEZpcnN0Q2VsbD1cIkF2YWlsYWJsZSBjb3Vyc2VzXCIgaXNIZWFkZXI9e3RydWV9IC8+XG4gICAgICAgIDxDb3Vyc2VMaXN0Um93XG4gICAgICAgICAgdGV4dEZpcnN0Q2VsbD1cIkNvdXJzZSBuYW1lXCJcbiAgICAgICAgICB0ZXh0U2Vjb25kQ2VsbD1cIkNyZWRpdFwiXG4gICAgICAgICAgaXNIZWFkZXI9e3RydWV9XG4gICAgICAgIC8+XG4gICAgICA8L3RoZWFkPlxuICAgICAgPHRib2R5PlxuICAgICAgICB7bGlzdENvdXJzZXMubGVuZ3RoID09PSAwICYmIChcbiAgICAgICAgICA8Q291cnNlTGlzdFJvd1xuICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD1cIk5vIGNvdXJzZSBhdmFpbGFibGUgeWV0XCJcbiAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cbiAgICAgICAgICAvPlxuICAgICAgICApfVxuXG4gICAgICAgIHtsaXN0Q291cnNlcy5tYXAoKGNvdXJzZSkgPT4gKFxuICAgICAgICAgIDxDb3Vyc2VMaXN0Um93XG4gICAgICAgICAgICBrZXk9e2NvdXJzZS5pZH1cbiAgICAgICAgICAgIHRleHRGaXJzdENlbGw9e2NvdXJzZS5uYW1lfVxuICAgICAgICAgICAgdGV4dFNlY29uZENlbGw9e2NvdXJzZS5jcmVkaXR9XG4gICAgICAgICAgICBpc0hlYWRlcj17ZmFsc2V9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSl9XG4gICAgICA8L3Rib2R5PlxuICAgIDwvdGFibGU+XG4gICk7XG59XG5cbkNvdXJzZUxpc3QuZGVmYXVsdFByb3BzID0ge1xuICBsaXN0Q291cnNlczogW10sXG59O1xuXG5Db3Vyc2VMaXN0LnByb3BUeXBlcyA9IHtcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcbn07XG5cbmNvbnN0IGNzc1ZhcnMgPSB7XG4gIGJvcmRlclRhYmxlQ29sb3I6IFwicmdiKDE3MCwgMTcwLCAxNzApO1wiLFxufTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBsaXN0OiB7XG4gICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7Y3NzVmFycy5ib3JkZXJUYWJsZUNvbG9yfWAsXG4gICAgYm9yZGVyQ29sbGFwc2U6IFwiY29sbGFwc2VcIixcbiAgICB3aWR0aDogXCI5NSVcIixcbiAgICBtYXJnaW46IFwiNDBweCBhdXRvIDAgYXV0b1wiLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENvdXJzZUxpc3Q7IiwiaW1wb3J0IGFwaSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgICAgICAgaW1wb3J0IGNvbnRlbnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Gb290ZXIuY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFwiLi9Gb290ZXIuY3NzXCI7XG5pbXBvcnQgeyBnZXRGdWxsWWVhciwgZ2V0Rm9vdGVyQ29weSB9IGZyb20gXCIuLi91dGlscy91dGlsc1wiO1xuXG5mdW5jdGlvbiBGb290ZXIoKSB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZm9vdGVyXCI+XG4gICAgICAgIDxwPlxuICAgICAgICAgIENvcHlyaWdodCB7Z2V0RnVsbFllYXIoKX0gLSB7Z2V0Rm9vdGVyQ29weSh0cnVlKX1cbiAgICAgICAgPC9wPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjtcbiIsImV4cG9ydCBmdW5jdGlvbiBnZXRGdWxsWWVhcigpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEZvb3RlckNvcHkoaXNJbmRleCkge1xuICBsZXQgbXNnO1xuXG4gIGlmIChpc0luZGV4KSB7XG4gICAgbXNnID0gXCJIb2xiZXJ0b24gU2Nob29sXCI7XG4gIH0gZWxzZSB7XG4gICAgbXNnID0gXCJIb2xiZXJ0b24gU2Nob29sIG1haW4gZGFzaGJvYXJkXCI7XG4gIH1cblxuICByZXR1cm4gbXNnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkge1xuICByZXR1cm4gXCI8c3Ryb25nPlVyZ2VudCByZXF1aXJlbWVudDwvc3Ryb25nPiAtIGNvbXBsZXRlIGJ5IEVPRFwiO1xufVxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IE5vdGlmaWNhdGlvbnMgZnJvbSBcIi4uL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9uc1wiO1xuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi4vSGVhZGVyL0hlYWRlclwiO1xuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gXCIuLi9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvblwiO1xuaW1wb3J0IEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSBmcm9tIFwiLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tXCI7XG5pbXBvcnQgTG9naW4gZnJvbSBcIi4uL0xvZ2luL0xvZ2luXCI7XG5pbXBvcnQgQ291cnNlTGlzdCBmcm9tIFwiLi4vQ291cnNlTGlzdC9Db3Vyc2VMaXN0XCI7XG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuLi9Gb290ZXIvRm9vdGVyXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5pbXBvcnQgeyBnZXRMYXRlc3ROb3RpZmljYXRpb24gfSBmcm9tIFwiLi4vdXRpbHMvdXRpbHNcIjtcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gXCJhcGhyb2RpdGVcIjtcblxuY29uc3QgbGlzdENvdXJzZXMgPSBbXG4gIHsgaWQ6IDEsIG5hbWU6IFwiRVM2XCIsIGNyZWRpdDogNjAgfSxcbiAgeyBpZDogMiwgbmFtZTogXCJXZWJwYWNrXCIsIGNyZWRpdDogMjAgfSxcbiAgeyBpZDogMywgbmFtZTogXCJSZWFjdFwiLCBjcmVkaXQ6IDQwIH0sXG5dO1xuXG5jb25zdCBsaXN0Tm90aWZpY2F0aW9ucyA9IFtcbiAgeyBpZDogMSwgdHlwZTogXCJkZWZhdWx0XCIsIHZhbHVlOiBcIk5ldyBjb3Vyc2UgYXZhaWxhYmxlXCIgfSxcbiAgeyBpZDogMiwgdHlwZTogXCJ1cmdlbnRcIiwgdmFsdWU6IFwiTmV3IHJlc3VtZSBhdmFpbGFibGVcIiB9LFxuICB7IGlkOiAzLCB0eXBlOiBcInVyZ2VudFwiLCBodG1sOiB7IF9faHRtbDogZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkgfSB9LFxuXTtcblxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVLZXlDb21iaW5hdGlvbiA9IHRoaXMuaGFuZGxlS2V5Q29tYmluYXRpb24uYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhhbmRsZUtleUNvbWJpbmF0aW9uKGUpIHtcbiAgICBpZiAoZS5rZXkgPT09IFwiaFwiICYmIGUuY3RybEtleSkge1xuICAgICAgYWxlcnQoXCJMb2dnaW5nIHlvdSBvdXRcIik7XG4gICAgICB0aGlzLnByb3BzLmxvZ091dCgpO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuaGFuZGxlS2V5Q29tYmluYXRpb24pO1xuICB9XG5cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5oYW5kbGVLZXlDb21iaW5hdGlvbik7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBpc0xvZ2dlZEluLCBsb2dPdXQgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDw+XG4gICAgICAgIDxOb3RpZmljYXRpb25zIGxpc3ROb3RpZmljYXRpb25zPXtsaXN0Tm90aWZpY2F0aW9uc30gLz5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYXBwKX0+XG4gICAgICAgICAgPEhlYWRlciAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYm9keSl9PlxuICAgICAgICAgIHshaXNMb2dnZWRJbiA/IChcbiAgICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9XCJMb2cgaW4gdG8gY29udGludWVcIj5cbiAgICAgICAgICAgICAgPExvZ2luIC8+XG4gICAgICAgICAgICA8L0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbT5cbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSB0aXRsZT1cIkNvdXJzZSBsaXN0XCI+XG4gICAgICAgICAgICAgIDxDb3Vyc2VMaXN0IGxpc3RDb3Vyc2VzPXtsaXN0Q291cnNlc30gLz5cbiAgICAgICAgICAgIDwvQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9XCJOZXdzIGZyb20gdGhlIFNjaG9vbFwiPlxuICAgICAgICAgIDxwPlNvbWUgUmFuZG9tIFRleHQ8L3A+XG4gICAgICAgIDwvQm9keVNlY3Rpb24+XG5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuZm9vdGVyKX0+XG4gICAgICAgICAgPEZvb3RlciAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH1cbn1cblxuQXBwLmRlZmF1bHRQcm9wcyA9IHtcbiAgaXNMb2dnZWRJbjogZmFsc2UsXG4gIGxvZ091dDogKCkgPT4ge30sXG59O1xuXG5BcHAucHJvcFR5cGVzID0ge1xuICBpc0xvZ2dlZEluOiBQcm9wVHlwZXMuYm9vbCxcbiAgbG9nT3V0OiBQcm9wVHlwZXMuZnVuYyxcbn07XG5cbmNvbnN0IGNzc1ZhcnMgPSB7XG4gIG1haW5Db2xvcjogXCIjZTAxZDNmXCIsXG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGFwcDoge1xuICAgIGJvcmRlckJvdHRvbTogYDNweCBzb2xpZCAke2Nzc1ZhcnMubWFpbkNvbG9yfWAsXG4gIH0sXG5cbiAgYm9keToge1xuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICB9LFxuXG4gIGZvb3Rlcjoge1xuICAgIGJvcmRlclRvcDogYDNweCBzb2xpZCAke2Nzc1ZhcnMubWFpbkNvbG9yfWAsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIGRpc3BsYXk6IFwiZmxleFwiLFxuICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgYm90dG9tOiAwLFxuICAgIGZvbnRTdHlsZTogXCJpdGFsaWNcIixcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xuaW1wb3J0IEFwcCBmcm9tIFwiLi9BcHAvQXBwXCI7XG5cblxuUmVhY3RET00ucmVuZGVyKFxuICA8UmVhY3QuU3RyaWN0TW9kZT5cbiAgICA8QXBwIC8+XG4gIDwvUmVhY3QuU3RyaWN0TW9kZT4sXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicm9vdFwiKVxuKTtcbiJdLCJuYW1lcyI6WyJyYXdBc2FwIiwiZnJlZVRhc2tzIiwicGVuZGluZ0Vycm9ycyIsInJlcXVlc3RFcnJvclRocm93IiwibWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyIiwibGVuZ3RoIiwic2hpZnQiLCJhc2FwIiwidGFzayIsInJhd1Rhc2siLCJwb3AiLCJSYXdUYXNrIiwidGhpcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjYWxsIiwiZXJyb3IiLCJvbmVycm9yIiwicHVzaCIsInF1ZXVlIiwicmVxdWVzdEZsdXNoIiwiaW5kZXgiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaWQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjb25jYXQiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYVF1ZXJ5IiwiZGVkdXBlIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsIl9pIiwiX2FycmF5TGlrZVRvQXJyYXkiLCJhcnIiLCJsZW4iLCJhcnIyIiwiQXJyYXkiLCJfaXRlbSIsImlzQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9zIiwiX2UiLCJfYXJyIiwiX24iLCJfZCIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJlcnIiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJvIiwibWluTGVuIiwibiIsIk9iamVjdCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJUeXBlRXJyb3IiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsImFzc2lnbiIsInRlc3QxIiwiU3RyaW5nIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsInRlc3QyIiwiZnJvbUNoYXJDb2RlIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJrZXlzIiwic2hvdWxkVXNlTmF0aXZlIiwidGFyZ2V0Iiwic3ltYm9scyIsInRvIiwicyIsImFyZ3VtZW50cyIsImtleSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiRXJyb3IiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJiaWdpbnQiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwiciIsInUiLCJhIiwiYiIsImMiLCJiYSIsImQiLCJlIiwiZiIsImgiLCJrIiwibCIsImFwcGx5IiwibSIsIm9uRXJyb3IiLCJkYSIsImVhIiwiZmEiLCJoYSIsImlhIiwiamEiLCJsYSIsIm1hIiwibmEiLCJvYSIsInR5cGUiLCJjdXJyZW50VGFyZ2V0Iiwia2EiLCJwYSIsInFhIiwicmEiLCJpbmRleE9mIiwic2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInRhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJ1YSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJ2YSIsIndhIiwiZGVwZW5kZW5jaWVzIiwieGEiLCJ5YSIsIndpbmRvdyIsImNyZWF0ZUVsZW1lbnQiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsInN0YXRlTm9kZSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsIk1hIiwiTmEiLCJPYSIsIlBhIiwiUWEiLCJ2IiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwiQyIsInRvTG93ZXJDYXNlIiwiVWEiLCJWYSIsInRvVXBwZXJDYXNlIiwicmVwbGFjZSIsInhsaW5rSHJlZiIsIldhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJYYSIsIlNhIiwiaXNOYU4iLCJUYSIsIlJhIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiY3VycmVudCIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJZYSIsIkUiLCJmb3IiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwibWIiLCJuYiIsInBiIiwiZGlzcGxheU5hbWUiLCIkJHR5cGVvZiIsInJlbmRlciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwicWIiLCJ0YWciLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsInJldHVybiIsInJiIiwic2IiLCJub2RlTmFtZSIsInhiIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldCIsInNldCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJ0YiIsInliIiwiY2hlY2tlZCIsInpiIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJBYiIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2IiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiRmIiLCJIYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiSWIiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIkpiIiwiS2IiLCJMYiIsInRleHRDb250ZW50IiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiYXBwZW5kQ2hpbGQiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwiUmIiLCJsYXN0Q2hpbGQiLCJub2RlVHlwZSIsIm5vZGVWYWx1ZSIsIlNiIiwiVGIiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYiIsIlZiIiwiV2IiLCJzdHlsZSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwiY2hpbGQiLCJzaWJsaW5nIiwiZ2MiLCJpYyIsImpjIiwia2MiLCJsYyIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIm1jIiwibmMiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwib2MiLCJwYyIsInFjIiwidG9wTGV2ZWxUeXBlIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwicmMiLCJldmVudFN5c3RlbUZsYWdzIiwic2MiLCJjb250YWluZXJJbmZvIiwidGMiLCJ1YyIsImhhcyIsInZjIiwiRiIsIndjIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJCYyIsIkNjIiwiRGMiLCJFYyIsIkZjIiwiR2MiLCJIYyIsIkljIiwiS2MiLCJibG9ja2VkT24iLCJjb250YWluZXIiLCJMYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIk1jIiwiTmMiLCJQYyIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsIlFjIiwiUmMiLCJTYyIsIlRjIiwiVWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJWYyIsIldjIiwiWWMiLCJaYyIsIiRjIiwiYWQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJldmVudFByaW9yaXR5IiwiYmQiLCJjZCIsImRkIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJlZCIsImZkIiwiZ2QiLCJiaW5kIiwiaGQiLCJhZGRFdmVudExpc3RlbmVyIiwiT2MiLCJqZCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwia2QiLCJsZCIsInRyaW0iLCJtZCIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwibmQiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJvZCIsInBkIiwiaXMiLCJxZCIsInJkIiwic2QiLCJ0ZCIsImJvZHkiLCJ1ZCIsInZkIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJ3ZCIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJ4ZCIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsImhyZWYiLCJ5ZCIsImNvbnRlbnRFZGl0YWJsZSIsIkJkIiwiQ2QiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIl9faHRtbCIsIkhkIiwiSWQiLCJKZCIsIktkIiwicHJldmlvdXNTaWJsaW5nIiwiTGQiLCJNYXRoIiwicmFuZG9tIiwiTWQiLCJOZCIsIk9kIiwiUGQiLCJRZCIsIlJkIiwiU2QiLCJUZCIsImRpc3BhdGNoQ29uZmlnIiwiVWQiLCJfdGFyZ2V0SW5zdCIsIlZkIiwiV2QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJjZSIsIkciLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJlZSIsImV2ZW50UG9vbCIsImZlIiwiZGVzdHJ1Y3RvciIsImRlIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImdlIiwiaGUiLCJpZSIsImplIiwia2UiLCJkb2N1bWVudE1vZGUiLCJsZSIsIm1lIiwibmUiLCJvZSIsImJlZm9yZUlucHV0IiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJwZSIsInFlIiwia2V5Q29kZSIsInJlIiwiZGV0YWlsIiwic2UiLCJ2ZSIsImxvY2FsZSIsIndoaWNoIiwidGUiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJ1ZSIsIndlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsInhlIiwieWUiLCJjaGFuZ2UiLCJ6ZSIsIkFlIiwiQmUiLCJDZSIsIkRlIiwiRWUiLCJGZSIsIkdlIiwiZGV0YWNoRXZlbnQiLCJIZSIsIkllIiwiYXR0YWNoRXZlbnQiLCJKZSIsIktlIiwiTGUiLCJNZSIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJOZSIsInZpZXciLCJPZSIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZSIsImdldE1vZGlmaWVyU3RhdGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIldlIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiWGUiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsIlllIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJwIiwiJGUiLCJhZiIsImJmIiwiY2YiLCJkZiIsInNlbGVjdCIsImVmIiwiZmYiLCJnZiIsImhmIiwiamYiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwib2YiLCJjaGFyQ29kZSIsInBmIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInFmIiwicmYiLCJyZXBlYXQiLCJzZiIsImRhdGFUcmFuc2ZlciIsInRmIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInVmIiwidmYiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIndmIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsInlmIiwiemYiLCJIIiwiSSIsIkFmIiwiSiIsIksiLCJCZiIsIkNmIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiTCIsImNoaWxkQ29udGV4dFR5cGVzIiwiRGYiLCJFZiIsIkZmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiR2YiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIkhmIiwiSWYiLCJKZiIsIktmIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJMZiIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIk1mIiwidW5zdGFibGVfbm93IiwiTmYiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsIk9mIiwidW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHkiLCJQZiIsIlFmIiwiUmYiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsIlNmIiwidW5zdGFibGVfSWRsZVByaW9yaXR5IiwiVGYiLCJVZiIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiZGVmYXVsdFByb3BzIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwiX2NvbnRleHQiLCJfY3VycmVudFZhbHVlIiwicGciLCJjaGlsZEV4cGlyYXRpb25UaW1lIiwicWciLCJmaXJzdENvbnRleHQiLCJleHBpcmF0aW9uVGltZSIsInJnIiwic2ciLCJjb250ZXh0Iiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsInhnIiwieWciLCJ6ZyIsIngiLCJ6IiwiY2EiLCJBZyIsIkQiLCJ0IiwiQmciLCJDZyIsIkRnIiwiRWciLCJDb21wb25lbnQiLCJyZWZzIiwiRmciLCJKZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJHZyIsIkhnIiwiSWciLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiS2ciLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkxnIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJNZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk5nIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsIm1vZGUiLCJVZyIsImltcGxlbWVudGF0aW9uIiwiVmciLCJXZyIsInkiLCJBIiwicSIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiZWgiLCJmaCIsImdoIiwiTSIsImhoIiwibWVtb2l6ZWRQcm9wcyIsInJldmVhbE9yZGVyIiwiaWgiLCJyZXNwb25kZXIiLCJqaCIsImtoIiwibGgiLCJOIiwiTyIsIlAiLCJtaCIsIlEiLCJuaCIsIm9oIiwicGgiLCJxaCIsInJoIiwic2giLCJ0aCIsInVoIiwidmgiLCJ3aCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsInhoIiwieWgiLCJ6aCIsIkFoIiwiY3JlYXRlIiwiZGVzdHJveSIsImRlcHMiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTWgiLCJOaCIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlUmVzcG9uZGVyIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJwZW5kaW5nUHJvcHMiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiUmVhY3RDdXJyZW50T3duZXIiLCJSIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjb21wYXJlIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJnaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsImxhc3QiLCJ0YWlsIiwidGFpbEV4cGlyYXRpb24iLCJ0YWlsTW9kZSIsIm1pIiwicmkiLCJzaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJTIiwidGkiLCJ1aSIsInZpIiwid2kiLCJUIiwieGkiLCJVIiwieWkiLCJ6aSIsIkFpIiwic3RhY2siLCJCaSIsIldlYWtTZXQiLCJTZXQiLCJDaSIsImNvbnNvbGUiLCJGaSIsIkVpIiwiR2kiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIkhpIiwiSWkiLCJKaSIsImZvY3VzIiwiS2kiLCJMaSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiRGkiLCJNaSIsIk5pIiwiT2kiLCJQaSIsIlFpIiwiUmkiLCJpbnN0YW5jZSIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJTaSIsIlRpIiwiZGlzcGxheSIsIlVpIiwiVmkiLCJhZGQiLCJ0aGVuIiwiV2kiLCJYaSIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjZWlsIiwiY2oiLCJkaiIsIlciLCJYIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsIlkiLCJxaiIsInJqIiwic2oiLCJ0aiIsInVqIiwidmoiLCJ3aiIsInRpbWVvdXRNcyIsInhqIiwieWoiLCJaIiwiemoiLCJsYXN0RXhwaXJlZFRpbWUiLCJBaiIsImZpcnN0UGVuZGluZ1RpbWUiLCJsYXN0UGluZ2VkVGltZSIsIm5leHRLbm93blBlbmRpbmdMZXZlbCIsImNhbGxiYWNrRXhwaXJhdGlvblRpbWUiLCJjYWxsYmFja1ByaW9yaXR5IiwiY2FsbGJhY2tOb2RlIiwiQmoiLCJ0aW1lb3V0IiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJKaiIsImJ1c3lNaW5EdXJhdGlvbk1zIiwiYnVzeURlbGF5TXMiLCJLaiIsIk1qIiwiTmoiLCJwaW5nQ2FjaGUiLCJPaiIsInciLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwiQiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwidmIiLCJVaiIsIlZqIiwiV2oiLCJoaWRkZW4iLCJfY3RvciIsImRlZmF1bHQiLCJvYiIsIlhqIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiWmoiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhhc0F0dHJpYnV0ZSIsImhrIiwiamsiLCJrayIsInVubW91bnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIkxqIiwibGsiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIllqIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZVByb3BzIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJjcmVhdGVQb3J0YWwiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2NyZWF0ZVBvcnRhbCIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJjb3VudCIsIlYiLCJlc2NhcGUiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsInRvQXJyYXkiLCJvbmx5IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInBlcmZvcm1hbmNlIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbG9vciIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJzdHIiLCJoYXNoIiwiY2hhckNvZGVBdCIsImdldFRhcmdldCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwiaW5zZXJ0IiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsImFwcGx5VG9UYWciLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImFsbCIsImF0b2IiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3BsaWNlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkZWZpbml0aW9uIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiX3R5cGVvZiIsIl9kZWZpbmVQcm9wZXJ0eSIsIndyaXRhYmxlIiwiX29iamVjdFNwcmVhZCIsIm93bktleXMiLCJzeW0iLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJpdGVyIiwiX2l0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVNwcmVhZCIsIlVQUEVSQ0FTRV9SRSIsIlVQUEVSQ0FTRV9SRV9UT19LRUJBQiIsIm1hdGNoIiwiaXNVbml0bGVzc051bWJlciIsInByZWZpeGVzIiwicHJlZml4IiwicHJlZml4S2V5Iiwic3RyaW5naWZ5VmFsdWUiLCJzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZSIsImltcG9ydGFudGlmeSIsImhhc2hTdHJpbmciLCJNQVBfRVhJU1RTIiwiT3JkZXJlZEVsZW1lbnRzIiwiZWxlbWVudHMiLCJrZXlPcmRlciIsIl9wcm90byIsInNob3VsZFJlb3JkZXIiLCJuZXN0ZWQiLCJfbmVzdGVkIiwiYWRkU3R5bGVUeXBlIiwic3R5bGVUeXBlIiwiX3RoaXMiLCJ1bndyYXBFeHBvcnRzIiwiY3JlYXRlQ29tbW9uanNNb2R1bGUiLCJmbiIsImNhcGl0YWxpemVTdHJpbmdfMSIsInByZWZpeFByb3BlcnR5XzEiLCJwcmVmaXhQcm9wZXJ0aWVzIiwicHJvcGVydHkiLCJuZXdTdHlsZSIsInJlcXVpcmVkUHJlZml4ZXMiLCJjYXBpdGFsaXplZFByb3BlcnR5IiwiX2NhcGl0YWxpemVTdHJpbmcyIiwic3R5bGVQcm9wZXJ0eSIsImoiLCJwcmVmaXhWYWx1ZV8xIiwicGx1Z2lucyIsIm1ldGFEYXRhIiwicHJvY2Vzc2VkVmFsdWUiLCJhZGROZXdWYWx1ZXNPbmx5XzEiLCJhZGRJZk5ldyIsInZhbHVlcyIsImlzT2JqZWN0XzEiLCJjcmVhdGVQcmVmaXhlcl8xIiwiX3JlZiIsInByZWZpeE1hcCIsIl9pc09iamVjdDIiLCJjb21iaW5lZFZhbHVlIiwiX3ByZWZpeFZhbHVlMiIsIl9hZGROZXdWYWx1ZXNPbmx5MiIsIl9wcm9jZXNzZWRWYWx1ZSIsIl9wcmVmaXhQcm9wZXJ0eTIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiY3JlYXRlUHJlZml4ZXIiLCJiYWNrZ3JvdW5kQ2xpcF8xIiwiYmFja2dyb3VuZENsaXAiLCJpc1ByZWZpeGVkVmFsdWVfMSIsInJlZ2V4IiwiY2FsY18xIiwiX2lzUHJlZml4ZWRWYWx1ZTIiLCJjYWxjIiwiY3Jvc3NGYWRlXzEiLCJjcm9zc0ZhZGUiLCJjdXJzb3JfMSIsImdyYWIiLCJncmFiYmluZyIsImN1cnNvciIsImZpbHRlcl8xIiwiZmxleF8xIiwiZmxleGJveElFXzEiLCJhbHRlcm5hdGl2ZVByb3BzIiwiYWx0ZXJuYXRpdmVWYWx1ZXMiLCJmbGV4U2hvcnRoYW5kTWFwcGluZ3MiLCJtc0ZsZXgiLCJmbGV4VmFsdWVzIiwiYWxpZ25Db250ZW50IiwiYWxpZ25TZWxmIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleEJhc2lzIiwiYXV0byIsImluaGVyaXQiLCJpbml0aWFsIiwibm9uZSIsInVuc2V0IiwiZmxleGJveElFIiwiZmxleGJveE9sZF8xIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0Qm94RGlyZWN0aW9uIiwid3JhcCIsImZsZXhXcmFwIiwiZmxleGJveE9sZCIsImdyYWRpZW50XzEiLCJncmFkIiwiZ3JhZGllbnQiLCJncmlkXzEiLCJfc2xpY2VkVG9BcnJheSIsInNsaWNlSXRlcmF0b3IiLCJpc1NpbXBsZVBvc2l0aW9uVmFsdWUiLCJkaXNwbGF5VmFsdWVzIiwicHJvcGVydHlDb252ZXJ0ZXJzIiwicHJvcGVydHlDb252ZXJ0ZXIiLCJhbGlnbm1lbnRWYWx1ZXMiLCJncmlkIiwibXNHcmlkUm93QWxpZ24iLCJtc0dyaWRDb2x1bW4iLCJfdmFsdWUkc3BsaXQkbWFwIiwicG9zaXRpb24iLCJfdmFsdWUkc3BsaXQkbWFwMiIsIm1zR3JpZENvbHVtblNwYW4iLCJtc0dyaWRSb3ciLCJfdmFsdWUkc3BsaXQkbWFwMyIsIl92YWx1ZSRzcGxpdCRtYXA0IiwibXNHcmlkUm93U3BhbiIsImdyaWRUZW1wbGF0ZUNvbHVtbnMiLCJtc0dyaWRDb2x1bW5zIiwiZ3JpZFRlbXBsYXRlUm93cyIsIm1zR3JpZFJvd3MiLCJqdXN0aWZ5U2VsZiIsIm1zR3JpZENvbHVtbkFsaWduIiwiaW1hZ2VTZXRfMSIsImltYWdlU2V0IiwibG9naWNhbF8xIiwiYWx0ZXJuYXRpdmVQcm9wTGlzdCIsIm1hcmdpbkJsb2NrU3RhcnQiLCJtYXJnaW5CbG9ja0VuZCIsIm1hcmdpbklubGluZVN0YXJ0IiwibWFyZ2luSW5saW5lRW5kIiwicGFkZGluZ0Jsb2NrU3RhcnQiLCJwYWRkaW5nQmxvY2tFbmQiLCJwYWRkaW5nSW5saW5lU3RhcnQiLCJwYWRkaW5nSW5saW5lRW5kIiwiYm9yZGVyQmxvY2tTdGFydCIsImJvcmRlckJsb2NrU3RhcnRDb2xvciIsImJvcmRlckJsb2NrU3RhcnRTdHlsZSIsImJvcmRlckJsb2NrU3RhcnRXaWR0aCIsImJvcmRlckJsb2NrRW5kIiwiYm9yZGVyQmxvY2tFbmRDb2xvciIsImJvcmRlckJsb2NrRW5kU3R5bGUiLCJib3JkZXJCbG9ja0VuZFdpZHRoIiwiYm9yZGVySW5saW5lU3RhcnQiLCJib3JkZXJJbmxpbmVTdGFydENvbG9yIiwiYm9yZGVySW5saW5lU3RhcnRTdHlsZSIsImJvcmRlcklubGluZVN0YXJ0V2lkdGgiLCJib3JkZXJJbmxpbmVFbmQiLCJib3JkZXJJbmxpbmVFbmRDb2xvciIsImJvcmRlcklubGluZUVuZFN0eWxlIiwiYm9yZGVySW5saW5lRW5kV2lkdGgiLCJsb2dpY2FsIiwicG9zaXRpb25fMSIsInNpemluZ18xIiwicHJvcGVydGllcyIsIm1heEhlaWdodCIsIm1heFdpZHRoIiwiY29sdW1uV2lkdGgiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInNpemluZyIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJjYWNoZSIsInRvSHlwaGVuTG93ZXIiLCJfaHlwaGVuYXRlU3R5bGVOYW1lIiwiZnJlZXplIiwiaE5hbWUiLCJoeXBoZW5hdGVQcm9wZXJ0eV8xIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZTIiLCJ0cmFuc2l0aW9uXzEiLCJwcm9wZXJ0eVByZWZpeE1hcCIsIm91dHB1dFZhbHVlIiwibXVsdGlwbGVWYWx1ZXMiLCJzaW5nbGVWYWx1ZSIsImRhc2hDYXNlUHJvcGVydHkiLCJfaHlwaGVuYXRlUHJvcGVydHkyIiwicExlbiIsInVuc2hpZnQiLCJwcmVmaXhNYXBwaW5nIiwicHJlZml4VmFsdWUiLCJ3ZWJraXRPdXRwdXQiLCJtb3pPdXRwdXQiLCJ0cmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXRUcmFuc2l0aW9uIiwiV2Via2l0VHJhbnNpdGlvblByb3BlcnR5IiwiTW96VHJhbnNpdGlvbiIsIk1velRyYW5zaXRpb25Qcm9wZXJ0eSIsIldlYmtpdCIsIk1veiIsIm1zIiwid20iLCJ3bXMiLCJ3bW1zIiwicHJlZml4QWxsIiwiZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMiLCJzZWxlY3RvciIsImJhc2VTZWxlY3RvciIsImdlbmVyYXRlU3VidHJlZVN0eWxlcyIsImdlbmVyYXRlZCIsImdlbmVyYXRlQ1NTIiwic3R5bGVUeXBlcyIsInNlbGVjdG9ySGFuZGxlcnMiLCJzdHJpbmdIYW5kbGVycyIsInVzZUltcG9ydGFudCIsIm1lcmdlZCIsInBsYWluRGVjbGFyYXRpb25zIiwiZ2VuZXJhdGVkU3R5bGVzIiwic29tZSIsImhhbmRsZXIiLCJuZXdTZWxlY3RvciIsIndhcm4iLCJnZW5lcmF0ZWRSdWxlc2V0IiwiZ2VuZXJhdGVDU1NSdWxlc2V0IiwidHJhbnNmb3JtUnVsZSIsInRyYW5zZm9ybVZhbHVlIiwiYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyIiwiYWNjIiwiZGVjbGFyYXRpb25zIiwic3RyaW5nSGFuZGxlcktleXMiLCJydW5TdHJpbmdIYW5kbGVycyIsIm9yaWdpbmFsRWxlbWVudHMiLCJyZWR1Y2UiLCJwcmVmaXhlZEVsZW1lbnRzIiwiZWxlbWVudE5hbWVzIiwib3JpZ2luYWxTdHlsZSIsIm9yaWdpbmFsSW5kZXgiLCJydWxlcyIsInN0eWxlVGFnIiwiZm9udEZhbWlseSIsIm5hbWVNYXAiLCJpbmplY3RTdHlsZU9uY2UiLCJmaW5hbFZhbCIsInZhbFZhbCIsInZhbEtleSIsImluamVjdEdlbmVyYXRlZENTU09uY2UiLCJhbHJlYWR5SW5qZWN0ZWQiLCJpbmplY3Rpb25CdWZmZXIiLCJpc0J1ZmZlcmluZyIsImdlbmVyYXRlZENTUyIsIl9pbmplY3Rpb25CdWZmZXIiLCJmbHVzaFRvU3R5bGVUYWciLCJkZWZpbml0aW9ucyIsInJlc2V0SW5qZWN0ZWRTdHlsZSIsImZsdXNoVG9BcnJheSIsInJldCIsImNzc1J1bGVzIiwic2hlZXQiLCJpbnNlcnRSdWxlIiwibnVtUnVsZXMiLCJydWxlIiwiaW5uZXJUZXh0IiwiaW5qZWN0U3R5bGVUYWciLCJhZGRSZW5kZXJlZENsYXNzTmFtZXMiLCJjbGFzc05hbWVzIiwiY2xhc3NOYW1lIiwicHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMiLCJzdHlsZURlZmluaXRpb25zIiwiY2xhc3NOYW1lQml0cyIsImRlZmluaXRpb25CaXRzIiwiZGVmIiwiX25hbWUiLCJfZGVmaW5pdGlvbiIsIl9sZW4iLCJpbmplY3RBbmRHZXRDbGFzc05hbWUiLCJ1bm1pbmlmaWVkSGFzaEZuIiwiaGFzaEZuIiwiU3R5bGVTaGVldCIsInNoZWV0RGVmaW5pdGlvbiIsIm1hcHBlZFNoZWV0RGVmaW5pdGlvbiIsInN0cmluZ1ZhbCIsInJlaHlkcmF0ZSIsInJlbmRlcmVkQ2xhc3NOYW1lcyIsIlN0eWxlU2hlZXRTZXJ2ZXIiLCJyZW5kZXJTdGF0aWMiLCJyZW5kZXJGdW5jIiwic3RhcnRCdWZmZXJpbmciLCJodG1sIiwiQXBocm9kaXRlIiwibWFrZUV4cG9ydHMiLCJleHRlbnNpb25zIiwiZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyIsImV4dGVuc2lvbiIsInNlbGVjdG9ySGFuZGxlciIsIlN0eWxlU2hlZXRUZXN0VXRpbHMiLCJtaW5pZnkiLCJzaG91bGRNaW5pZnkiLCJfa2V5IiwicmVzZXQiLCJOb3RpZmljYXRpb25JdGVtIiwiUmVhY3QiLCJtYXJrQXNSZWFkIiwidHlwZVN0eWxlIiwic3R5bGVzIiwidXJnZW50IiwiTmFOIiwicHJvcFR5cGVzIiwic2NyZWVuU2l6ZSIsImxpc3RJdGVtU21hbGwiLCJsaXN0U3R5bGUiLCJib3JkZXJCb3R0b20iLCJwYWRkaW5nIiwiZm9udFNpemUiLCJOb3RpZmljYXRpb25zIiwibmV4dFByb3BzIiwibGlzdE5vdGlmaWNhdGlvbnMiLCJsb2ciLCJkaXNwbGF5RHJhd2VyIiwibWVudVBTdHlsZSIsIm1lbnVJdGVtUE5vU2hvdyIsIm1lbnVJdGVtUFNob3ciLCJtZW51SXRlbSIsIm5vdGlmaWNhdGlvbnMiLCJiYWNrZ3JvdW5kIiwiYm9yZGVyIiwicmlnaHQiLCJjbG9zZUljb24iLCJhbHQiLCJub3RpZmljYXRpb25zQnV0dG9uSW1hZ2UiLCJub3RpZmljYXRpb25zUCIsIm5vdGlmaWNhdGlvbnNVTCIsIm5vdGlmaWNhdGlvbiIsIk5vdGlmaWNhdGlvbkl0ZW1TaGFwZSIsInRleHRBbGlnbiIsIm1hcmdpblJpZ2h0IiwiZmxvYXQiLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW4iLCJtYXJnaW5Ub3AiLCJoZWFkZXIiLCJoZWFkZXJJbWciLCJob2xiZXJ0b25fbG9nbyIsIkJvZHlTZWN0aW9uIiwidGl0bGUiLCJib2R5U2VjdGlvbiIsImJvZHlTZWN0aW9uSDIiLCJib3hTaXppbmciLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20iLCJib2R5U2VjdGlvbldpdGhNYXJnaW4iLCJsb2dpbiIsIm1hcmdpbkxlZnQiLCJsb2dpbklucHV0IiwiaHRtbEZvciIsInJvd1N0eWxlcyIsImJhY2tncm91bmRDb2xvciIsImhlYWRlclJvd1N0eWxlcyIsIkNvdXJzZUxpc3RSb3ciLCJpc0hlYWRlclN0eWxlIiwiaXNIZWFkZXIiLCJ0ZXh0Rmlyc3RDZWxsIiwidGV4dFNlY29uZENlbGwiLCJ0YWJsZUl0ZW1TdHlsZSIsIkNvdXJzZUxpc3RUaCIsIkNvdXJzZUxpc3RUZCIsImNvbFNwYW4iLCJDb3Vyc2VMaXN0VGhTcGFuMiIsImNzc1ZhcnMiLCJib3JkZXJUb3AiLCJjcmVkaXQiLCJDb3Vyc2VMaXN0IiwibGlzdENvdXJzZXMiLCJjb3Vyc2UiLCJDb3Vyc2VTaGFwZSIsImJvcmRlckNvbGxhcHNlIiwiZ2V0RnVsbFllYXIiLCJBcHAiLCJoYW5kbGVLZXlDb21iaW5hdGlvbiIsImFsZXJ0IiwibG9nT3V0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImlzTG9nZ2VkSW4iLCJhcHAiLCJmb290ZXIiLCJib3R0b20iLCJmb250U3R5bGUiLCJSZWFjdERPTSIsImdldEVsZW1lbnRCeUlkIl0sInNvdXJjZVJvb3QiOiIifQ==